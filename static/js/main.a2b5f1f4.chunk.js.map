{"version":3,"sources":["App.js","components/Main/MainStyle.js","components/Title/TitleStyle.js","components/Text/TextStyle.js","components/Text/Text.js","components/Title/Title.js","components/Notification/NotificationStyle.js","components/Notification/Notification.js","components/Bottom/BottomStyle.js","components/CourseSelector/CourseSelectorStyle.js","models/lesson.js","components/CourseSelector/CourseSelector.js","components/Bottom/Bottom.js","components/Course/CourseStyle.js","components/Verification/VerificationStyle.js","components/Verification/Verification.js","models/test.js","components/Course/Course.js","components/Main/Main.js","components/CoursePage/CoursePageStyle.js","data/TestData.js","components/CoursePage/CoursePage.js","components/Test/TestStyle.js","components/Test/Test.js","index.js"],"names":["App","children","this","props","Component","withRouter","observer","MainStyle","styled","div","margin","firstEnter","width","TitleStyle","TextStyle","p","nowrap","size","type","weight","Text","defaultProps","Title","main","icon","faChevronLeft","onClick","history","goBack","title","NotificationStyle","Notification","notifications","state","noti_text","setTimeout","setState","BottomBack","BottomBackground","bottomOpened","BottomStyle","BottomQuestion","CourseSelectorStyle","configure","enforceActions","LessonModel","lessons","lesson","name","code","language","item","value","findIndex","o","push","find","index","splice","decorate","observable","addLesson","action","deleteFromLessons","getLessonData","set","CourseSelector","active","path","location","pathname","course","map","data","i","className","onAddLesson","key","Bottom","faPlus","faChevronRight","CourseStyle","TestStyle","CourseVerification","onDelete","VerificationStyle","VerificationInner","VerificationYes","VerificationNo","Verification","TestModel","appliedTests","test","id","progress","date","questionsData","correctAnswers","wrongAnswers","submittedTest","length","a","Date","toISOString","slice","addNewTest","setTest","submitTest","Course","nextPath","onOpenTest","test_id","faCheckCircle","color","onChangeDirection","onClose","faTimes","Main","courses","notificationCounter","window","innerWidth","disableBrowserBackButton","TransitionGroup","CSSTransition","timeout","classNames","CoursePageStyle","TestData","question","options","answer","CoursePage","tests","getTests","z","onAddNewTest","TestQuestion","TestOptions","TestRusults","Test","loadTest","currentQuestion","questions","answers","correctAnswer","nextQuestionHandler","userAnswer","score","blankAnswers","indexInBlank","indexOf","filter","sort","nextQ","finishHandler","elHeight","testEnd","divElement","clientHeight","prevProps","prevState","isAnswerCorrect","ref","style","faTimesCircle","option","setAnswer","bridge","send","ReactDOM","render","basename","exact","document","getElementById"],"mappings":"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","file":"static/js/main.a2b5f1f4.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n//mobx\nimport { observer } from 'mobx-react'\nimport { withRouter } from 'react-router-dom'\nimport './App.css'\n\nclass App extends Component {\n\n\t\n\trender() {\n\t\tconst { children} = this.props\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{children}\n\t\t\t</>\n\t)\n}\n}\n\nexport default withRouter(observer(App));","import styled from 'styled-components'\n\nexport const MainStyle = styled.div \n`   \n    padding: 1rem;\n    .course-list {\n        margin-top: 1rem;\n    }\n    .items-enter {\n        opacity: 0;\n    }\n    .items-enter-active {\n        opacity: 1;\n        transition: 0.2s;\n    }\n\n    .items-exit {\n        opacity: 1;\n    }\n    .items-exit-active {\n        opacity: 0;\n        transition: 0.2s;\n    }\n\n    .main-header {\n        background: #ffb600;\n        margin: -1rem -1rem 0 -1rem;     \n        padding: 1rem;\n        height: 20vh;  \n        border-radius: 0 0 25px 25px; \n    }\n\n        ${props => (props.margin === 0 && !props.firstEnter)  &&\n        `\n        .notification {\n            width: calc(${props.width}px - 2rem);\n            animation-name: first;\n            animation-duration: 0.8s;\n        }\n        @keyframes first {\n            0% {margin-left: 0;}\n            20% {margin-left: -${props.width}px;}\n            100% {margin-left: 0}\n        }\n        `\n    }\n        ${props => (props.margin === 1 && !props.firstEnter)  &&\n        `\n        .notification {\n            width: calc(${props.width}px - 2rem);\n            animation-name: second;\n            animation-duration: 0.8s;\n        }\n        @keyframes second {\n            0% {margin-left: 0;}\n            20% {margin-left: -${props.width}px;}\n            100% {margin-left: 0}\n        }\n    `\n    }\n\n`","import styled from 'styled-components'\n\nexport const TitleStyle = styled.div `\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: center;\n    grid-gap: 1rem;\n`","import styled from 'styled-components'\n\nconst TextStyle = styled.p \n`\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    white-space: ${props => props.nowrap ? 'nowrap' : 'normal'};\n    line-height: ${props => \n        props.size === 'medium' || props.size === 'small' || props.size === 'smallest' ?\n        '1.5'\n        :\n        props.size === 'big' ?\n        '1.25'\n        :\n        props.size === 'large'? \n        `1.25`\n        :\n        props.size === 'largest' &&\n        '1'\n    };\n    font-size: ${props => \n        props.size === 'small' ?\n        '15px'\n        :\n        props.size === 'default' ?\n        '18px'\n        :\n        props.size === 'big' &&\n        '24px'\n    };\n    color: ${props => \n        props.type === 'primary' ?\n        '#000'\n        :\n        props.type === 'secondary' ?\n        '#6a6a6a'\n        :\n        props.type === 'brand' &&\n        '#ffb600'\n    };\n    font-weight: ${props => \n        props.weight === 'bold' ? 'bold'\n        :\n        props.weight === 'light' && 'regular'\n    };\n\n`\n\nexport default TextStyle;","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nimport TextStyle from './TextStyle'\n\nconst Text = ({ children, \n                size,\n                type, \n                weight, \n                nowrap }) => {\n\n        return (\n            <>\n                <TextStyle\n                    size={size}\n                    type={type}\n                    weight={weight}\n                    nowrap={nowrap}\n                    >\n                    {children}\n                </TextStyle>\n            </>\n        )\n}\n\nText.propTypes = {\n    children: PropTypes.node.isRequired,\n\n    size: PropTypes.oneOf([\n        'small',\n        'default',\n        'big'\n        ]).isRequired,\n\n    type: PropTypes.oneOf([\n        'inverted',\n        'default',\n        'primary',\n        'secondary'\n    ]).isRequired,\n\n    weight: PropTypes.oneOf([\n        'bold',\n        'light'\n    ]).isRequired,\n\n    nowrap: PropTypes.bool\n}\n\nText.defaultProps = {\n    children: null,\n    size: 'small',\n    type: 'default',\n    weight: 'light',\n    nowrap: false\n}\n\nexport default Text;","import React, { Component } from 'react'\nimport { TitleStyle } from './TitleStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\n\nimport Text from '../Text/Text'\n\nclass Title extends Component {\n\n\n    \n    render() {\n        return (\n            <>\n            { this.props.main ?\n            <>\n            <Text size='big' weight='bold'>Ваши предметы</Text>\n            </>\n            :\n            <>\n            <TitleStyle>\n                <FontAwesomeIcon icon={faChevronLeft} onClick={() => this.props.history.goBack()} />\n                <Text size='big' weight='bold'>{this.props.title}</Text>\n            </TitleStyle>\n            </>\n            }\n            </>\n        )\n    }\n} \nexport default withRouter(Title)","import styled from 'styled-components'\n\nexport const NotificationStyle = styled.div `\n    padding-top: 1rem;\n`","import React, { Component } from 'react'\nimport { NotificationStyle } from './NotificationStyle'\nimport Text from '../Text/Text'\n\nclass Notification extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            noti_text: this.notifications[this.props.type]\n        }\n\n    }\n\n    notifications = [   \n        'Для начала работы - надо указать новый предмет',\n        'В карточке будут храниться все ваши тестовики и прогресс. Кликните на карту, что бы начать.',\n        'Самое время начать разбирать тестовики. Нажмите на кнопку снизу, что бы начать',\n        'Ваш тест готов. Можете кликнуть на карточку и начинать работать'\n        ]\n\n    componentWillUpdate() {\n        if(this.props.type == 0 || this.props.type == 1)\n            setTimeout(() => {this.setState({noti_text: this.notifications[this.props.type]})}, 300)\n        else \n            setTimeout(() => {this.setState({noti_text: this.notifications[this.props.type]})}, 0)\n\n    }\n            //тут надо буде еще ебнуьб условие для this.props.type 1 || 2    \n\n    // componentWillMount() {\n        // alert(this.props.type)\n    // }\n    render() {           \n        return (\n            <>\n                <NotificationStyle>\n                    <Text size='small'>{this.state.noti_text}</Text>\n                </NotificationStyle>\n            </>\n\n        )\n    }\n}\n\nexport default Notification","import styled from 'styled-components'\n\n\nexport const BottomBack = styled.div \n`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    z-index: -500;\n`\n\nexport const BottomBackground = styled.div\n`\n    display: grid;\n    ${props => !props.bottomOpened && \n        `\n        height: 10px;\n        `\n    }\n`\n\nexport const BottomStyle = styled.div `\n\n    display: grid;\n    margin: 0 1rem;\n    background: #fff;\n    padding-bottom: 1rem;\n    \n    \n    transition: 0.1s;\n    \n    .caption {\n        border-radius: 15px;\n\n        display: grid;\n        background: #FFB600;\n        padding: 1rem;\n        justify-content: center;\n        position: relative;\n        z-index: 999;\n        div {\n            display: grid;\n            grid-template-columns: auto 1fr;\n            align-items: center;\n            grid-gap: 0.5rem;\n        }\n    }\n\n    .course-selector {\n        position: relative;\n    }\n    .course-selector-inner {\n        position: absolute;\n        width: 100%;\n    }\n    ${props => props.bottomOpened ? \n        `\n        .course-selector-inner {\n                bottom: 0;\n                opacity: 1;\n                transition: 0.2s;\n                z-index: 1;\n            }\n        ` \n        : \n        `\n            .course-selector-inner {\n                opacity: 0;\n                bottom: -10rem;\n                transition: 0.2s;\n                z-index: -999;\n            }\n        `\n    }\n\n`\n\n    export const BottomQuestion = styled.div \n`\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    `\n    export const BottomCourseSelector = styled.div \n`\n\n`","import styled from 'styled-components'\n\n\nexport const CourseSelectorStyle = styled.div `\nbackground: rgb(251,251,251);\nbackground: linear-gradient(180deg, rgba(251,251,251,1) 0%, rgba(251,251,251,1) 57%, rgba(251,251,251,0.9037814955083596) 72%, rgba(251,251,251,0) 100%);    display: grid;\n    grid-gap: 0.5rem;\n    border-radius: 15px 15px 0 0;\n    padding: 1rem;\n    .selector-item {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        padding: 0.5rem 0;\n    }\n`","import { observable, configure, action, decorate } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass LessonModel {\n\n    lessons = []\n    lesson = {\n        name: null,\n        code: null,\n        language: null\n    }\n\n\n    set(item, value) {\n        this[item] = value\n    }\n\n    addLesson(lesson){\n        let { code } = lesson\n        if(this.lessons.findIndex(o => o.code === code) === -1) {\n            this.lessons.push(lesson)\n        }\n    }\n\n    getLessonData(code) {\n        // if(this.lesson.name === null){\n        this.lesson = this.lessons.find(o => o.code === code)\n        // }\n    }\n\n    deleteFromLessons(code) {\n        if(code){\n            let index = this.lessons.findIndex(o => o.code === code)\n            return this.lessons.splice(index, 1)\n        }\n    }\n}\n\ndecorate(LessonModel, {\n    lessons: observable,\n    lesson: observable,\n    addLesson: action,\n    deleteFromLessons: action,\n    getLessonData: action,\n    set: action\n})\n\nexport default new LessonModel()","import React, { Component } from 'react'\nimport { \n    CourseSelectorStyle\n} from './CourseSelectorStyle'\nimport Text from '../Text/Text'\nimport { withRouter } from 'react-router-dom'\n\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass CourseSelector extends Component {\n\n    constructor(props) {\n        super()\n        \n        this.state = {\n            active: true,\n        }\n    }    \n\n    nextPath(path) {\n        if(path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n\n    onAddLesson(lesson) {\n        LessonModel.addLesson(lesson)\n    }\n \n    \n    render() {\n        let courses = [\n            {\n                name: \"Казахстан тарихы\",\n                language: \"Каз\",\n                code: \"KHK\"\n            },\n            {\n                name: \"История Казахстана\",\n                language: \"Рус\",\n                code: \"KZR\"\n            },\n            {\n                name: \"Математикалк сауаттылык\",\n                language: \"Каз\",\n                code: \"MHR\"\n            }\n        ]\n\n        let course = courses.map((data, i) => (\n            <div className='selector-item'\n            onClick={() => this.onAddLesson(data)}\n            key={i}>\n                <Text size='default'>{data.name}</Text>\n                <Text size='default'>({data.language})</Text>\n            </div>\n        ))\n        \n    \n        return (\n            <>  \n                <CourseSelectorStyle>\n                        {course}\n                </CourseSelectorStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CourseSelector))","import React, { Component } from 'react'\nimport { BottomStyle, BottomQuestion, BottomBackground,\nBottomBack } from './BottomStyle'\nimport Text from '../Text/Text'\nimport CourseSelector from '../CourseSelector/CourseSelector'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport {  withRouter } from 'react-router-dom'\n\nclass Bottom extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            bottomOpened: false\n        }\n    }\n\n    render() {\n        return (\n            <>\n            {this.props.type === \"main\" &&\n            <BottomBack>\n                <BottomBackground onClick={() => this.setState({bottomOpened: false})} bottomOpened={this.state.bottomOpened}></BottomBackground>\n                <BottomStyle \n                bottomOpened={this.state.bottomOpened}>\n                    \n                        <div className='course-selector' onClick={() => this.setState({bottomOpened: false})}> \n                            <div \n                            className='course-selector-inner'>\n                                <CourseSelector></CourseSelector>\n                            </div>\n                        </div>\n                        <div className='caption' onClick={() => this.setState({bottomOpened: true})}>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n            </BottomBack>\n            }\n            {/* {this.props.type === 'session' &&\n            <>\n                <BottomStyle onClick={() => this.setState({bottomOpened: true})}>\n                        {!this.state.bottomOpened ?\n                        <BottomInner>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                        </BottomInner>\n                        :\n                        <BottomCourseSelector>\n                        <div className='course-selector'></div>\n                         <div className='caption'>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                        </div>\n                        </BottomCourseSelector>\n                        }\n                </BottomStyle>\n            </>\n            } */}\n            {this.props.type === 'new-test' &&\n                <>\n                <BottomQuestion>\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Начать новый тест</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'next-question' &&\n                <>\n                <BottomQuestion>\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Следующий вопрос</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'submit' &&\n                <>\n                <BottomQuestion \n                // onClick={() => this.props.history.goBack()}\n                >\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Submit</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {/* \n            {this.props.type === 'end-test' &&\n                <>\n                <BottomStyle>\n                    <BottomInner>\n                        <div className='caption'>\n                            <FontAwesomeIcon icon={faChevronLeft} />\n                            <Text size='default'>Go back to MyTests</Text>\n                        </div>\n                    </BottomInner>\n                </BottomStyle>\n                </>\n            }  */}\n            </>\n        )\n    }\n}\n\nexport default withRouter(Bottom)","import styled from 'styled-components'\n\nexport const CourseStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem;\n\n    .card {\n        display: grid;\n        grid-template-columns: 1fr auto;\n    }\n    \n    .title {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        grid-gap: 10px;\n    }\n\n    .progress {\n        display: grid;\n        grid-template-columns: auto auto;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n\n`\nexport const TestStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem; \n      \n    .progress {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n`\nexport const CourseVerification = styled.div\n`\n    position: absolute;\n    height: 100vh;\n    width: 100vw;\n    top: 0;\n    ${props => props.onDelete ?\n        `\n            left: 0;\n            opacity: 1;\n            transition: opacity 0.3s;\n        `\n    :\n        `\n            opacity: 0;\n            transition: opacity 0.3s;\n            left: -1000px;\n        `\n    }\n`","import styled from 'styled-components'\n\nexport const VerificationStyle = styled.div \n`\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.2);\n`\nexport const VerificationInner = styled.div\n`\n    background: #fff;\n    padding: 1rem;\n    border-radius: 10px;\n    margin: 0 2rem;\n\n    .options {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        margin-top: 1rem;\n        grid-gap: 1rem;\n    }\n`\nexport const VerificationYes = styled.div\n`\n    display: grid;\n    justify-content: center;\n    background: #f0f0f0;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n`\nexport const VerificationNo = styled.div\n`\n    display: grid;\n    justify-content: center;\n    padding: 0.5rem 1rem;\n    background: #ffb600;\n    border-radius: 5px;\n`","import React, { Component } from 'react'\nimport { VerificationStyle, VerificationInner, VerificationYes, VerificationNo } from './VerificationStyle'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass Verification extends Component {\n    \n    onDelete(code) {\n        LessonModel.deleteFromLessons(code)\n    }\n\n    // componentDidMount() {\n        // LessonModel.getLessonData(this.props.match.params.id)\n    // }\n\n    render() {\n        let { name, language, code } = this.props.lesson\n        return (\n            <>\n                <VerificationStyle>\n                    <VerificationInner>\n                        <Text size='default'>Вы уверены, что хотите удалить предмет {`${name} (${language})`} ?</Text>\n                        <div className='options'>\n                            <VerificationYes onClick={() => this.onDelete(code)}>Да</VerificationYes>\n                            <VerificationNo>Нет</VerificationNo>\n                        </div>\n                    </VerificationInner>\n                </VerificationStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Verification))","import { observable, decorate, action, configure } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass TestModel {\n    appliedTests = []\n    test = {\n        id: null,\n        progress: null,\n        date: null,\n        code: null,\n        questionsData: [],\n        correctAnswers: [],\n        wrongAnswers: []\n    }\n\n    submittedTest = {}\n\n\n    set(item, value){\n        this[item] = value\n    }\n\n    addNewTest(test){\n        let id = this.appliedTests.length + 1 \n        test.id = id\n        \n        let a = new Date().toISOString()\n        test.date = a.slice(8, 10) + '/' + a.slice(5, 7) + '/' + a.slice(0, 4)\n        \n        test.progress = 0\n\n        \n        this.appliedTests.push(test)\n    }\n\n    getTests(){\n        return this.appliedTests\n    }\n\n    setTest(id){\n        this.test = this.appliedTests.find(o => o.id == id) \n    }\n\n    submitTest(test){\n        this.submittedTest = test\n        let a = new Date().toISOString()\n        test.date = a.slice(8, 10) + '/' + a.slice(5, 7) + '/' + a.slice(0, 4)\n        \n        let id = this.appliedTests.findIndex(o => o.id == test.id)\n\n        this.appliedTests[id] = test\n    }\n}\n\ndecorate(TestModel, {\n    appliedTests: observable,\n\n    addNewTest: action,\n    setTest: action,\n    submitTest: action,\n    set: action\n})\n\nexport default new TestModel\n","import React, { Component } from 'react'\nimport { CourseStyle, TestStyle, CourseVerification } from './CourseStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport Verification from '../Verification/Verification'\nimport LessonModel from '../../models/lesson'\nimport TestModel from '../../models/test'\nimport { CSSTransition } from 'react-transition-group'\n\nclass Course extends Component {  \n    \n    state = {\n        onDelete: false\n    }\n\n    nextPath(path) {\n        if(path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n    \n    onClose() {\n        this.setState({\n            onDelete: true\n        })\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onChangeDirection(id) {\n        this.nextPath('/course/' + id)\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onOpenTest(id) {\n        TestModel.setTest(id)\n        this.nextPath('/test/' + id)\n        //need to add modes for the test\n    }\n    \n    render() {\n        return (\n            <>\n                {!this.props.test ?\n                <>\n                <CourseStyle onDelete={this.state.onDelete}>\n                    <div className='card' onClick={() => this.onChangeDirection(this.props.id)}>\n                    <div className='title'>\n                        <Text size='default'>{this.props.title}</Text>\n                        <Text size='default'>({this.props.language})</Text>\n                    </div>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{this.props.progress}%</div>\n                    </div>\n                    </div>\n                    <div className='delete' onClick={() => this.onClose()}>\n                        <FontAwesomeIcon icon={faTimes} color='#999'/>\n                    </div>\n                    <CourseVerification onDelete={this.state.onDelete} onClick={() => this.setState({onDelete: false})}>\n                        <Verification lesson={LessonModel.lesson}></Verification>\n                    </CourseVerification>\n                </CourseStyle>\n                </>\n                :\n                <>\n                <TestStyle onClick={() => this.onOpenTest(this.props.test_id)}>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{ this.props.progress }%</div>\n                    </div>\n                    <div className='date'>{ this.props.date }</div>\n                </TestStyle>\n                </>\n                }\n            </>\n        )\n    }\n}\n\n export default withRouter(Course)","import React, { Component, useRef, useLayoutEffect, useState } from 'react'\nimport { MainStyle } from './MainStyle'\nimport Title from '../Title/Title'\nimport Notification from '../Notification/Notification'\nimport Bottom from '../Bottom/Bottom'\nimport Course from '../Course/Course'\nimport LessonModel from '../../models/lesson'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\nimport {observer} from 'mobx-react'\n\n\nclass Main extends Component {\n\n\n    constructor() {\n        super()\n        this.state = {\n            width: null,\n            notificationCounter: 0,\n            firstEnter: true,\n        }\n    }\n    \n    courses = LessonModel.lessons\n    \n    \n\n    componentWillReceiveProps() {\n        this.setState({width: window.innerWidth}) \n    } \n\n    componentDidMount() {\n        disableBrowserBackButton();\n    }\n\n    componentDidUpdate() {\n\n        if(this.state.notificationCounter == 0 && this.courses.length > 0)\n                this.setState({notificationCounter: 1})\n\n        if(this.state.notificationCounter == 1 && this.courses.length == 0) \n                this.setState({notificationCounter: 0})\n\n        if(this.state.firstEnter) {\n            this.setState({firstEnter: false})\n        }\n    }\n    render() {\n              \n\n        return (\n            <>\n                <MainStyle \n                width={this.state.width}\n                margin={this.state.notificationCounter}\n                firstEnter={this.state.firstEnter}>\n                    <div className='main-header'>\n                        {/* {this.state.width} */}\n                    <Title main ></Title>\n                            <div className='notification' >\n                                <Notification type={this.state.notificationCounter}/>\n                            </div>\n                            </div>\n                        <div className='course-list'>\n                            <TransitionGroup>\n                        {\n                            this.courses.map((data, i) => (\n                                <CSSTransition\n                                timeout={200}\n                                classNames='items'\n                                key={i}\n                                >\n                                    <Course \n                                        title={data.name} \n                                        progress='0' \n                                        language={data.language} \n                                        id={data.code} \n                                        key={i}/> \n                                </CSSTransition>\n                            ))\n                         }\n                        </TransitionGroup>\n                        </div>\n                </MainStyle>\n                <Bottom type='main'/>\n            </>\n        )\n    }\n}\n\nexport default observer(Main)\n","import styled from 'styled-components'\n\nexport const CoursePageStyle = styled.div\n`   \n    padding: 1rem;\n    .test-list {\n        margin-top: 1rem;\n    }\n`","export const TestData = [\n    {\n        id: 0,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Административных условий', 'Равным образом рамки и место обучения кадров', 'Cистемы обучения кадров, соответствует насущным', 'Равным образом рамки и место обучения кадров', 'Равным образом рамки и место обучения кадров'],\n        answer: 'Административных условий'\n    },\n    {\n        id: 1,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Bassan', 'Shmargun', 'Lirinirill', 'Darnurda', 'Darnurda'],\n        answer: 'Bassan'\n    },\n    {\n        id: 2,\n        question: 'What is your age?',\n        options: ['1', '2', '3', '4'],\n        answer: '2'\n    },\n    {\n        id: 3,\n        question: 'What is your pussy?',\n        options: ['Assanpussy', 'Argunpussy', 'Chirillpussy', 'Argunpussy'],\n        answer: 'Chirillpussy'\n    },\n]","import React, { Component } from 'react'\nimport { CoursePageStyle } from './CoursePageStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport LessonModel from '../../models/lesson'\nimport Notification from '../Notification/Notification'\nimport Course from '../Course/Course'\nimport Bottom from '../Bottom/Bottom'\n\nimport { TestData } from '../../data/TestData'\nimport TestModel from '../../models/test'\nimport { observer } from 'mobx-react'\n\n\nclass CoursePage extends Component { \n    \n    constructor() {\n        super()\n        this.state = {\n            notificationCounter: 2,\n            tests: TestModel.appliedTests\n        }\n    }\n\n    \n    componentDidMount() {\n        if(this.state.tests.length > 0)\n            this.setState({notificationCounter: 3})\n        let tests = TestModel.getTests()\n        this.setState({ tests })\n    }\n\n    \n    onAddNewTest() {\n        let test = { code: 0  }\n        test.code = LessonModel.lesson.code\n        test.questionsData = TestData\n        TestModel.addNewTest(test)\n    }\n\n    render() {\n\n        let test = this.state.tests.map((data, i) => (\n            <Course test progress={data.progress} date={data.date} key={i} test_id={data.id}z />\n        ))\n\n        let { name, language } = LessonModel.lesson\n        \n        return (\n            <>\n                <CoursePageStyle>  \n                    {name ?\n                        <Title title={`${name} (${language})`}/>\n                        :\n                        <> hello </>\n                    }\n                    <Notification type={this.state.notificationCounter} />\n                        <div className='test-list'>\n                            {test}\n                        </div>\n                </CoursePageStyle>\n                <div onClick={() => this.onAddNewTest()}> \n                <Bottom type='new-test'/>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CoursePage))","import styled from 'styled-components'\n\nexport const TestStyle = styled.div \n`   \n    padding-bottom: 4rem;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    .test-content {\n        display: grid;\n    }\n    .test-header {\n        background: #FFB600;\n        padding: 1rem;\n        display: grid;\n        grid-template-rows: auto 1fr;\n        position: fixed;\n\n    }\n`\nexport const TestQuestion = styled.div\n`\n    margin-top: 1rem;\n\n    .test-content-inner {\n        position: relative;\n    }\n    .test-question-wrapper {\n        display: grid;\n        grid-template-columns: repeat(20, 1fr);\n        grid-template-rows: auto 1fr;\n        transition: transform 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    }\n    .test-question {\n        grid-gap: 0.5rem;\n        display: grid;\n        padding: 1rem;\n        width: calc(100vw - 4rem);\n        border-radius: 15px;\n        margin-right: 0.5rem;\n        background: #fff;\n        grid-template-rows: auto 1fr;\n    }\n    .status {\n        display: grid;\n        grid-template-columns: 1fr auto;\n    }\n    // .correct {\n        // background: rgba(130, 222, 139, 0.5);\n    // }\n    // .incorrect {\n        // background: rgba(255, 128, 128, 0.2);\n    // }\n`\nexport const TestOptions = styled.div \n`       \n    margin-top: ${props => props.margin}px;\n    width: calc(${props => props.width}px);\n    .test-option_wrapper-absolute {\n        position: absolute;\n        padding-bottom: 4rem;\n    }\n    .test-option-wrapper {\n        display: grid\n        grid-gap: 1rem;\n    }\n    .test-option {\n        background: #fafafa;\n        border-radius: 10px;\n        padding: 1rem;\n        margin: 1rem;\n    }   \n    .correct {\n        background: rgba(130, 222, 139, 0.5);\n    }\n    .incorrect {\n        background: rgba(255, 128, 128, 0.2);\n    }\n`\nexport const TestRusults = styled.div \n`\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-gap: 3rem;\n\n    .test-answer {\n        display: grid;\n        grid-gap: 1rem;\n    }\n    .test-answer_item {\n        padding-bottom: 1rem;\n    }\n`","import React, { Component } from 'react'\nimport { TestStyle, TestQuestion, TestOptions, TestRusults } from './TestStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport Bottom from '../Bottom/Bottom'\nimport Text from '../Text/Text'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { observer } from 'mobx-react'\nimport LessonModel from '../../models/lesson'\nimport TestModel from '../../models/test'\n\nclass Test extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: props.window,\n            elHeight: 0,\n            \n            options: [],\n            userAnswer: null,\n            currentQuestion: 0,\n            correctAnswer: null,\n            \n            id: TestModel.test.id,\n            questions: TestModel.test.questionsData.map(data => data.question),\n            score: 0,\n            \n            correctAnswers: [],\n            wrongAnswers: [],\n            blankAnswers: [],\n\n            testEnd: false\n        }\n    }\n    componentWillMount() {\n        this.setState({width: window.innerWidth})   \n    }\n    \n    \n    loadTest = () => {\n        const {currentQuestion} = this.state;\n        \n        this.setState(() => {\n            return {\n                questions: TestModel.test.questionsData.map(data => data.question),\n                options: TestModel.test.questionsData[currentQuestion].options,\n                answers: TestModel.test.questionsData[currentQuestion].answer,\n                correctAnswer: TestModel.test.questionsData[currentQuestion].answer\n            }\n        })\n    }\n    \n    componentDidMount() {\n        this.loadTest();\n\n        const elHeight = this.divElement.clientHeight;\n        this.setState({ elHeight })\n    }\n    \n    nextQuestionHandler = () => {\n\n        const {userAnswer, correctAnswer, score, blankAnswers, currentQuestion } = this.state\n        \n        let indexInBlank = blankAnswers.indexOf(currentQuestion)\n\n        if(userAnswer && indexInBlank !== -1){\n            this.setState({\n                blankAnswers: blankAnswers.filter(i => i !== currentQuestion)\n            })\n        }else if(!userAnswer && indexInBlank === -1){\n            this.setState({\n                blankAnswers: [...blankAnswers, currentQuestion].sort()\n            })\n        }\n\n        let nextQ = blankAnswers.find(item => item > currentQuestion)\n        if(nextQ){\n            this.setState({\n                currentQuestion: nextQ \n            })\n        }else{\n            this.setState({\n                currentQuestion: currentQuestion + 1\n            })\n        }\n        \n        if(userAnswer === correctAnswer)\n            this.setState({\n                score: score + 1\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { currentQuestion } = this.state;\n        if(this.state.currentQuestion !== prevState.currentQuestion) {\n            this.setState(() => {\n                return {\n                    questions: TestModel.test.questionsData.map(data => data.question),\n                    options: TestModel.test.questionsData[currentQuestion].options,\n                    answers: TestModel.test.questionsData[currentQuestion].answer,\n                    correctAnswer: TestModel.test.questionsData[currentQuestion].answer,\n                    userAnswer: null\n                }\n            })\n        }\n    }\n\n    setAnswer(answer) {\n        if(this.state.correctAnswer === answer){\n            this.setState(prevState => ({\n                userAnswer: answer,\n                correctAnswers: [...prevState.correctAnswers, answer].sort()\n            }))\n        }else{\n            this.setState(prevState => ({\n                userAnswer: answer,\n                wrongAnswers: [...prevState.wrongAnswers, answer].sort()\n            }))\n        }\n    }\n\n    finishHandler = () => {\n\n        const {userAnswer, correctAnswer, score, blankAnswers, currentQuestion} = this.state\n\n        if(userAnswer && blankAnswers.length > 0){\n            this.setState({\n                currentQuestion: blankAnswers[0]\n            })\n        }\n        \n        if(userAnswer && blankAnswers.length === 0){\n            let { id, questionsData, correctAnswers, wrongAnswers, score, questions } = this.state\n            if(correctAnswer === userAnswer){\n                score += 1\n            }\n\n            let test = {\n                id,\n                questionsData,\n                correctAnswers,\n                wrongAnswers,\n                progress: (score*100)/questions.length\n            }\n            TestModel.submitTest(test)\n        }\n\n        if(!userAnswer && blankAnswers.length > 0){\n            if(blankAnswers.indexOf(currentQuestion) !== -1)\n                this.setState({\n                    currentQuestion: blankAnswers[0]\n                })\n            else\n                this.setState({\n                    blankAnswers: [...blankAnswers, currentQuestion],\n                    currentQuestion: blankAnswers[0]\n                })\n        }\n    }\n    \n    render() {\n        const { questions, options, currentQuestion, userAnswer, correctAnswer, testEnd } = this.state;\n\n        //new return to show final score\n        if(testEnd) {\n            return (\n                <TestRusults>\n                <div>hello, your final score is {this.state.score}</div>\n                <div className='test-answer'>\n                    need to remember:\n                    <div>\n                        {TestModel.test.questionsData.map((data, index) => (\n                            <div\n                            className='test-answer_item'\n                            key={index}>  \n                                <Text type='secondary'>\n                                    (incorrect ans number) из {TestModel.test.questionsData.length}\n                                </Text>\n                                <div> \n                                {data.question}\n                                </div>\n                                {data.answer}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <Bottom type='end-test'/>\n                </TestRusults>\n            )\n        }\n\n        let isAnswerCorrect, answer\n\n        if(userAnswer === correctAnswer){\n            isAnswerCorrect = true\n        } else {\n            isAnswerCorrect = false\n        }\n        \n        return (\n            <>\n                <TestStyle>\n                    <div className='test-header'\n                    ref = { (divElement) => {this.divElement = divElement}}\n                    >\n                        <div className='test-header-fixed'>\n                    <Title title={`${LessonModel.lesson.name} (${LessonModel.lesson.language})`} />\n                    <div className='test-content'>\n                    <TestQuestion>\n                        <div className={`test-content-inner active-slide-${currentQuestion}`}>\n                        <div \n                            className='test-question-wrapper'\n                            style={{\n                                'transform': `translateX(-${currentQuestion*(100/TestModel.test.questionsData.length)}%)`\n                            }}\n                        >\n                        {questions.map((data, i) => \n                        <div\n                            key={i}\n                            className={`test-question\n                            ${userAnswer === correctAnswer ? 'correct' :\n                            userAnswer && !isAnswerCorrect && 'incorrect' }`}\n                        >\n                            <div className='status'>\n                            <Text type='secondary'>\n                                Вопрос {currentQuestion + 1} из {TestModel.test.questionsData.length}\n                            </Text>\n                            {userAnswer === correctAnswer ?\n                            <>\n                                <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg' />\n                            </>\n                            :\n                            userAnswer && !isAnswerCorrect &&\n                            <>\n                            <FontAwesomeIcon icon={faTimesCircle} color='#FF8080' size='lg' />\n                            \n                            </>}\n                            </div>\n                            <div className='questions'>\n                                {data}\n                            </div>\n                        </div>\n                        )}\n                        <div></div>\n                        </div>\n                        </div>\n                    </TestQuestion>\n                    </div>\n                    </div>\n                    </div>\n                    <TestOptions \n                    margin={this.state.elHeight}\n                    width={this.state.width}>\n                            {options.map(option => (\n                        <div className=\"test-option-wrapper\">\n                                <div\n                                key={option.id}\n                                className={`test-option\n                                ${userAnswer && option === correctAnswer ? 'correct' :\n                                userAnswer === option && !isAnswerCorrect && 'incorrect' }\n                                `}\n                                onClick={() => {\n                                    !userAnswer ? this.setAnswer(option) : answer = null\n                                }}\n                                >\n                                    {option}\n                                </div>\n                            </div>\n                            ))}\n                    </TestOptions>\n                    { currentQuestion < TestModel.test.questionsData.length - 1 &&\n                    <div onClick={this.nextQuestionHandler}>\n                        <Bottom type='next-question'/>\n                    </div>\n                    }\n                    { currentQuestion === TestModel.test.questionsData.length - 1 &&\n                    <div onClick={this.finishHandler}>\n                        <Bottom type='submit'/>\n                    </div>\n                    }\n                </TestStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Test))","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\nimport './index.css'\n\n\nimport Main from './components/Main/Main'\nimport Bottom from './components/Bottom/Bottom'\nimport Verification from './components/Verification/Verification'\nimport CoursePage from './components/CoursePage/CoursePage';\nimport Test from './components/Test/Test'\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\nlet url = \"mentorium-vk-app\"\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n    // serviceWorker.registre();\n    \nReactDOM.render(\n    <BrowserRouter basename={url}>\n        <App>\n            <Route\n            exact\n            path=\"/\"\n            render={() => {\n                return (\n                    <>\n                        <Main/> \n                    </>\n                )\n            }}\n            />\n            <Route\n            exact\n            path=\"/new\"\n            render={() => {\n                return (\n                    <>\n                        <Main/>\n                        <Bottom type='session'/>\n                    </>\n                )\n            }}\n            />\n         \n            {/* <Route\n            exact\n            path=\"/close/:id\"\n            render={() => {\n                return (\n                    <>\n                        <Main/>\n                        <Bottom type='session'/>\n                        <Verification/>\n                    </>\n                )\n            }}/> */}\n            <Route\n            exact\n            path=\"/course/:id\"\n            render={() => {\n                return (\n                    <>\n                        <CoursePage/>\n                    </>\n                )\n            }}/>\n            <Route\n            exact\n            path=\"/test/:test_id\"\n            render={() => {\n                return (\n                    <>\n                        <Test/>\n                    </>\n                )\n            }}\n            />\n        </App>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}