{"version":3,"sources":["components/Main/MainStyle.js","components/Title/TitleStyle.js","components/Text/TextStyle.js","components/Text/Text.js","components/Title/Title.js","components/Notification/NotificationStyle.js","components/Notification/Notification.js","components/Bottom/BottomStyle.js","components/CourseSelector/CourseSelectorStyle.js","models/lesson.js","components/CourseSelector/CourseSelector.js","components/Bottom/Bottom.js","components/Course/CourseStyle.js","components/Verification/VerificationStyle.js","components/Verification/Verification.js","models/test.js","components/Course/Course.js","components/Main/Main.js","components/CoursePage/CoursePageStyle.js","data/TestData.js","components/CoursePage/CoursePage.js","components/Test/TestStyle.js","components/Test/Test.js","components/Submit/SubmitStyle.js","components/Submit/Submit.js","App.js","index.js"],"names":["MainStyle","styled","div","TitleStyle","TextStyle","p","props","nowrap","size","type","weight","Text","children","defaultProps","Title","this","main","className","icon","faChevronLeft","title","test","onClick","history","goBack","Component","withRouter","NotificationStyle","Notification","notifications","state","noti_text","setTimeout","setState","BottomBack","bottomOpened","BottomBackground","BottomStyle","BottomQuestion","CourseSelectorStyle","configure","enforceActions","LessonModel","lessons","lesson","name","code","language","item","value","findIndex","o","push","find","index","splice","decorate","observable","addLesson","action","deleteFromLessons","getLessonData","set","CourseSelector","active","path","location","pathname","course","map","data","i","onAddLesson","key","observer","Bottom","appear","faPlus","faChevronRight","goToTests","CourseStyle","TestStyle","CourseVerification","onDelete","VerificationStyle","VerificationInner","VerificationYes","VerificationNo","Verification","TestModel","appliedTests","id","progress","date","questionsData","correctAnswers","wrongAnswers","submittedTest","length","a","Date","toISOString","slice","isSubmitted","addNewTest","setTest","submitTest","Course","nextPath","onOpenTest","test_id","faCheckCircle","color","onChangeDirection","onClose","faTimes","Main","courses","width","notificationCounter","firstEnter","disableBrowserBackButton","next","window","innerWidth","margin","TransitionGroup","CSSTransition","timeout","classNames","CoursePageStyle","opened","TestData","question","options","answer","CoursePage","notiCounter","tests","firstTime","getTests","onAddNewTest","TestQuestion","TestOptions","TestRusults","Test","loadTest","currentQuestion","questions","answers","correctAnswer","blankAnswers","nextQuestionHandler","userAnswer","score","indexInBlank","indexOf","filter","sort","nextQ","finishHandler","elHeight","testEnd","divElement","clientHeight","prevProps","prevState","isAnswerCorrect","ref","style","faTimesCircle","option","setAnswer","SubmitStyle","Submit","match","params","App","prevDepth","getPathDepth","pathArr","split","n","exact","component","bridge","send","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b4a60db7.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const MainStyle = styled.div \n`   \n    padding: 1rem;\n    .course-list {\n        margin-top: 1rem;\n    }\n    .items-enter {\n        opacity: 0;\n    }\n    .items-enter-active {\n        opacity: 1;\n        transition: 0.5s;\n    }\n\n    .items-exit {\n        opacity: 1;\n    }\n    .items-exit-active {\n        opacity: 0;\n        transition: 0.2s;\n    }\n\n    .main-header {\n            background: #f0f0f0;\n            margin: -1rem -1rem 0 -1rem;     \n            padding: 1rem;\n            display: grid;\n            grid-template-rows: auto 1fr;\n            height: 20vh;  \n            border-radius: 0; \n    }\n    \n    `\n\n    //     ${props => (props.margin === 0 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: first;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes first {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    //     `\n    // }\n    //     ${props => (props.margin === 1 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: second;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes second {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    // `\n    // }\n","import styled from 'styled-components'\n\nexport const TitleStyle = styled.div `\n    display: grid;\n    grid-template-rows: auto 1fr;\n    align-items: center;\n    grid-gap: 1rem;\n    .chevron {\n        opacity: 0;\n    }\n`","import styled from 'styled-components'\n\nconst TextStyle = styled.p \n`\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    white-space: ${props => props.nowrap ? 'nowrap' : 'normal'};\n    line-height: ${props => \n        props.size === 'medium' || props.size === 'small' || props.size === 'smallest' ?\n        '1.5'\n        :\n        props.size === 'big' ?\n        '1.25'\n        :\n        props.size === 'large'? \n        `1.25`\n        :\n        props.size === 'largest' &&\n        '1'\n    };\n    font-size: ${props => \n        props.size === 'small' ?\n        '15px'\n        :\n        props.size === 'default' ?\n        '18px'\n        :\n        props.size === 'big' &&\n        '24px'\n    };\n    color: ${props => \n        props.type === 'primary' ?\n        '#000'\n        :\n        props.type === 'secondary' ?\n        '#6a6a6a'\n        :\n        props.type === 'brand' &&\n        '#ffb600'\n    };\n    font-weight: ${props => \n        props.weight === 'bold' ? 'bold'\n        :\n        props.weight === 'light' && 'regular'\n    };\n\n`\n\nexport default TextStyle;","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nimport TextStyle from './TextStyle'\n\nconst Text = ({ children, \n                size,\n                type, \n                weight, \n                nowrap }) => {\n\n        return (\n            <>\n                <TextStyle\n                    size={size}\n                    type={type}\n                    weight={weight}\n                    nowrap={nowrap}\n                    >\n                    {children}\n                </TextStyle>\n            </>\n        )\n}\n\nText.propTypes = {\n    children: PropTypes.node.isRequired,\n\n    size: PropTypes.oneOf([\n        'small',\n        'default',\n        'big'\n        ]).isRequired,\n\n    type: PropTypes.oneOf([\n        'inverted',\n        'default',\n        'primary',\n        'secondary'\n    ]).isRequired,\n\n    weight: PropTypes.oneOf([\n        'bold',\n        'light'\n    ]).isRequired,\n\n    nowrap: PropTypes.bool\n}\n\nText.defaultProps = {\n    children: null,\n    size: 'small',\n    type: 'default',\n    weight: 'light',\n    nowrap: false\n}\n\nexport default Text;","import React, { Component } from 'react'\nimport { TitleStyle } from './TitleStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\n\nimport Text from '../Text/Text'\n\nclass Title extends Component {\n\n    constructor() {\n        super()\n        // this.state = {\n            // toMain: false\n        // }\n    }    \n\n    // toMain() {\n        // setTimeout(() => {\n            // this.props.history.goBack()\n        // }, 1500)\n    // }\n\n    // componentWillMount() {\n        // window.onbeforeunload = function() { return \"Your work will be lost.\"; };\n    // }\n\n    render() {\n        // const {history} = this.props\n        // window.onpopstate = (event) => {\n        //     event.preventDefault();\n        //     if(this.props.location.pathname === '/' && this.state.toMain === false) {\n        //             this.setState({toMain: true})\n        //             // alert('hello') one time set state\n        //       }\n        // }\n        return (\n            <>\n                {this.props.main &&\n                    <TitleStyle>\n                        <div className='chevron'>\n                            <FontAwesomeIcon icon={faChevronLeft} />\n                        </div>\n                        <Text size='big' weight='bold'>{this.props.title}</Text>\n                    </TitleStyle>\n                }\n                {this.props.test &&\n                    <TitleStyle>\n                            <FontAwesomeIcon icon={faChevronLeft} onClick={() => this.props.history.goBack()\n} />\n                        <Text size='big' weight='bold'>{this.props.title}</Text>\n                    </TitleStyle>\n                }\n                {/* <TitleStyle>\n                    <div>\n                        <FontAwesomeIcon icon={faChevronLeft}/>\n                    </div>\n                    <Text size='big' weight='bold'>{this.props.title}</Text>\n                </TitleStyle> */}\n\n\n            </>\n        )\n    }\n}\nexport default withRouter(Title)","import styled from 'styled-components'\n\nexport const NotificationStyle = styled.div `\n`","import React, { Component } from 'react'\nimport { NotificationStyle } from './NotificationStyle'\nimport Text from '../Text/Text'\n\nclass Notification extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            noti_text: this.notifications[this.props.type]\n        }\n\n    }\n\n    notifications = [   \n        'Для начала работы - надо указать новый предмет',\n        'В карточке будут храниться все ваши тестовики и прогресс. Кликните на карту, что бы начать.',\n        'Самое время начать разбирать тестовики. Нажмите на кнопку снизу, что бы начать',\n        'Ваш тест готов. Можете кликнуть на карточку и начинать работать'\n        ]\n\n    componentWillUpdate() {\n        if(this.props.type == 0 || this.props.type == 1)\n            setTimeout(() => {this.setState({noti_text: this.notifications[this.props.type]})}, 0)\n        else \n            setTimeout(() => {this.setState({noti_text: this.notifications[this.props.type]})}, 0)\n\n    }\n            //тут надо буде еще ебнуьб условие для this.props.type 1 || 2    \n\n    // componentWillMount() {\n        // alert(this.props.type)\n    // }\n    render() {           \n        return (\n            <>\n                <NotificationStyle>\n                    <Text size='small'>{this.state.noti_text}</Text>\n                </NotificationStyle>\n            </>\n\n        )\n    }\n}\n\nexport default Notification","import styled from 'styled-components'\n\n\nexport const BottomBack = styled.div \n`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    ${props => props.bottomOpened ? `z-index: 1`:`z-index: -500`}\n`\n\nexport const BottomBackground = styled.div\n`\n    display: grid;\n\n`\n\nexport const BottomStyle = styled.div `\n\n    display: grid;\n    margin: 0 1rem;\n    background: #fff;\n    padding-bottom: 1rem;\n    \n    \n    transition: 0.1s;\n    \n    .caption {\n        border-radius: 15px;\n\n        display: grid;\n        background: #FFB600;\n        padding: 1rem;\n        justify-content: center;\n        position: relative;\n        z-index: 999;\n        div {\n            display: grid;\n            grid-template-columns: auto 1fr;\n            align-items: center;\n            grid-gap: 0.5rem;\n        }\n    }\n\n    .course-selector {\n        position: relative;\n    }\n    .course-selector-inner {\n        position: absolute;\n        width: 100%;\n    }\n    ${props => props.bottomOpened ? \n        `\n        .course-selector-inner {\n                bottom: 0;\n                opacity: 1;\n                transition: 0.2s;\n                z-index: 1;\n            }\n        ` \n        : \n        `\n            .course-selector-inner {\n                opacity: 0;\n                bottom: -10rem;\n                transition: 0.2s;\n                z-index: -999;\n            }\n        `\n    }\n\n`\n\n    export const BottomQuestion = styled.div \n`\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    `\n\n    // ${props => props.appear ? \n    // `\n        // opacity: 1;\n        // transition: 0.5s;\n    // `\n    // :\n    // `\n        // opacity:0;`\n    // }\n    \n    export const BottomCourseSelector = styled.div \n`\n\n`","import styled from 'styled-components'\n\n\nexport const CourseSelectorStyle = styled.div `\nbackground: rgb(251,251,251);\nbackground: linear-gradient(180deg, rgba(251,251,251,1) 0%, rgba(251,251,251,1) 57%, rgba(251,251,251,0.9037814955083596) 72%, rgba(251,251,251,0) 100%);    display: grid;\n    grid-gap: 0.5rem;\n    border-radius: 15px 15px 0 0;\n    padding: 1rem;\n    .selector-item {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        padding: 0.5rem 0;\n    }\n`","import { observable, configure, action, decorate } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass LessonModel {\n\n    lessons = []\n    lesson = {\n        name: null,\n        code: null,\n        language: null\n    }\n\n\n    set(item, value) {\n        this[item] = value\n    }\n\n    addLesson(lesson){\n        let { code } = lesson\n        \n        if(this.lessons.findIndex(o => o.code === code) === -1) {\n            this.lessons.push(lesson)\n        }\n    }\n\n    getLessonData(code) {\n        // if(this.lesson.name === null){\n        this.lesson = this.lessons.find(o => o.code === code)\n        // }\n    }\n\n    deleteFromLessons(code) {\n        if(code){\n            let index = this.lessons.findIndex(o => o.code === code)\n            return this.lessons.splice(index, 1)\n        }\n    }\n}\n\ndecorate(LessonModel, {\n    lessons: observable,\n    lesson: observable,\n    addLesson: action,\n    deleteFromLessons: action,\n    getLessonData: action,\n    set: action\n})\n\nexport default new LessonModel()","import React, { Component } from 'react'\nimport { \n    CourseSelectorStyle\n} from './CourseSelectorStyle'\nimport Text from '../Text/Text'\nimport { withRouter } from 'react-router-dom'\n\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass CourseSelector extends Component {\n\n    constructor(props) {\n        super()\n        \n        this.state = {\n            active: true,\n        }\n    }    \n\n    nextPath(path) {\n        if(path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n\n    onAddLesson(lesson) {\n        LessonModel.addLesson(lesson)\n    }\n \n    \n    render() {\n        let courses = [\n            {\n                name: \"Казахстан тарихы\",\n                language: \"🇰🇿\",\n                code: \"KHK\"\n            },\n            {\n                name: \"История Казахстана\",\n                language: \"🇷🇺\",\n                code: \"KZR\"\n            },\n            {\n                name: \"Математикалк сауаттылык\",\n                language: \"🇰🇿\",\n                code: \"MHR\"\n            }\n        ]\n        \n        let course = courses.map((data, i) => (\n            <div className='selector-item'\n            onClick={() => this.onAddLesson(data)}\n            key={i}>\n                <Text size='default'>{data.name}</Text>\n                <Text size='default'>{data.language}</Text>\n            </div>\n        ))\n        \n    \n        return (\n            <>  \n                <CourseSelectorStyle>\n                        {course}\n                </CourseSelectorStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CourseSelector))","import React, { Component } from 'react'\nimport { BottomStyle, BottomQuestion, BottomBackground,\nBottomBack } from './BottomStyle'\nimport Text from '../Text/Text'\nimport CourseSelector from '../CourseSelector/CourseSelector'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport {  withRouter } from 'react-router-dom'\n\nclass Bottom extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            bottomOpened: false,\n            // appear: false\n        }\n    }\n    goToTests() {\n        this.props.history.goBack()\n        this.props.history.goBack()\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({appear: true})\n        }, 1)\n    }\n\n    render() {\n        return (\n            <>\n            {this.props.type === \"main\" &&\n            <BottomBack bottomOpened={this.state.bottomOpened}>\n                <BottomBackground onClick={() => this.setState({bottomOpened: false})} bottomOpened={this.state.bottomOpened}></BottomBackground>\n                <BottomStyle \n                bottomOpened={this.state.bottomOpened}>\n                    \n                        <div className='course-selector' onClick={() => this.setState({bottomOpened: false})}> \n                            <div \n                            className='course-selector-inner'>\n                                <CourseSelector></CourseSelector>\n                            </div>\n                        </div>\n                        <div className='caption' onClick={() => this.setState({bottomOpened: true})}>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n            </BottomBack>\n            }\n            {this.props.type === 'new-test' &&\n                <>\n                <BottomQuestion\n                //  appear={this.state.appear}\n                 >\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Начать новый тест</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'next-question' &&\n                <>\n                <BottomQuestion>\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Следующий вопрос</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'submit' &&\n                <>\n                <BottomQuestion \n                // onClick={() => this.props.history.goBack()}\n                >\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Submit</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'end-test' &&\n                <>\n                <BottomQuestion \n                onClick={() => this.goToTests()}\n                >\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faChevronLeft} />\n                            <Text size='default'>Венуться к моим тестам</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            </>\n        )\n    }\n}\n\nexport default withRouter(Bottom)","import styled from 'styled-components'\n\nexport const CourseStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem;\n\n    .card {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        grid-gap: 1rem;\n    }\n    \n    .title {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        grid-gap: 10px;\n        align-items: center;\n    }\n\n    .progress {\n        display: grid;\n        grid-template-columns: auto auto;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n    `\n    // .next-page-wrapper {\n        // position: absolute;\n        // background: #fff;\n        // top: 0;\n        // right: 0;\n        // z-index: 100;\n        // height: 100vh;\n    // }\n    \n    // .next-page {\n        // background: lightblue;\n    // }\n    \n    // ${props => props.onEnter ? \n    //     `     \n    //         .next-page {\n    //             animation-name: next-page;\n    //             animation-duration: 1s;\n    //         }\n    //         @keyframes next-page {\n    //             0% {width: 0; height: 100vh}\n    //             30% {width: 100vw; height: 100vh}\n    //             100% {width: 100vw; height: calc(20vh + 2rem);}\n    //           }\n    //     `\n    //     :\n    //     `\n    //         .next-page {\n    //         }\n    //     `}\n\n\nexport const TestStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem; \n      \n    .progress {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n`\nexport const CourseVerification = styled.div\n`\n    position: absolute;\n    height: 100vh;\n    width: 100vw;\n    top: 0;\n    ${props => props.onDelete ?\n        `\n            left: 0;\n            opacity: 1;\n            transition: opacity 0.3s;\n        `\n    :\n        `\n            opacity: 0;\n            transition: opacity 0.3s;\n            left: -1000px;\n        `\n    }\n`","import styled from 'styled-components'\n\nexport const VerificationStyle = styled.div \n`\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.2);\n`\nexport const VerificationInner = styled.div\n`\n    background: #fff;\n    padding: 1rem;\n    border-radius: 10px;\n    margin: 0 1rem;\n\n    .options {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        margin-top: 1rem;\n        grid-gap: 1rem;\n    }\n`\nexport const VerificationYes = styled.div\n`\n    display: grid;\n    justify-content: center;\n    background: #f0f0f0;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n`\nexport const VerificationNo = styled.div\n`\n    display: grid;\n    justify-content: center;\n    padding: 0.5rem 1rem;\n    background: #ffb600;\n    border-radius: 5px;\n`","import React, { Component } from 'react'\nimport { VerificationStyle, VerificationInner, VerificationYes, VerificationNo } from './VerificationStyle'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass Verification extends Component {\n    \n    onDelete(code) {\n        LessonModel.deleteFromLessons(code)\n    }\n\n    // componentDidMount() {\n        // LessonModel.getLessonData(this.props.match.params.id)\n    // }\n\n    render() {\n        let { name, language, code } = this.props.lesson\n        return (\n            <>\n                <VerificationStyle>\n                    <VerificationInner>\n                        <Text size='default'>Вы уверены, что хотите удалить предмет {`${name} ${language}`} ?</Text>\n                        <div className='options'>\n                            <VerificationYes onClick={() => this.onDelete(code)}>Да</VerificationYes>\n                            <VerificationNo>Нет</VerificationNo>\n                        </div>\n                    </VerificationInner>\n                </VerificationStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Verification))","import { observable, decorate, action, configure } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass TestModel {\n    appliedTests = []\n    test = {\n        id: null,\n        progress: null,\n        date: null,\n        code: null,\n        questionsData: [],\n        correctAnswers: [],\n        wrongAnswers: []\n    }\n    \n    submittedTest = {}\n\n\n    set(item, value){\n        this[item] = value\n    }\n\n    addNewTest(test){\n        let id = this.appliedTests.length + 1 \n        test.id = id\n        \n        let a = new Date().toISOString()\n        test.date = a.slice(8, 10) + '/' + a.slice(5, 7) + '/' + a.slice(0, 4)\n        test.isSubmitted = false\n        test.progress = 0\n\n        this.appliedTests.push(test)\n    }\n\n    getTests(){\n        return this.appliedTests\n    }\n\n    setTest(id){\n        this.test = this.appliedTests.find(o => o.id == id) \n    }\n\n    submitTest(test){\n        this.submittedTest = test\n        let a = new Date().toISOString()\n        test.date = a.slice(8, 10) + '/' + a.slice(5, 7) + '/' + a.slice(0, 4)\n        test.isSubmitted = true\n        let id = this.appliedTests.findIndex(o => o.id == test.id)\n\n        this.appliedTests[id] = test\n    }\n}\n\ndecorate(TestModel, {\n    appliedTests: observable,\n\n    addNewTest: action,\n    setTest: action,\n    submitTest: action,\n    set: action\n})\n\nexport default new TestModel\n","import React, { Component } from 'react'\nimport { CourseStyle, TestStyle, CourseVerification } from './CourseStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport Verification from '../Verification/Verification'\nimport LessonModel from '../../models/lesson'\nimport TestModel from '../../models/test'\n\nclass Course extends Component {  \n    constructor() {\n        super()\n        this.state = {\n            onDelete: false,\n            // onEnter: false\n            }\n    }\n\n        nextPath(path) {\n            if(path !== this.props.location.pathname)\n                this.props.history.push(path)\n        }\n        \n    onClose() {\n        this.setState({\n            onDelete: true\n        })\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onChangeDirection(id) {\n        this.nextPath('/course/' + id)\n            LessonModel.getLessonData(this.props.id)\n        // this.setState({ onEnter: true })\n        // setTimeout(() => {\n            // this.nextPath('/course/' + id)\n            // LessonModel.getLessonData(this.props.id)\n        // }, 1000)\n    }\n\n    onOpenTest(id) {\n        TestModel.setTest(id)\n        this.nextPath('/test/' + id)\n        //need to add modes for the test\n    }\n    \n    render() {\n        return (\n            <>\n                {!this.props.test ?\n                <>\n                <CourseStyle \n                // onEnter={this.state.onEnter}\n                >\n                    {/* <div className='next-page-wrapper'> */}\n                    {/* <div className='next-page'></div> */}\n                    {/* </div> */}\n                    <div className='card' onClick={() => this.onChangeDirection(this.props.id)}>\n                    <div className='title'>\n                        <Text size='default'>{this.props.title}</Text>\n                        <Text size='default'>{this.props.language}</Text>\n                    </div>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{this.props.progress}%</div>\n                    </div>\n                    </div>\n                    <div className='delete' onClick={() => this.onClose()}>\n                        <FontAwesomeIcon icon={faTimes} color='#999'/>\n                    </div>\n                    <CourseVerification onDelete={this.state.onDelete} onClick={() => this.setState({onDelete: false})}>\n                        <Verification lesson={LessonModel.lesson}></Verification>\n                    </CourseVerification>\n                </CourseStyle>\n                </>\n                :\n                <>\n                <TestStyle onClick={() => this.onOpenTest(this.props.test_id)}>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{ this.props.progress }%</div>\n                    </div>\n                    <div className='date'>{ this.props.date }</div>\n                </TestStyle>\n                </>\n                }\n            </>\n        )\n    }\n}\n\n export default withRouter(Course)","import React, { Component } from 'react'\nimport { MainStyle } from './MainStyle'\nimport Title from '../Title/Title'\nimport Notification from '../Notification/Notification'\nimport Bottom from '../Bottom/Bottom'\nimport Course from '../Course/Course'\nimport LessonModel from '../../models/lesson'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\nimport { observer } from 'mobx-react'\n\n\nclass Main extends Component {\n\n\n    constructor() {\n        super()\n        this.state = {\n            width: null,\n            notificationCounter: 0,\n            firstEnter: true,\n        }\n    }\n\n    courses = LessonModel.lessons\n\n\n\n    componentWillMount() {\n\n        if (this.courses.length > 0)\n            this.setState({ notificationCounter: 1 })\n    }\n\n\n    componentDidMount() {\n        disableBrowserBackButton();\n    }\n    nextPage() {\n        this.setState({ next: true })\n    }\n\n    componentDidUpdate() {\n\n        if (this.state.notificationCounter == 0 && this.courses.length > 0)\n            this.setState({ notificationCounter: 1 })\n\n        if (this.state.notificationCounter == 1 && this.courses.length == 0)\n            this.setState({ notificationCounter: 0 })\n\n        if (this.state.firstEnter) {\n            this.setState({ firstEnter: false })\n            this.setState({ width: window.innerWidth })\n        }\n\n    }\n    render() {\n\n\n        return (\n            <>\n                <MainStyle\n                    next={this.state.next}\n                    width={this.state.width}\n                    margin={this.state.notificationCounter}\n                    firstEnter={this.state.firstEnter}>\n                    <div className='toggle'></div>\n                    <div className='main-header'>\n                        <Title main title='Мои предметы' ></Title>\n                        <div className='notification' >\n                            <Notification type={this.state.notificationCounter} />\n                        </div>\n                    </div>\n                    <div className='course-list'>\n                        <TransitionGroup>\n                            {\n                                this.courses.map((data, i) => (\n                                    <CSSTransition\n                                        timeout={500}\n                                        classNames='items'\n                                        key={i}\n                                    >\n                                        <div className='course-item'>\n                                            <Course\n                                                title={data.name}\n                                                progress='0'\n                                                language={data.language}\n                                                id={data.code}\n                                                key={i} />\n                                        </div>\n                                    </CSSTransition>\n                                ))\n                            }\n                        </TransitionGroup>\n                    </div>\n                </MainStyle>\n                <Bottom type='main' />\n            </>\n        )\n    }\n}\n\nexport default observer(Main)\n","import styled from 'styled-components'\n\nexport const CoursePageStyle = styled.div\n`   \n    padding: 1rem;\n    .main-header-wrapper {\n        background: lightblue;\n        margin: -1rem -1rem 0 -1rem;     \n        padding: 1rem;\n        width: 100vw;\n        height: 20vh;  \n        position: fixed;\n    }\n    .main-header {\n        display: grid;\n        grid-template-rows: auto 1fr;\n        border-radius: 0; \n    }\n    .test-list {\n        margin-top: calc(20vh + 2rem);\n        padding-bottom: 4rem;\n    }\n    .items-enter {\n        opacity: 0;\n    }\n    .items-enter-active {\n        opacity: 1;\n        transition: 0.5s;\n    }\n\n    .items-exit {\n        opacity: 1;\n    }\n    .items-exit-active {\n        opacity: 0;\n        transition: 0.2s;\n    }\n    .notification {\n        margin-right: 2rem;\n    }\n    ${props => props.opened ? \n    `\n        .main-header{\n            opacity: 1;\n            transition: 0.5s;    \n        }\n    `:\n    `\n        .main-header{\n            opacity: 0;\n        }\n    `\n    }\n`\n\n    //     ${props => (props.margin === 2 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: first;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes first {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    //     `\n    // }   \n    //     ${props => (props.margin === 3 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: second;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes second {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    // `\n    // }","export const TestData = [\n    {\n        id: 0,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Административных условий', 'Равным образом рамки и место обучения кадров', 'Cистемы обучения кадров, соответствует насущным', 'Равным образом рамки и место обучения кадров', 'Равным образом рамки и место обучения кадров'],\n        answer: 'Административных условий'\n    },\n    {\n        id: 1,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Bassan', 'Shmargun', 'Lirinirill', 'Darnurda', 'Darnurda'],\n        answer: 'Bassan'\n    },\n    {\n        id: 2,\n        question: 'What is your age?',\n        options: ['1', '2', '3', '4'],\n        answer: '2'\n    },\n    {\n        id: 3,\n        question: 'What is your pussy?',\n        options: ['Assanpussy', 'Argunpussy', 'Chirillpussy', 'Argunpussy'],\n        answer: 'Chirillpussy'\n    },\n]","import React, { Component } from 'react'\nimport { CoursePageStyle } from './CoursePageStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport LessonModel from '../../models/lesson'\nimport Notification from '../Notification/Notification'\nimport Course from '../Course/Course'\nimport Bottom from '../Bottom/Bottom'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\n\nimport { TestData } from '../../data/TestData'\nimport TestModel from '../../models/test'\nimport { observer } from 'mobx-react'\n\n\nclass CoursePage extends Component { \n    \n    constructor() {\n        super()\n        this.state = {\n            notiCounter: 2,\n            tests: [],\n            width: null,\n            firstTime: true,\n            opened: false\n        }\n    }\n\n    componentWillMount() {\n        \n        if(this.state.tests.length > 0)\n            this.setState({notiCounter: 3})\n    }\n\n    componentDidUpdate() {\n        if(this.state.notiCounter == 2 && this.state.tests.length > 0)\n                this.setState({notiCounter: 3})\n\n        if(this.state.notiCounter == 3 && this.state.tests.length == 0) \n                this.setState({notiCounter: 2})\n\n        if(this.state.firstTime) {\n            this.setState({firstTime: false})\n            this.setState({width: window.innerWidth})\n        }\n    }\n    componentDidMount() {\n        let tests = TestModel.getTests()\n        this.setState({ tests })\n        setTimeout(() => {\n            this.setState({opened: true})\n        }, 1)\n    }\n\n    \n    onAddNewTest() {\n        if(!this.state.tests.find(o => o.isSubmitted == false)){\n            let test = { code: 0  }\n            test.code = LessonModel.lesson.code\n            test.questionsData = TestData\n            TestModel.addNewTest(test)\n        }\n    }\n\n    render() {\n\n        let { name, language } = LessonModel.lesson\n        \n        return (\n            <>\n                <CoursePageStyle\n                opened={this.state.opened}\n                width={this.state.width}\n                margin={this.state.notiCounter}>\n                    <div className='main-header-wrapper'>\n                    <div className='main-header'>\n                        <Title test title={`${name} ${language}`} className='title'/>\n                        <div className='notification'>\n                    <Notification type={this.state.notiCounter} />\n                    </div>\n                    </div>\n                    </div>\n                        <div className='test-list'>\n                            <TransitionGroup>\n\n                            {\n                                this.state.tests.map((data, i) => (\n                                    <CSSTransition\n                                    timeout={500}\n                                    classNames='items'\n                                    key={i}\n                                >\n                                        <Course test progress={data.progress} date={data.date} key={i} test_id={data.id}/>\n                                    </CSSTransition>\n                                ))\n                            }\n                            </TransitionGroup>\n                        </div>\n                </CoursePageStyle>\n                <div onClick={() => this.onAddNewTest()} className='bottom'> \n                <Bottom type='new-test'/>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CoursePage))","import styled from 'styled-components'\n\nexport const TestStyle = styled.div \n`   \n    padding-bottom: 4rem;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    .test-content {\n        display: grid;\n    }\n    .test-header {\n        background: #f0f0f0;\n        padding: 1rem;\n        display: grid;\n        grid-template-rows: auto 1fr;\n        position: fixed;\n\n    }\n`\nexport const TestQuestion = styled.div\n`\n    margin-top: 1rem;\n\n    .test-content-inner {\n        position: relative;\n    }\n    .test-question-wrapper {\n        display: grid;\n        grid-template-columns: repeat(20, 1fr);\n        grid-template-rows: auto 1fr;\n        transition: transform 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    }\n    .test-question {\n        grid-gap: 0.5rem;\n        display: grid;\n        padding: 1rem;\n        width: calc(100vw - 4rem);\n        border-radius: 15px;\n        margin-right: 0.5rem;\n        background: #fff;\n        grid-template-rows: auto 1fr;\n    }\n    .status {\n        display: grid;\n        grid-template-columns: 1fr auto;\n    }\n    // .correct {\n        // background: rgba(130, 222, 139, 0.5);\n    // }\n    // .incorrect {\n        // background: rgba(255, 128, 128, 0.2);\n    // }\n`\nexport const TestOptions = styled.div \n`       \n    margin-top: ${props => props.margin}px;\n    width: calc(${props => props.width}px);\n    .test-option_wrapper-absolute {\n        position: absolute;\n        padding-bottom: 4rem;\n    }\n    .test-option-wrapper {\n        display: grid\n        grid-gap: 1rem;\n    }\n    .test-option {\n        background: #fafafa;\n        border-radius: 10px;\n        padding: 1rem;\n        margin: 1rem;\n    }   \n    .correct {\n        background: rgba(130, 222, 139, 0.5);\n    }\n    .incorrect {\n        background: rgba(255, 128, 128, 0.2);\n    }\n`\nexport const TestRusults = styled.div \n`\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-gap: 3rem;\n\n    .test-answer {\n        display: grid;\n        grid-gap: 1rem;\n    }\n    .test-answer_item {\n        padding-bottom: 1rem;\n    }\n`","import React, { Component } from 'react'\nimport { TestStyle, TestQuestion, TestOptions, TestRusults } from './TestStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport Bottom from '../Bottom/Bottom'\nimport Text from '../Text/Text'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { observer } from 'mobx-react'\nimport LessonModel from '../../models/lesson'\nimport TestModel from '../../models/test'\n\nclass Test extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: props.window,\n            elHeight: 0,\n            \n            options: [],\n            userAnswer: null,\n            currentQuestion: 0,\n            correctAnswer: null,\n            \n            id: TestModel.test.id,\n            questions: TestModel.test.questionsData.map(data => data.question),\n            score: 0,\n            \n            correctAnswers: [],\n            wrongAnswers: [],\n            blankAnswers: [],\n\n            testEnd: false\n        }\n    }\n    componentWillMount() {\n        this.setState({width: window.innerWidth})   \n    }\n    \n    \n    loadTest = () => {\n        const {currentQuestion} = this.state;\n        \n        this.setState(() => {\n            return {\n                questions: TestModel.test.questionsData.map(data => data.question),\n                options: TestModel.test.questionsData[currentQuestion].options,\n                answers: TestModel.test.questionsData[currentQuestion].answer,\n                correctAnswer: TestModel.test.questionsData[currentQuestion].answer,\n                blankAnswers: [0, 1,2,3]\n            }\n        })\n    }\n    \n    componentDidMount() {\n        this.loadTest();\n\n        const elHeight = this.divElement.clientHeight;\n        this.setState({ elHeight })\n    }\n    \n    nextQuestionHandler = () => {\n\n        const {userAnswer, correctAnswer, score, blankAnswers, currentQuestion } = this.state\n        \n        let indexInBlank = blankAnswers.indexOf(currentQuestion)\n\n        if(userAnswer && indexInBlank !== -1){\n            this.setState({\n                blankAnswers: blankAnswers.filter(i => i !== currentQuestion)\n            })\n        }else if(!userAnswer && indexInBlank === -1){\n            this.setState({\n                blankAnswers: [...blankAnswers, currentQuestion].sort()\n            })\n        }\n\n        let nextQ = blankAnswers.find(item => item > currentQuestion)\n        if(nextQ){\n            this.setState({\n                currentQuestion: nextQ \n            })\n        }else{\n            if(userAnswer)\n                this.finishHandler()\n            else\n                this.setState({\n                    currentQuestion: currentQuestion + 1\n                })\n        }\n\n        \n        if(userAnswer === correctAnswer)\n            this.setState({\n                score: score + 1\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { currentQuestion } = this.state;\n        if(this.state.currentQuestion !== prevState.currentQuestion) {\n            this.setState(() => {\n                return {\n                    questions: TestModel.test.questionsData.map(data => data.question),\n                    options: TestModel.test.questionsData[currentQuestion].options,\n                    answers: TestModel.test.questionsData[currentQuestion].answer,\n                    correctAnswer: TestModel.test.questionsData[currentQuestion].answer,\n                    userAnswer: null\n                }\n            })\n        }\n    }\n\n    setAnswer(answer) {\n        if(this.state.correctAnswer === answer){\n            this.setState(prevState => ({\n                userAnswer: answer,\n                correctAnswers: [...prevState.correctAnswers, answer].sort()\n            }))\n        }else{\n            this.setState(prevState => ({\n                userAnswer: answer,\n                wrongAnswers: [...prevState.wrongAnswers, answer].sort()\n            }))\n        }\n    }\n\n    finishHandler = () => {\n\n        let {userAnswer, correctAnswer, score, blankAnswers, currentQuestion} = this.state\n\n        if(userAnswer && blankAnswers.indexOf(currentQuestion) !== -1){\n            blankAnswers = blankAnswers.filter(i => i !== currentQuestion)\n            this.setState({\n                blankAnswers\n            })\n        }\n\n        if(userAnswer && blankAnswers.length > 0){\n            this.setState({\n                currentQuestion: blankAnswers[0]\n            })\n        }\n        \n        if(userAnswer && blankAnswers.length === 0){\n            let { id, correctAnswers, wrongAnswers, score, questions } = this.state\n            let questionsData = TestModel.test.questionsData\n            if(correctAnswer === userAnswer){\n                score += 1\n            }\n\n            let test = {\n                id,\n                questionsData,\n                correctAnswers,\n                wrongAnswers,\n                progress: (score*100)/questions.length\n            }\n            TestModel.submitTest(test)\n\n            this.props.history.push(`/submit/${id}`)\n        }\n\n        if(!userAnswer && blankAnswers.length > 0){\n            if(blankAnswers.indexOf(currentQuestion) !== -1)\n                this.setState({\n                    currentQuestion: blankAnswers[0]\n                })\n            else\n                this.setState({\n                    blankAnswers: [...blankAnswers, currentQuestion],\n                    currentQuestion: blankAnswers[0]\n                })\n        }\n    }\n    \n    render() {\n        const { questions, options, currentQuestion, userAnswer, correctAnswer, testEnd } = this.state;\n\n        //new return to show final score\n        if(testEnd) {\n            return (\n                <TestRusults>\n                <div>hello, your final score is {this.state.score}</div>\n                <div className='test-answer'>\n                    need to remember:\n                    <div>\n                        {TestModel.test.questionsData.map((data, index) => (\n                            <div\n                            className='test-answer_item'\n                            key={index}>  \n                                <Text type='secondary'>\n                                    (incorrect ans number) из {TestModel.test.questionsData.length}\n                                </Text>\n                                <div> \n                                {data.question}\n                                </div>\n                                {data.answer}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <Bottom type='end-test'/>\n                </TestRusults>\n            )\n        }\n\n        let isAnswerCorrect, answer\n\n        if(userAnswer === correctAnswer){\n            isAnswerCorrect = true\n        } else {\n            isAnswerCorrect = false\n        }\n        \n        return (\n            <TestStyle>\n                    <div className='test-header'\n                    ref = { (divElement) => {this.divElement = divElement}}\n                    >\n                        <div className='test-header-fixed'>\n                    <Title test title={`${LessonModel.lesson.name} ${LessonModel.lesson.language}`} />\n                    <div className='test-content'>\n                    <TestQuestion>\n                        <div className={`test-content-inner active-slide-${currentQuestion}`}>\n                        <div \n                            className='test-question-wrapper'\n                            style={{\n                                'transform': `translateX(-${currentQuestion*(100/TestModel.test.questionsData.length)}%)`\n                            }}\n                        >\n                        {questions.map((data, i) => \n                        <div\n                            key={i}\n                            className={`test-question\n                            ${userAnswer === correctAnswer ? 'correct' :\n                            userAnswer && !isAnswerCorrect && 'incorrect' }`}\n                        >\n                            <div className='status'>\n                            <Text type='secondary'>\n                                Вопрос {currentQuestion + 1} из {TestModel.test.questionsData.length}\n                            </Text>\n                            {userAnswer === correctAnswer ?\n                            <>\n                                <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg' />\n                            </>\n                            :\n                            userAnswer && !isAnswerCorrect &&\n                            <>\n                            <FontAwesomeIcon icon={faTimesCircle} color='#FF8080' size='lg' />\n                            \n                            </>}\n                            </div>\n                            <div className='questions'>\n                                {data}\n                            </div>\n                        </div>\n                        )}\n                        <div></div>\n                        </div>\n                        </div>\n                    </TestQuestion>\n                    </div>\n                    </div>\n                    </div>\n                    <TestOptions \n                    margin={this.state.elHeight}\n                    width={this.state.width}>\n                            {options.map(option => (\n                        <div className=\"test-option-wrapper\">\n                                <div\n                                key={option.id}\n                                className={`test-option\n                                ${userAnswer && option === correctAnswer ? 'correct' :\n                                userAnswer === option && !isAnswerCorrect && 'incorrect' }\n                                `}\n                                onClick={() => {\n                                    !userAnswer ? this.setAnswer(option) : answer = null\n                                }}\n                                >\n                                    {option}\n                                </div>\n                            </div>\n                            ))}\n                    </TestOptions>\n                    { currentQuestion < TestModel.test.questionsData.length - 1 &&\n                    <div onClick={this.nextQuestionHandler}>\n                        <Bottom type='next-question'/>\n                    </div>\n                    }\n                    { currentQuestion === TestModel.test.questionsData.length - 1 &&\n                    <div onClick={this.finishHandler}>\n                        <Bottom type='submit'/>\n                    </div>\n                    }\n                </TestStyle>\n        )\n    }\n}\n\nexport default withRouter(observer(Test))","import styled from 'styled-components'\n\nexport const SubmitStyle = styled.div \n`\n    .test-header {\n        background: #f0f0f0;\n        padding: 1rem;\n        display: grid;\n        grid-template-rows: auto 1fr;\n        height: 20vh;  \n        border-radius: 0; \n        position: fixed;\n        width: 100%;\n    }\n    .notification {\n        margin-right: 1rem;\n        background: red;\n    }\n    `","import React, { Component } from 'react'\nimport { SubmitStyle } from './SubmitStyle'\nimport { withRouter } from 'react-router'\nimport Title from '../Title/Title'\nimport Text from '../Text/Text'\nimport Bottom from '../Bottom/Bottom'\n\nimport TestModel from '../../models/test'\nimport LessonModel from \"../../models/lesson\";\nimport { observer } from 'mobx-react'\n\nclass Submit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: null,\n            lesson: null\n        }\n    }\n\n    componentWillMount() {\n        let id = this.props.match.params.test_id\n        let test = TestModel.appliedTests.find(o => o.id == id)\n        \n        let lesson = LessonModel.lesson\n\n        this.setState({\n            test, lesson\n        })\n    }\n\n    nextPath(path) {\n        if(path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n    \n    render() {\n        let { test } = this.state\n\n        return (\n            <>\n                <SubmitStyle>\n                    <div className='test-header'>\n                        <Title title={`${this.state.lesson.name} ${this.state.lesson.language}`} main/>\n                        <div className='notification'>\n                        <Text size='small'>Congrats, you've done test. Your score is {test.progress}%</Text>\n                        <Text size='small'>Try to remember incorrect answers</Text>\n                        </div>\n                    </div>\n\n                </SubmitStyle>\n                <Bottom type='end-test'/>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Submit))","import React, { Component } from 'react'\n\n//mobx\nimport { observer } from 'mobx-react'\nimport { withRouter, Switch, Route, } from 'react-router-dom'\nimport './App.css'\nimport Main from './components/Main/Main'\nimport CoursePage from './components/CoursePage/CoursePage';\nimport Test from './components/Test/Test'\nimport Submit from './components/Submit/Submit'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tprevDepth: this.getPathDepth(this.props.location)\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps() {\n\t\tthis.setState({ prevDepth: this.getPathDepth(this.props.location) })\n\t}\n\n\tgetPathDepth(location) {\n\t\tlet pathArr = location.pathname.split(\"/\")\n\t\tpathArr = pathArr.filter(n => n !== \"\")\n\t\treturn pathArr.length;\n\t}\n\n\n\trender() {\n\n\t\tconst { location } = this.props\n\t\tconst currentKey = location.pathname.split('/')[1] || \"/\"\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{/* <TransitionGroup> */}\n\t\t\t\t\t{/* <CSSTransition key={currentKey} timeout={2500} classNames='pageSlider' mountOnEnter={false} unmountOnExit={true}> */}\n\t\t\t\t\t\t{/* <div className={this.getPathDepth(location) - this.state.prevDepth >= 0 ? \"left\" : \"right\"}> */}\n\t\t\t\t\t\t\t<Switch location={location}>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\t\t\tcomponent={Main}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath=\"/course/:id\"\n\t\t\t\t\t\t\t\t\tcomponent={CoursePage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath=\"/test/:test_id\"\n\t\t\t\t\t\t\t\t\tcomponent={Test}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath=\"/submit/:test_id\"\n\t\t\t\t\t\t\t\t\tcomponent={Submit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t{/* </div>\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t</TransitionGroup> */}\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default withRouter(observer(App));","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\nimport './index.css'\n\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\nlet url = \"mentorium-vk-app\"\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// serviceWorker.registre();\n\nReactDOM.render(\n    <BrowserRouter basename={url}>\n        <App>\n           \n        </App>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}