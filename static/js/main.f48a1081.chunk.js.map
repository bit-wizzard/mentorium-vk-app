{"version":3,"sources":["App.js","components/Main/MainStyle.js","components/Title/TitleStyle.js","components/Text/TextStyle.js","components/Text/Text.js","components/Title/Title.js","components/Notification/NotificationStyle.js","components/Notification/Notification.js","components/Bottom/BottomStyle.js","components/CourseSelector/CourseSelectorStyle.js","models/lesson.js","components/CourseSelector/CourseSelector.js","components/Bottom/Bottom.js","components/Course/CourseStyle.js","components/Verification/VerificationStyle.js","components/Verification/Verification.js","components/Course/Course.js","components/Main/Main.js","components/CoursePage/CoursePageStyle.js","components/CoursePage/CoursePage.js","components/Test/TestStyle.js","data/TestData.js","components/Test/Test.js","index.js"],"names":["App","children","this","props","Component","withRouter","observer","MainStyle","styled","div","TitleStyle","TextStyle","p","nowrap","size","type","weight","Text","defaultProps","Title","main","icon","faChevronLeft","onClick","history","goBack","title","NotificationStyle","Notification","noti_text","BottomBack","BottomBackground","bottomOpened","BottomStyle","BottomQuestion","CourseSelectorStyle","configure","enforceActions","LessonModel","lessons","lesson","name","code","language","item","value","findIndex","o","push","find","index","splice","decorate","observable","addLesson","action","deleteFromLessons","getLessonData","set","CourseSelector","state","active","path","location","pathname","course","map","data","i","className","onAddLesson","key","Bottom","setState","faPlus","faChevronRight","CourseStyle","TestStyle","CourseVerification","onDelete","VerificationStyle","VerificationInner","VerificationYes","VerificationNo","Verification","Course","id","nextPath","test","onOpenTest","test_id","faCheckCircle","color","progress","date","onChangeDirection","onClose","faTimes","Main","courses","notificationCounter","length","disableBrowserBackButton","TransitionGroup","CSSTransition","timeout","classNames","CoursePageStyle","CoursePage","tests","z","console","log","TestQuestion","TestOptions","margin","width","TestRusults","TestData","question","options","answer","Test","loadTest","currentQuestion","questions","answers","correctAnswer","nextQuestionHandler","userAnswer","score","finishHandler","testEnd","window","elHeight","innerWidth","divElement","clientHeight","prevProps","prevState","isAnswerCorrect","ref","style","faTimesCircle","option","setAnswer","bridge","send","ReactDOM","render","basename","exact","document","getElementById"],"mappings":"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","file":"static/js/main.f48a1081.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n//mobx\nimport { observer } from 'mobx-react'\nimport { withRouter } from 'react-router-dom'\nimport './App.css'\n\nclass App extends Component {\n\n\t\n\trender() {\n\t\tconst { children} = this.props\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{children}\n\t\t\t</>\n\t)\n}\n}\n\nexport default withRouter(observer(App));","import styled from 'styled-components'\n\nexport const MainStyle = styled.div \n`   \n    padding: 1rem;\n    .course-list {\n        margin-top: 1rem;\n    }\n    .items-enter {\n        opacity: 0;\n    }\n    .items-enter-active {\n        opacity: 1;\n        transition: 0.2s;\n    }\n\n    .items-exit {\n        opacity: 1;\n    }\n    .items-exit-active {\n        opacity: 0;\n        transition: 0.2s;\n    }\n`","import styled from 'styled-components'\n\nexport const TitleStyle = styled.div `\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: center;\n    grid-gap: 1rem;\n`","import styled from 'styled-components'\n\nconst TextStyle = styled.p \n`\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    white-space: ${props => props.nowrap ? 'nowrap' : 'normal'};\n    line-height: ${props => \n        props.size === 'medium' || props.size === 'small' || props.size === 'smallest' ?\n        '1.5'\n        :\n        props.size === 'big' ?\n        '1.25'\n        :\n        props.size === 'large'? \n        `1.25`\n        :\n        props.size === 'largest' &&\n        '1'\n    };\n    font-size: ${props => \n        props.size === 'small' ?\n        '15px'\n        :\n        props.size === 'default' ?\n        '18px'\n        :\n        props.size === 'big' &&\n        '24px'\n    };\n    color: ${props => \n        props.type === 'primary' ?\n        '#000'\n        :\n        props.type === 'secondary' ?\n        '#6a6a6a'\n        :\n        props.type === 'brand' &&\n        '#ffb600'\n    };\n    font-weight: ${props => \n        props.weight === 'bold' ? 'bold'\n        :\n        props.weight === 'light' && 'regular'\n    };\n\n`\n\nexport default TextStyle;","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nimport TextStyle from './TextStyle'\n\nconst Text = ({ children, \n                size,\n                type, \n                weight, \n                nowrap }) => {\n\n        return (\n            <>\n                <TextStyle\n                    size={size}\n                    type={type}\n                    weight={weight}\n                    nowrap={nowrap}\n                    >\n                    {children}\n                </TextStyle>\n            </>\n        )\n}\n\nText.propTypes = {\n    children: PropTypes.node.isRequired,\n\n    size: PropTypes.oneOf([\n        'small',\n        'default',\n        'big'\n        ]).isRequired,\n\n    type: PropTypes.oneOf([\n        'inverted',\n        'default',\n        'primary',\n        'secondary'\n    ]).isRequired,\n\n    weight: PropTypes.oneOf([\n        'bold',\n        'light'\n    ]).isRequired,\n\n    nowrap: PropTypes.bool\n}\n\nText.defaultProps = {\n    children: null,\n    size: 'small',\n    type: 'default',\n    weight: 'light',\n    nowrap: false\n}\n\nexport default Text;","import React, { Component } from 'react'\nimport { TitleStyle } from './TitleStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\n\nimport Text from '../Text/Text'\n\nclass Title extends Component {\n\n\n    \n    render() {\n        return (\n            <>\n            { this.props.main ?\n            <>\n            <Text size='big' weight='bold'>Ваши предметы</Text>\n            </>\n            :\n            <>\n            <TitleStyle>\n                <FontAwesomeIcon icon={faChevronLeft} onClick={() => this.props.history.goBack()} />\n                <Text size='big' weight='bold'>{this.props.title}</Text>\n            </TitleStyle>\n            </>\n            }\n            </>\n        )\n    }\n} \nexport default withRouter(Title)","import styled from 'styled-components'\n\nexport const NotificationStyle = styled.div `\n    padding-top: 1rem;\n`","import React, { Component } from 'react'\nimport { NotificationStyle } from './NotificationStyle'\nimport Text from '../Text/Text'\n\nclass Notification extends Component {\n    render() {\n\n        let notifications = [   \n                            'Для начала работы - надо указать новый предмет',\n                            'В карточке будут храниться все ваши тестовики и прогресс. Кликните на карту, что бы начать.',\n                            'Самое время начать разбирать тестовики. Нажмите на кнопку снизу, что бы начать',\n                            'Ваш тест готов. Можете кликнуть на карточку и начинать работать'\n                            ]\n\n        let noti_text = notifications[this.props.type];\n        return (\n            <>\n                <NotificationStyle>\n                        <Text size='small' type='secondary'>{noti_text}</Text>\n                </NotificationStyle>\n            </>\n\n        )\n    }\n}\n\nexport default Notification","import styled from 'styled-components'\n\n\nexport const BottomBack = styled.div \n`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    z-index: -500;\n`\n\nexport const BottomBackground = styled.div\n`\n    display: grid;\n    ${props => !props.bottomOpened && \n        `\n        height: 10px;\n        `\n    }\n`\n\nexport const BottomStyle = styled.div `\n\n    display: grid;\n    margin: 0 1rem;\n    background: #fff;\n    padding-bottom: 1rem;\n    \n    \n    transition: 0.1s;\n    \n    .caption {\n        border-radius: 15px;\n\n        display: grid;\n        background: #FFB600;\n        padding: 1rem;\n        justify-content: center;\n        position: relative;\n        z-index: 999;\n        div {\n            display: grid;\n            grid-template-columns: auto 1fr;\n            align-items: center;\n            grid-gap: 0.5rem;\n        }\n    }\n\n    .course-selector {\n        position: relative;\n    }\n    .course-selector-inner {\n        position: absolute;\n        width: 100%;\n    }\n    ${props => props.bottomOpened ? \n        `\n        .course-selector-inner {\n                bottom: 0;\n                opacity: 1;\n                transition: 0.2s;\n                z-index: 1;\n            }\n        ` \n        : \n        `\n            .course-selector-inner {\n                opacity: 0;\n                bottom: -10rem;\n                transition: 0.2s;\n                z-index: -999;\n            }\n        `\n    }\n\n`\n\n    export const BottomQuestion = styled.div \n`\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    `\n    export const BottomCourseSelector = styled.div \n`\n\n`","import styled from 'styled-components'\n\n\nexport const CourseSelectorStyle = styled.div `\nbackground: rgb(251,251,251);\nbackground: linear-gradient(180deg, rgba(251,251,251,1) 0%, rgba(251,251,251,1) 57%, rgba(251,251,251,0.9037814955083596) 72%, rgba(251,251,251,0) 100%);    display: grid;\n    grid-gap: 0.5rem;\n    border-radius: 15px 15px 0 0;\n    padding: 1rem;\n    .selector-item {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        padding: 0.5rem 0;\n    }\n`","import { observable, configure, action, decorate } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass LessonModel {\n\n    lessons = []\n    lesson = {\n        name: null,\n        code: null,\n        language: null\n    }\n\n\n    set(item, value) {\n        this[item] = value\n    }\n\n    addLesson(lesson){\n        let { code } = lesson\n        if(this.lessons.findIndex(o => o.code === code) === -1) {\n            this.lessons.push(lesson)\n        }\n    }\n\n    getLessonData(code) {\n        // if(this.lesson.name === null){\n        this.lesson = this.lessons.find(o => o.code === code)\n        // }\n    }\n\n    deleteFromLessons(code) {\n        if(code){\n            let index = this.lessons.findIndex(o => o.code === code)\n            return this.lessons.splice(index, 1)\n        }\n    }\n}\n\ndecorate(LessonModel, {\n    lessons: observable,\n    lesson: observable,\n    addLesson: action,\n    deleteFromLessons: action,\n    getLessonData: action,\n    set: action\n})\n\nexport default new LessonModel()","import React, { Component } from 'react'\nimport { \n    CourseSelectorStyle\n} from './CourseSelectorStyle'\nimport Text from '../Text/Text'\nimport { withRouter } from 'react-router-dom'\n\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass CourseSelector extends Component {\n\n    constructor(props) {\n        super()\n        \n        this.state = {\n            active: true,\n        }\n    }    \n\n    nextPath(path) {\n        if(path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n\n    onAddLesson(lesson) {\n        LessonModel.addLesson(lesson)\n    }\n \n    \n    render() {\n        let courses = [\n            {\n                name: \"Kazakh history\",\n                language: \"KAZ\",\n                code: \"KHK\"\n            },\n            {\n                name: \"Kazakh history\",\n                language: \"RUS\",\n                code: \"KZR\"\n            },\n            {\n                name: \"Math history\",\n                language: \"RUS\",\n                code: \"MHR\"\n            }\n        ]\n\n        let course = courses.map((data, i) => (\n            <div className='selector-item'\n            onClick={() => this.onAddLesson(data)}\n            key={i}>\n                <Text size='default'>{data.name}</Text>\n                <Text size='default'>({data.language})</Text>\n            </div>\n        ))\n        \n    \n        return (\n            <>  \n                <CourseSelectorStyle>\n                        {course}\n                </CourseSelectorStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CourseSelector))","import React, { Component } from 'react'\nimport { BottomStyle, BottomQuestion, BottomBackground,\nBottomBack } from './BottomStyle'\nimport Text from '../Text/Text'\nimport CourseSelector from '../CourseSelector/CourseSelector'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport {  withRouter } from 'react-router-dom'\n\nclass Bottom extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            bottomOpened: false\n        }\n    }\n\n    render() {\n        return (\n            <>\n            {this.props.type === \"main\" &&\n            <BottomBack>\n                <BottomBackground onClick={() => this.setState({bottomOpened: false})} bottomOpened={this.state.bottomOpened}></BottomBackground>\n                <BottomStyle \n                bottomOpened={this.state.bottomOpened}>\n                    \n                        <div className='course-selector' onClick={() => this.setState({bottomOpened: false})}> \n                            <div \n                            className='course-selector-inner'>\n                                <CourseSelector></CourseSelector>\n                            </div>\n                        </div>\n                        <div className='caption' onClick={() => this.setState({bottomOpened: true})}>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n            </BottomBack>\n            }\n            {/* {this.props.type === 'session' &&\n            <>\n                <BottomStyle onClick={() => this.setState({bottomOpened: true})}>\n                        {!this.state.bottomOpened ?\n                        <BottomInner>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                        </BottomInner>\n                        :\n                        <BottomCourseSelector>\n                        <div className='course-selector'></div>\n                         <div className='caption'>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                        </div>\n                        </BottomCourseSelector>\n                        }\n                </BottomStyle>\n            </>\n            } */}\n            {this.props.type === 'new-test' &&\n                <>\n                <BottomQuestion>\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Начать новый тест</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'next-question' &&\n                <>\n                <BottomQuestion>\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Следующий вопрос</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'submit' &&\n                <>\n                <BottomQuestion>\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Submit</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {/* \n            {this.props.type === 'end-test' &&\n                <>\n                <BottomStyle>\n                    <BottomInner>\n                        <div className='caption'>\n                            <FontAwesomeIcon icon={faChevronLeft} />\n                            <Text size='default'>Go back to MyTests</Text>\n                        </div>\n                    </BottomInner>\n                </BottomStyle>\n                </>\n            }  */}\n            </>\n        )\n    }\n}\n\nexport default withRouter(Bottom)","import styled from 'styled-components'\n\nexport const CourseStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem;\n\n    .card {\n        display: grid;\n        grid-template-columns: 1fr auto;\n    }\n    \n    .title {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        grid-gap: 10px;\n    }\n\n    .progress {\n        display: grid;\n        grid-template-columns: auto auto;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n\n`\nexport const TestStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem; \n      \n    .progress {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n`\nexport const CourseVerification = styled.div\n`\n    position: absolute;\n    height: 100vh;\n    width: 100vw;\n    top: 0;\n    left: 0;\n    ${props => props.onDelete ?\n        `\n            opacity: 1;\n        `\n    :\n        `\n            display: none;\n        `\n    }\n\n`","import styled from 'styled-components'\n\nexport const VerificationStyle = styled.div \n`\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.5);\n`\nexport const VerificationInner = styled.div\n`\n    background: #fff;\n    padding: 1rem;\n    border-radius: 10px;\n    margin: 0 2rem;\n\n    .options {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        margin-top: 1rem;\n        grid-gap: 1rem;\n    }\n`\nexport const VerificationYes = styled.div\n`\n    display: grid;\n    justify-content: center;\n    background: #f0f0f0;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n`\nexport const VerificationNo = styled.div\n`\n    display: grid;\n    justify-content: center;\n    padding: 0.5rem 1rem;\n    background: #ffb600;\n    border-radius: 5px;\n`","import React, { Component } from 'react'\nimport { VerificationStyle, VerificationInner, VerificationYes, VerificationNo } from './VerificationStyle'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass Verification extends Component {\n    \n    onDelete(code) {\n        LessonModel.deleteFromLessons(code)\n    }\n\n    // componentDidMount() {\n        // LessonModel.getLessonData(this.props.match.params.id)\n    // }\n\n    render() {\n        let { name, language, code } = this.props.lesson\n        return (\n            <>\n                <VerificationStyle>\n                    <VerificationInner>\n                        <Text size='default'>Вы уверены, что хотите удалить предмет {`${name} (${language})`} ?</Text>\n                        <div className='options'>\n                            <VerificationYes onClick={() => this.onDelete(code)}>Yes</VerificationYes>\n                            <VerificationNo>No</VerificationNo>\n                        </div>\n                    </VerificationInner>\n                </VerificationStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Verification))","import React, { Component } from 'react'\nimport { CourseStyle, TestStyle, CourseVerification } from './CourseStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport Verification from '../Verification/Verification'\nimport LessonModel from '../../models/lesson'\n\nclass Course extends Component {  \n    \n    state = {\n        onDelete: false\n    }\n\n    nextPath(path) {\n        if(path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n    \n    onClose() {\n        this.setState({\n            onDelete: true\n        })\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onChangeDirection(id) {\n        this.nextPath('/course/' + id)\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onOpenTest(id) {\n        this.nextPath('/test/' + id)\n        //need to add modes for the test\n    }\n    \n    render() {\n        return (\n            <>\n                {!this.props.test ?\n                <>\n                <CourseStyle onDelete={this.state.onDelete}>\n                    <div className='card' onClick={() => this.onChangeDirection(this.props.id)}>\n                    <div className='title'>\n                        <Text size='default'>{this.props.title}</Text>\n                        <Text size='default'>({this.props.language})</Text>\n                    </div>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{this.props.progress}%</div>\n                    </div>\n                    </div>\n                    <div className='delete' onClick={() => this.onClose()}>\n                        <FontAwesomeIcon icon={faTimes} color='#999'/>\n                    </div>\n                    <CourseVerification onDelete={this.state.onDelete} onClick={() => this.setState({onDelete: false})}>\n                        <Verification lesson={LessonModel.lesson}></Verification>\n                    </CourseVerification>\n                </CourseStyle>\n                </>\n                :\n                <>\n                <TestStyle onClick={() => this.onOpenTest(this.props.test_id)}>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{ this.props.progress }%</div>\n                    </div>\n                    <div className='date'>{ this.props.date }</div>\n                </TestStyle>\n                </>\n                }\n            </>\n        )\n    }\n}\n\nexport default withRouter(Course)","import React, { Component } from 'react'\nimport { MainStyle } from './MainStyle'\nimport Title from '../Title/Title'\nimport Notification from '../Notification/Notification'\nimport Bottom from '../Bottom/Bottom'\nimport Course from '../Course/Course'\nimport LessonModel from '../../models/lesson'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\nimport {observer} from 'mobx-react'\n\n\nclass Main extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            notificationCounter: 0,\n        }\n    }\n\n    courses = LessonModel.lessons\n    componentDidMount() {\n        if(this.courses.length > 0)\n        {\n            this.setState({notificationCounter: 1})\n        }\n\n            disableBrowserBackButton();\n\n    }    \n    \n    render() {\n        \n        \n\n        return (\n            <>\n                <MainStyle>\n                    <Title main ></Title>\n                        <Notification type={this.state.notificationCounter}/>\n                        <div className='course-list'>\n                            <TransitionGroup>\n                        {\n                            this.courses.map((data, i) => (\n                                <CSSTransition\n                                timeout={200}\n                                classNames='items'\n                                key={i}\n                                >\n                                    <Course \n                                        title={data.name} \n                                        progress='0' \n                                        language={data.language} \n                                        id={data.code} \n                                        key={i}/> \n                                </CSSTransition>\n                            ))\n                         }\n                        </TransitionGroup>\n                        </div>\n                </MainStyle>\n                <Bottom type='main'/>\n            </>\n        )\n    }\n}\n\nexport default observer(Main)\n","import styled from 'styled-components'\n\nexport const CoursePageStyle = styled.div\n`   \n    padding: 1rem;\n    .test-list {\n        margin-top: 1rem;\n    }\n`","import React, { Component } from 'react'\nimport { CoursePageStyle } from './CoursePageStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport LessonModel from '../../models/lesson'\nimport Notification from '../Notification/Notification'\nimport Course from '../Course/Course'\nimport Bottom from '../Bottom/Bottom'\n\nclass CoursePage extends Component { \n    \n    constructor() {\n        super()\n        this.state = {\n            notificationCounter: 2\n        }\n    }\n\n    \n    tests = [\n        {\n            progress: 10,\n            date: '20.02.20',\n            id: 1\n        }\n    ]\n    \n    componentDidMount() {\n        if(this.tests.length > 0)\n            this.setState({notificationCounter: 3})\n    }\n\n\n    render() {\n\n        let test = this.tests.map((data, i) => (\n            <Course test progress={data.progress} date={data.date} key={i} test_id={data.id}z />\n        ))\n\n        let { name, language } = LessonModel.lesson\n        \n        return (\n            <>\n                <CoursePageStyle>  \n                    {name ?\n                        <Title title={`${name} (${language})`}/>\n                        :\n                        <> hello </>\n                    }\n                    <Notification type={this.state.notificationCounter} />\n                        <div className='test-list'>\n                            {test}\n                        </div>\n                </CoursePageStyle>\n                <div onClick={() => console.log('hello')}> \n                <Bottom type='new-test'/>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(CoursePage)","import styled from 'styled-components'\n\nexport const TestStyle = styled.div \n`   \n    padding-bottom: 4rem;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    .test-content {\n        display: grid;\n    }\n    .test-header {\n        background: #FFB600;\n        padding: 1rem;\n        display: grid;\n        grid-template-rows: auto 1fr;\n        position: fixed;\n\n    }\n`\nexport const TestQuestion = styled.div\n`\n    margin-top: 1rem;\n\n    .test-content-inner {\n        position: relative;\n    }\n    .test-question-wrapper {\n        display: grid;\n        grid-template-columns: repeat(20, 1fr);\n        grid-template-rows: auto 1fr;\n        transition: transform 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    }\n    .test-question {\n        grid-gap: 0.5rem;\n        display: grid;\n        padding: 1rem;\n        width: calc(100vw - 4rem);\n        border-radius: 15px;\n        margin-right: 0.5rem;\n        background: #fff;\n        grid-template-rows: auto 1fr;\n    }\n    .status {\n        display: grid;\n        grid-template-columns: 1fr auto;\n    }\n    // .correct {\n        // background: rgba(130, 222, 139, 0.5);\n    // }\n    // .incorrect {\n        // background: rgba(255, 128, 128, 0.2);\n    // }\n`\nexport const TestOptions = styled.div \n`       \n    margin-top: ${props => props.margin}px;\n    width: calc(${props => props.width}px);\n    .test-option_wrapper-absolute {\n        position: absolute;\n        padding-bottom: 4rem;\n    }\n    .test-option-wrapper {\n        display: grid\n        grid-gap: 1rem;\n    }\n    .test-option {\n        background: #fafafa;\n        border-radius: 10px;\n        padding: 1rem;\n        margin: 1rem;\n    }   \n    .correct {\n        background: rgba(130, 222, 139, 0.5);\n    }\n    .incorrect {\n        background: rgba(255, 128, 128, 0.2);\n    }\n`\nexport const TestRusults = styled.div \n`\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-gap: 3rem;\n\n    .test-answer {\n        display: grid;\n        grid-gap: 1rem;\n    }\n    .test-answer_item {\n        padding-bottom: 1rem;\n    }\n`","export const TestData = [\n    {\n        id: 0,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Административных условий', 'Равным образом рамки и место обучения кадров', 'Cистемы обучения кадров, соответствует насущным', 'Равным образом рамки и место обучения кадров', 'Равным образом рамки и место обучения кадров'],\n        answer: 'Административных условий'\n    },\n    {\n        id: 1,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Bassan', 'Shmargun', 'Lirinirill', 'Darnurda', 'Darnurda'],\n        answer: 'Bassan'\n    },\n    {\n        id: 2,\n        question: 'What is your age?',\n        options: ['1', '2', '3', '4'],\n        answer: '2'\n    },\n    {\n        id: 3,\n        question: 'What is your pussy?',\n        options: ['Assanpussy', 'Argunpussy', 'Chirillpussy', 'Argunpussy'],\n        answer: 'Chirillpussy'\n    },\n]","import React, { Component } from 'react'\nimport { TestStyle, TestQuestion, TestOptions, TestRusults } from './TestStyle'\nimport { TestData } from '../../data/TestData'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport Bottom from '../Bottom/Bottom'\nimport Text from '../Text/Text'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { observer } from 'mobx-react'\nimport LessonModel from '../../models/lesson'\nclass Test extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: props.window,\n            userAnswer: null,\n            currentQuestion: 0,\n            options: [],\n            correctAnswer: null,\n            testEnd: false,\n            score: 0,\n            questions: TestData.map(data => data.question),\n            elHeight: 0\n        }\n    }\n    componentWillMount() {\n        this.setState({width: window.innerWidth})   \n    }\n    \n    \n    loadTest = () => {\n        const {currentQuestion} = this.state;\n        this.setState(() => {\n            return {\n                questions: TestData.map(data => data.question),\n                options: TestData[currentQuestion].options,\n                answers: TestData[currentQuestion].answer,\n                correctAnswer: TestData[currentQuestion].answer\n            }\n        })\n    }\n    \n    componentDidMount() {\n        this.loadTest();\n\n        const elHeight = this.divElement.clientHeight;\n        this.setState({ elHeight })\n\n    }\n    \n    nextQuestionHandler = () => {\n\n        const {userAnswer, correctAnswer, score} = this.state\n        \n        this.setState({\n            currentQuestion: this.state.currentQuestion + 1 \n        })\n        //increment the score\n        if(userAnswer === correctAnswer) {\n            this.setState({\n                score: score + 1\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { currentQuestion } = this.state;\n        if(this.state.currentQuestion !== prevState.currentQuestion) {\n            this.setState(() => {\n                return {\n                    questions: TestData.map(data => data.question),\n                    options: TestData[currentQuestion].options,\n                    answers: TestData[currentQuestion].answer,\n                    correctAnswer: TestData[currentQuestion].answer,\n                    userAnswer: null\n                }\n            })\n        }\n    }\n\n    setAnswer(answer) {\n        this.setState({\n            userAnswer: answer\n        })\n    }\n\n    finishHandler = () => {\n\n        const {userAnswer, correctAnswer, score} = this.state\n        \n        if(this.state.currentQuestion === TestData.length - 1) {\n            this.setState({\n                testEnd: true\n            })\n\n            //increment the score for final question\n            if(userAnswer === correctAnswer) {\n                this.setState({\n                    score: score + 1\n                })\n            }\n        }\n    }\n    \n    render() {\n        const { questions, options, currentQuestion, userAnswer, correctAnswer, testEnd } = this.state;\n\n        //new return to show final score\n        if(testEnd) {\n            return (\n                <TestRusults>\n                <div>hello, your final score is {this.state.score}</div>\n                <div className='test-answer'>\n                    need to remember:\n                    <div>\n                        {TestData.map((data, index) => (\n                            <div\n                            className='test-answer_item'\n                            key={index}>  \n                                <Text type='secondary'>\n                                    (incorrect ans number) из {TestData.length}\n                                </Text>\n                                <div> \n                                {data.question}\n                                </div>\n                                {data.answer}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <Bottom type='end-test'/>\n                </TestRusults>\n            )\n        }\n\n        let isAnswerCorrect, answer\n\n        if(userAnswer === correctAnswer){\n            isAnswerCorrect = true\n        } else {\n            isAnswerCorrect = false\n        }\n        \n        return (\n            <>\n                <TestStyle>\n                    <div className='test-header'\n                    ref = { (divElement) => {this.divElement = divElement}}\n                    >\n                        <div className='test-header-fixed'>\n                    <Title title='{LessonModel.lesson.name}' />\n                    <div className='test-content'>\n                    <TestQuestion>\n                        <div className={`test-content-inner active-slide-${currentQuestion}`}>\n                        <div \n                            className='test-question-wrapper'\n                            style={{\n                                'transform': `translateX(-${currentQuestion*(100/TestData.length)}%)`\n                            }}\n                        >\n                        {questions.map((data, i) => \n                        <div\n                            key={i}\n                            className={`test-question\n                            ${userAnswer === correctAnswer ? 'correct' :\n                            userAnswer && !isAnswerCorrect && 'incorrect' }`}\n                        >\n                            <div className='status'>\n                            <Text type='secondary'>\n                                Вопрос {currentQuestion + 1} из {TestData.length}\n                            </Text>\n                            {userAnswer === correctAnswer ?\n                            <>\n                                <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg' />\n                            </>\n                            :\n                            userAnswer && !isAnswerCorrect &&\n                            <>\n                            <FontAwesomeIcon icon={faTimesCircle} color='#FF8080' size='lg' />\n                            \n                            </>}\n                            </div>\n                            <div className='questions'>\n                                {data}\n                            </div>\n                        </div>\n                        )}\n                        <div></div>\n                        </div>\n                        </div>\n                    </TestQuestion>\n                    </div>\n                    </div>\n                    </div>\n                    <TestOptions \n                    margin={this.state.elHeight}\n                    width={this.state.width}>\n                            {options.map(option => (\n                        <div className=\"test-option-wrapper\">\n                                <div\n                                key={option.id}\n                                className={`test-option\n                                ${userAnswer && option === correctAnswer ? 'correct' :\n                                userAnswer === option && !isAnswerCorrect && 'incorrect' }\n                                `}\n                                onClick={() => {\n                                    !userAnswer ? this.setAnswer(option) : answer = null\n                                }}\n                                >\n                                    {option}\n                                </div>\n                            </div>\n                            ))}\n                    </TestOptions>\n                    { currentQuestion < TestData.length - 1 &&\n                    <div onClick={this.nextQuestionHandler}>\n                        <Bottom type='next-question'/>\n                    </div>\n                    }\n                    { currentQuestion === TestData.length - 1 &&\n                    <div onClick={this.finishHandler}>\n                        <Bottom type='submit'/>\n                    </div>\n                    }\n                </TestStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Test))","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\nimport './index.css'\n\n\nimport Main from './components/Main/Main'\nimport Bottom from './components/Bottom/Bottom'\nimport Verification from './components/Verification/Verification'\nimport CoursePage from './components/CoursePage/CoursePage';\nimport Test from './components/Test/Test'\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\nlet url = \"mentorium-vk-app\"\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n    // serviceWorker.registre();\n    \nReactDOM.render(\n    <BrowserRouter basename={url}>\n        <App>\n            <Route\n            exact\n            path=\"/\"\n            render={() => {\n                return (\n                    <>\n                        <Main/> \n                    </>\n                )\n            }}\n            />\n            <Route\n            exact\n            path=\"/new\"\n            render={() => {\n                return (\n                    <>\n                        <Main/>\n                        <Bottom type='session'/>\n                    </>\n                )\n            }}\n            />\n         \n            {/* <Route\n            exact\n            path=\"/close/:id\"\n            render={() => {\n                return (\n                    <>\n                        <Main/>\n                        <Bottom type='session'/>\n                        <Verification/>\n                    </>\n                )\n            }}/> */}\n            <Route\n            exact\n            path=\"/course/:id\"\n            render={() => {\n                return (\n                    <>\n                        <CoursePage/>\n                    </>\n                )\n            }}/>\n            <Route\n            exact\n            path=\"/test/:test_id\"\n            render={() => {\n                return (\n                    <>\n                        <Test/>\n                    </>\n                )\n            }}\n            />\n        </App>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}