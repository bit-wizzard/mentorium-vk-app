{"version":3,"sources":["App.js","components/Main/MainStyle.js","components/Title/TitleStyle.js","components/Text/TextStyle.js","components/Text/Text.js","components/Title/Title.js","components/Notification/NotificationStyle.js","components/Notification/Notification.js","components/Bottom/BottomStyle.js","components/CourseSelector/CourseSelectorStyle.js","models/lesson.js","components/CourseSelector/CourseSelector.js","components/Bottom/Bottom.js","components/Course/CourseStyle.js","components/Verification/VerificationStyle.js","components/Verification/Verification.js","models/test.js","components/Course/Course.js","components/Main/Main.js","components/CoursePage/CoursePageStyle.js","data/TestData.js","components/CoursePage/CoursePage.js","components/Test/TestStyle.js","components/Test/Test.js","components/Submit/SubmitStyle.js","components/Submit/Submit.js","index.js"],"names":["App","this","props","children","Component","withRouter","observer","MainStyle","styled","div","TitleStyle","TextStyle","p","nowrap","size","type","weight","Text","defaultProps","Title","main","className","icon","faChevronLeft","title","onClick","history","goBack","NotificationStyle","Notification","notifications","state","noti_text","setTimeout","setState","BottomBack","bottomOpened","BottomBackground","BottomStyle","BottomQuestion","CourseSelectorStyle","configure","enforceActions","LessonModel","lessons","lesson","name","code","language","item","value","findIndex","o","push","find","index","splice","decorate","observable","addLesson","action","deleteFromLessons","getLessonData","set","CourseSelector","active","path","location","pathname","course","map","data","i","onAddLesson","key","Bottom","faPlus","faChevronRight","goToTests","CourseStyle","TestStyle","CourseVerification","onDelete","VerificationStyle","VerificationInner","VerificationYes","VerificationNo","Verification","TestModel","appliedTests","test","id","progress","date","questionsData","correctAnswers","wrongAnswers","submittedTest","length","a","Date","toISOString","slice","addNewTest","setTest","submitTest","Course","nextPath","onOpenTest","test_id","faCheckCircle","color","onChangeDirection","onClose","faTimes","Main","courses","width","notificationCounter","firstEnter","disableBrowserBackButton","next","window","innerWidth","margin","TransitionGroup","CSSTransition","timeout","classNames","CoursePageStyle","TestData","question","options","answer","CoursePage","notiCounter","tests","firstTime","getTests","z","onAddNewTest","TestQuestion","TestOptions","TestRusults","Test","loadTest","currentQuestion","questions","answers","correctAnswer","nextQuestionHandler","userAnswer","score","blankAnswers","indexInBlank","indexOf","filter","sort","nextQ","finishHandler","elHeight","testEnd","divElement","clientHeight","prevProps","prevState","isAnswerCorrect","ref","style","faTimesCircle","option","setAnswer","SubmitStyle","Submit","bridge","send","ReactDOM","render","basename","exact","document","getElementById"],"mappings":"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","file":"static/js/main.8a613b48.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n//mobx\nimport { observer } from 'mobx-react'\nimport { withRouter, Switch, Route, } from 'react-router-dom'\nimport './App.css'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.props.children}\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default withRouter(observer(App));","import styled from 'styled-components'\n\nexport const MainStyle = styled.div \n`   \n    padding: 1rem;\n    .course-list {\n        margin-top: 1rem;\n    }\n    .items-enter {\n        opacity: 0;\n    }\n    .items-enter-active {\n        opacity: 1;\n        transition: 0.5s;\n    }\n\n    .items-exit {\n        opacity: 1;\n    }\n    .items-exit-active {\n        opacity: 0;\n        transition: 0.2s;\n    }\n\n    .main-header {\n            background: #f0f0f0;\n            margin: -1rem -1rem 0 -1rem;     \n            padding: 1rem;\n            display: grid;\n            grid-template-rows: auto 1fr;\n            height: 20vh;  \n            border-radius: 0; \n    }\n    `\n\n    //     ${props => (props.margin === 0 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: first;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes first {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    //     `\n    // }\n    //     ${props => (props.margin === 1 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: second;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes second {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    // `\n    // }\n","import styled from 'styled-components'\n\nexport const TitleStyle = styled.div `\n    display: grid;\n    grid-template-rows: auto 1fr;\n    align-items: center;\n    grid-gap: 1rem;\n    .chevron {\n        opacity: 0;\n    }\n`","import styled from 'styled-components'\n\nconst TextStyle = styled.p \n`\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    white-space: ${props => props.nowrap ? 'nowrap' : 'normal'};\n    line-height: ${props => \n        props.size === 'medium' || props.size === 'small' || props.size === 'smallest' ?\n        '1.5'\n        :\n        props.size === 'big' ?\n        '1.25'\n        :\n        props.size === 'large'? \n        `1.25`\n        :\n        props.size === 'largest' &&\n        '1'\n    };\n    font-size: ${props => \n        props.size === 'small' ?\n        '15px'\n        :\n        props.size === 'default' ?\n        '18px'\n        :\n        props.size === 'big' &&\n        '24px'\n    };\n    color: ${props => \n        props.type === 'primary' ?\n        '#000'\n        :\n        props.type === 'secondary' ?\n        '#6a6a6a'\n        :\n        props.type === 'brand' &&\n        '#ffb600'\n    };\n    font-weight: ${props => \n        props.weight === 'bold' ? 'bold'\n        :\n        props.weight === 'light' && 'regular'\n    };\n\n`\n\nexport default TextStyle;","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nimport TextStyle from './TextStyle'\n\nconst Text = ({ children, \n                size,\n                type, \n                weight, \n                nowrap }) => {\n\n        return (\n            <>\n                <TextStyle\n                    size={size}\n                    type={type}\n                    weight={weight}\n                    nowrap={nowrap}\n                    >\n                    {children}\n                </TextStyle>\n            </>\n        )\n}\n\nText.propTypes = {\n    children: PropTypes.node.isRequired,\n\n    size: PropTypes.oneOf([\n        'small',\n        'default',\n        'big'\n        ]).isRequired,\n\n    type: PropTypes.oneOf([\n        'inverted',\n        'default',\n        'primary',\n        'secondary'\n    ]).isRequired,\n\n    weight: PropTypes.oneOf([\n        'bold',\n        'light'\n    ]).isRequired,\n\n    nowrap: PropTypes.bool\n}\n\nText.defaultProps = {\n    children: null,\n    size: 'small',\n    type: 'default',\n    weight: 'light',\n    nowrap: false\n}\n\nexport default Text;","import React, { Component } from 'react'\nimport { TitleStyle } from './TitleStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\n\nimport Text from '../Text/Text'\n\nclass Title extends Component {\n\n\n    \n    render() {\n        return (\n            <>\n            { this.props.main ?\n            <TitleStyle>\n                <div className='chevron'>\n                    <FontAwesomeIcon icon={faChevronLeft}/>\n                </div>\n                <Text size='big' weight='bold'>{this.props.title}</Text>\n            </TitleStyle>\n            :\n            <TitleStyle>\n                <div>\n                    <FontAwesomeIcon icon={faChevronLeft} onClick={() => this.props.history.goBack()} />\n                </div>\n                <Text size='big' weight='bold'>{this.props.title}</Text>\n            </TitleStyle>\n            }\n            \n            </>\n        )\n    }\n} \nexport default withRouter(Title)","import styled from 'styled-components'\n\nexport const NotificationStyle = styled.div `\n`","import React, { Component } from 'react'\nimport { NotificationStyle } from './NotificationStyle'\nimport Text from '../Text/Text'\n\nclass Notification extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            noti_text: this.notifications[this.props.type]\n        }\n\n    }\n\n    notifications = [   \n        'Для начала работы - надо указать новый предмет',\n        'В карточке будут храниться все ваши тестовики и прогресс. Кликните на карту, что бы начать.',\n        'Самое время начать разбирать тестовики. Нажмите на кнопку снизу, что бы начать',\n        'Ваш тест готов. Можете кликнуть на карточку и начинать работать'\n        ]\n\n    componentWillUpdate() {\n        if(this.props.type == 0 || this.props.type == 1)\n            setTimeout(() => {this.setState({noti_text: this.notifications[this.props.type]})}, 0)\n        else \n            setTimeout(() => {this.setState({noti_text: this.notifications[this.props.type]})}, 0)\n\n    }\n            //тут надо буде еще ебнуьб условие для this.props.type 1 || 2    \n\n    // componentWillMount() {\n        // alert(this.props.type)\n    // }\n    render() {           \n        return (\n            <>\n                <NotificationStyle>\n                    <Text size='small'>{this.state.noti_text}</Text>\n                </NotificationStyle>\n            </>\n\n        )\n    }\n}\n\nexport default Notification","import styled from 'styled-components'\n\n\nexport const BottomBack = styled.div \n`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    ${props => props.bottomOpened ? `z-index: 1`:`z-index: -500`}\n`\n\nexport const BottomBackground = styled.div\n`\n    display: grid;\n    ${props => !props.bottomOpened && \n        `\n        height: 10px;\n        `\n    }\n`\n\nexport const BottomStyle = styled.div `\n\n    display: grid;\n    margin: 0 1rem;\n    background: #fff;\n    padding-bottom: 1rem;\n    \n    \n    transition: 0.1s;\n    \n    .caption {\n        border-radius: 15px;\n\n        display: grid;\n        background: #FFB600;\n        padding: 1rem;\n        justify-content: center;\n        position: relative;\n        z-index: 999;\n        div {\n            display: grid;\n            grid-template-columns: auto 1fr;\n            align-items: center;\n            grid-gap: 0.5rem;\n        }\n    }\n\n    .course-selector {\n        position: relative;\n    }\n    .course-selector-inner {\n        position: absolute;\n        width: 100%;\n    }\n    ${props => props.bottomOpened ? \n        `\n        .course-selector-inner {\n                bottom: 0;\n                opacity: 1;\n                transition: 0.2s;\n                z-index: 1;\n            }\n        ` \n        : \n        `\n            .course-selector-inner {\n                opacity: 0;\n                bottom: -10rem;\n                display: none;\n                transition: 0.2s;\n                z-index: -999;\n            }\n        `\n    }\n\n`\n\n    export const BottomQuestion = styled.div \n`\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    `\n    export const BottomCourseSelector = styled.div \n`\n\n`","import styled from 'styled-components'\n\n\nexport const CourseSelectorStyle = styled.div `\nbackground: rgb(251,251,251);\nbackground: linear-gradient(180deg, rgba(251,251,251,1) 0%, rgba(251,251,251,1) 57%, rgba(251,251,251,0.9037814955083596) 72%, rgba(251,251,251,0) 100%);    display: grid;\n    grid-gap: 0.5rem;\n    border-radius: 15px 15px 0 0;\n    padding: 1rem;\n    .selector-item {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        padding: 0.5rem 0;\n    }\n`","import { observable, configure, action, decorate } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass LessonModel {\n\n    lessons = []\n    lesson = {\n        name: null,\n        code: null,\n        language: null\n    }\n\n\n    set(item, value) {\n        this[item] = value\n    }\n\n    addLesson(lesson){\n        let { code } = lesson\n        if(this.lessons.findIndex(o => o.code === code) === -1) {\n            this.lessons.push(lesson)\n        }\n    }\n\n    getLessonData(code) {\n        // if(this.lesson.name === null){\n        this.lesson = this.lessons.find(o => o.code === code)\n        // }\n    }\n\n    deleteFromLessons(code) {\n        if(code){\n            let index = this.lessons.findIndex(o => o.code === code)\n            return this.lessons.splice(index, 1)\n        }\n    }\n}\n\ndecorate(LessonModel, {\n    lessons: observable,\n    lesson: observable,\n    addLesson: action,\n    deleteFromLessons: action,\n    getLessonData: action,\n    set: action\n})\n\nexport default new LessonModel()","import React, { Component } from 'react'\nimport { \n    CourseSelectorStyle\n} from './CourseSelectorStyle'\nimport Text from '../Text/Text'\nimport { withRouter } from 'react-router-dom'\n\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass CourseSelector extends Component {\n\n    constructor(props) {\n        super()\n        \n        this.state = {\n            active: true,\n        }\n    }    \n\n    nextPath(path) {\n        if(path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n\n    onAddLesson(lesson) {\n        LessonModel.addLesson(lesson)\n    }\n \n    \n    render() {\n        let courses = [\n            {\n                name: \"Казахстан тарихы\",\n                language: \"🇰🇿\",\n                code: \"KHK\"\n            },\n            {\n                name: \"История Казахстана\",\n                language: \"🇷🇺\",\n                code: \"KZR\"\n            },\n            {\n                name: \"Математикалк сауаттылык\",\n                language: \"🇰🇿\",\n                code: \"MHR\"\n            }\n        ]\n        \n        let course = courses.map((data, i) => (\n            <div className='selector-item'\n            onClick={() => this.onAddLesson(data)}\n            key={i}>\n                <Text size='default'>{data.name}</Text>\n                <Text size='default'>{data.language}</Text>\n            </div>\n        ))\n        \n    \n        return (\n            <>  \n                <CourseSelectorStyle>\n                        {course}\n                </CourseSelectorStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CourseSelector))","import React, { Component } from 'react'\nimport { BottomStyle, BottomQuestion, BottomBackground,\nBottomBack } from './BottomStyle'\nimport Text from '../Text/Text'\nimport CourseSelector from '../CourseSelector/CourseSelector'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport {  withRouter } from 'react-router-dom'\n\nclass Bottom extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            bottomOpened: false\n        }\n    }\n    goToTests() {\n        this.props.history.goBack()\n        this.props.history.goBack()\n    }\n\n    render() {\n        return (\n            <>\n            {this.props.type === \"main\" &&\n            <BottomBack bottomOpened={this.state.bottomOpened}>\n                <BottomBackground onClick={() => this.setState({bottomOpened: false})} bottomOpened={this.state.bottomOpened}></BottomBackground>\n                <BottomStyle \n                bottomOpened={this.state.bottomOpened}>\n                    \n                        <div className='course-selector' onClick={() => this.setState({bottomOpened: false})}> \n                            <div \n                            className='course-selector-inner'>\n                                <CourseSelector></CourseSelector>\n                            </div>\n                        </div>\n                        <div className='caption' onClick={() => this.setState({bottomOpened: true})}>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n            </BottomBack>\n            }\n            {/* {this.props.type === 'session' &&\n            <>\n                <BottomStyle onClick={() => this.setState({bottomOpened: true})}>\n                        {!this.state.bottomOpened ?\n                        <BottomInner>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                        </BottomInner>\n                        :\n                        <BottomCourseSelector>\n                        <div className='course-selector'></div>\n                         <div className='caption'>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                        </div>\n                        </BottomCourseSelector>\n                        }\n                </BottomStyle>\n            </>\n            } */}\n            {this.props.type === 'new-test' &&\n                <>\n                <BottomQuestion>\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Начать новый тест</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'next-question' &&\n                <>\n                <BottomQuestion>\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Следующий вопрос</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'submit' &&\n                <>\n                <BottomQuestion \n                // onClick={() => this.props.history.goBack()}\n                >\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Submit</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'end-test' &&\n                <>\n                <BottomQuestion \n                onClick={() => this.goToTests()}\n                >\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faChevronLeft} />\n                            <Text size='default'>Венуться к моим тестам</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            </>\n        )\n    }\n}\n\nexport default withRouter(Bottom)","import styled from 'styled-components'\n\nexport const CourseStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem;\n\n    .card {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        grid-gap: 1rem;\n    }\n    \n    .title {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        grid-gap: 10px;\n        align-items: center;\n    }\n\n    .progress {\n        display: grid;\n        grid-template-columns: auto auto;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n\n`\nexport const TestStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem; \n      \n    .progress {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n`\nexport const CourseVerification = styled.div\n`\n    position: absolute;\n    height: 100vh;\n    width: 100vw;\n    top: 0;\n    ${props => props.onDelete ?\n        `\n            left: 0;\n            opacity: 1;\n            transition: opacity 0.3s;\n        `\n    :\n        `\n            opacity: 0;\n            transition: opacity 0.3s;\n            left: -1000px;\n        `\n    }\n`","import styled from 'styled-components'\n\nexport const VerificationStyle = styled.div \n`\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.2);\n`\nexport const VerificationInner = styled.div\n`\n    background: #fff;\n    padding: 1rem;\n    border-radius: 10px;\n    margin: 0 1rem;\n\n    .options {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        margin-top: 1rem;\n        grid-gap: 1rem;\n    }\n`\nexport const VerificationYes = styled.div\n`\n    display: grid;\n    justify-content: center;\n    background: #f0f0f0;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n`\nexport const VerificationNo = styled.div\n`\n    display: grid;\n    justify-content: center;\n    padding: 0.5rem 1rem;\n    background: #ffb600;\n    border-radius: 5px;\n`","import React, { Component } from 'react'\nimport { VerificationStyle, VerificationInner, VerificationYes, VerificationNo } from './VerificationStyle'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass Verification extends Component {\n    \n    onDelete(code) {\n        LessonModel.deleteFromLessons(code)\n    }\n\n    // componentDidMount() {\n        // LessonModel.getLessonData(this.props.match.params.id)\n    // }\n\n    render() {\n        let { name, language, code } = this.props.lesson\n        return (\n            <>\n                <VerificationStyle>\n                    <VerificationInner>\n                        <Text size='default'>Вы уверены, что хотите удалить предмет {`${name} ${language}`} ?</Text>\n                        <div className='options'>\n                            <VerificationYes onClick={() => this.onDelete(code)}>Да</VerificationYes>\n                            <VerificationNo>Нет</VerificationNo>\n                        </div>\n                    </VerificationInner>\n                </VerificationStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Verification))","import { observable, decorate, action, configure } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass TestModel {\n    appliedTests = []\n    test = {\n        id: null,\n        progress: null,\n        date: null,\n        code: null,\n        questionsData: [],\n        correctAnswers: [],\n        wrongAnswers: []\n    }\n\n    submittedTest = {}\n\n\n    set(item, value){\n        this[item] = value\n    }\n\n    addNewTest(test){\n        let id = this.appliedTests.length + 1 \n        test.id = id\n        \n        let a = new Date().toISOString()\n        test.date = a.slice(8, 10) + '/' + a.slice(5, 7) + '/' + a.slice(0, 4)\n        \n        test.progress = 0\n\n        \n        this.appliedTests.push(test)\n    }\n\n    getTests(){\n        return this.appliedTests\n    }\n\n    setTest(id){\n        this.test = this.appliedTests.find(o => o.id == id) \n    }\n\n    submitTest(test){\n        this.submittedTest = test\n        let a = new Date().toISOString()\n        test.date = a.slice(8, 10) + '/' + a.slice(5, 7) + '/' + a.slice(0, 4)\n        \n        let id = this.appliedTests.findIndex(o => o.id == test.id)\n\n        this.appliedTests[id] = test\n    }\n}\n\ndecorate(TestModel, {\n    appliedTests: observable,\n\n    addNewTest: action,\n    setTest: action,\n    submitTest: action,\n    set: action\n})\n\nexport default new TestModel\n","import React, { Component } from 'react'\nimport { CourseStyle, TestStyle, CourseVerification } from './CourseStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport Verification from '../Verification/Verification'\nimport LessonModel from '../../models/lesson'\nimport TestModel from '../../models/test'\n\nclass Course extends Component {  \n    \n    state = {\n        onDelete: false\n    }\n\n        nextPath(path) {\n            if(path !== this.props.location.pathname)\n                this.props.history.push(path)\n        }\n        \n    onClose() {\n        this.setState({\n            onDelete: true\n        })\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onChangeDirection(id) {\n        this.nextPath('/course/' + id)\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onOpenTest(id) {\n        TestModel.setTest(id)\n        this.nextPath('/test/' + id)\n        //need to add modes for the test\n    }\n    \n    render() {\n        return (\n            <>\n                {!this.props.test ?\n                <>\n                <CourseStyle onDelete={this.state.onDelete}>\n                    <div className='card' onClick={() => this.onChangeDirection(this.props.id)}>\n                    <div className='title'>\n                        <Text size='default'>{this.props.title}</Text>\n                        <Text size='default'>{this.props.language}</Text>\n                    </div>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{this.props.progress}%</div>\n                    </div>\n                    </div>\n                    <div className='delete' onClick={() => this.onClose()}>\n                        <FontAwesomeIcon icon={faTimes} color='#999'/>\n                    </div>\n                    <CourseVerification onDelete={this.state.onDelete} onClick={() => this.setState({onDelete: false})}>\n                        <Verification lesson={LessonModel.lesson}></Verification>\n                    </CourseVerification>\n                </CourseStyle>\n                </>\n                :\n                <>\n                <TestStyle onClick={() => this.onOpenTest(this.props.test_id)}>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{ this.props.progress }%</div>\n                    </div>\n                    <div className='date'>{ this.props.date }</div>\n                </TestStyle>\n                </>\n                }\n            </>\n        )\n    }\n}\n\n export default withRouter(Course)","import React, { Component } from 'react'\nimport { MainStyle } from './MainStyle'\nimport Title from '../Title/Title'\nimport Notification from '../Notification/Notification'\nimport Bottom from '../Bottom/Bottom'\nimport Course from '../Course/Course'\nimport LessonModel from '../../models/lesson'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\nimport {observer} from 'mobx-react'\n\n\nclass Main extends Component {\n\n\n    constructor() {\n        super()\n        this.state = {\n            width: null,\n            notificationCounter: 0,\n            firstEnter: true,\n        }\n    }\n    \n    courses = LessonModel.lessons\n    \n    \n\n    componentWillMount() {\n        \n        if(this.courses.length > 0)\n            this.setState({notificationCounter: 1})\n    }\n\n\n    componentDidMount() {\n        disableBrowserBackButton();\n    }\n    nextPage() {\n        this.setState({next: true})\n    }\n\n    componentDidUpdate() {\n\n        if(this.state.notificationCounter == 0 && this.courses.length > 0)\n                this.setState({notificationCounter: 1})\n\n        if(this.state.notificationCounter == 1 && this.courses.length == 0) \n                this.setState({notificationCounter: 0})\n\n        if(this.state.firstEnter) {\n            this.setState({firstEnter: false})\n            this.setState({width: window.innerWidth})\n        }\n\n    }\n    render() {\n              \n\n        return (\n            <>\n                <MainStyle \n                next={this.state.next}\n                width={this.state.width}\n                margin={this.state.notificationCounter}\n                firstEnter={this.state.firstEnter}>\n                    <div className='toggle'></div>\n                    <div className='main-header'>\n                    <Title main title='Мои предметы' ></Title>\n                            <div className='notification' >\n                                <Notification type={this.state.notificationCounter}/>\n                            </div>\n                            </div>\n                        <div className='course-list'>\n                            <TransitionGroup>\n                        {\n                            this.courses.map((data, i) => (\n                                <CSSTransition\n                                timeout={500}\n                                classNames='items'\n                                key={i}\n                                >\n                                    <Course \n                                        title={data.name} \n                                        progress='0' \n                                        language={data.language} \n                                        id={data.code} \n                                        key={i}/> \n                                </CSSTransition>\n                            ))\n                         }\n                        </TransitionGroup>\n                        </div>\n                </MainStyle>\n                <Bottom type='main'/>\n            </>\n        )\n    }\n}\n\nexport default observer(Main)\n","import styled from 'styled-components'\n\nexport const CoursePageStyle = styled.div\n`   \n    padding: 1rem;\n    .main-header {\n        background: #f0f0f0;\n        margin: -1rem -1rem 0 -1rem;     \n        padding: 1rem;\n        display: grid;\n        grid-template-rows: auto 1fr;\n        height: 20vh;  \n        border-radius: 0; \n        position: fixed;\n    }\n    .test-list {\n        margin-top: calc(20vh + 2rem);\n        padding-bottom: 4rem;\n    }\n    .items-enter {\n        opacity: 0;\n    }\n    .items-enter-active {\n        opacity: 1;\n        transition: 0.5s;\n    }\n\n    .items-exit {\n        opacity: 1;\n    }\n    .items-exit-active {\n        opacity: 0;\n        transition: 0.2s;\n    }\n    `\n\n    //     ${props => (props.margin === 2 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: first;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes first {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    //     `\n    // }   \n    //     ${props => (props.margin === 3 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: second;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes second {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    // `\n    // }","export const TestData = [\n    {\n        id: 0,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Административных условий', 'Равным образом рамки и место обучения кадров', 'Cистемы обучения кадров, соответствует насущным', 'Равным образом рамки и место обучения кадров', 'Равным образом рамки и место обучения кадров'],\n        answer: 'Административных условий'\n    },\n    {\n        id: 1,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Bassan', 'Shmargun', 'Lirinirill', 'Darnurda', 'Darnurda'],\n        answer: 'Bassan'\n    },\n    {\n        id: 2,\n        question: 'What is your age?',\n        options: ['1', '2', '3', '4'],\n        answer: '2'\n    },\n    {\n        id: 3,\n        question: 'What is your pussy?',\n        options: ['Assanpussy', 'Argunpussy', 'Chirillpussy', 'Argunpussy'],\n        answer: 'Chirillpussy'\n    },\n]","import React, { Component } from 'react'\nimport { CoursePageStyle } from './CoursePageStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport LessonModel from '../../models/lesson'\nimport Notification from '../Notification/Notification'\nimport Course from '../Course/Course'\nimport Bottom from '../Bottom/Bottom'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\n\nimport { TestData } from '../../data/TestData'\nimport TestModel from '../../models/test'\nimport { observer } from 'mobx-react'\n\n\nclass CoursePage extends Component { \n    \n    constructor() {\n        super()\n        this.state = {\n            notiCounter: 2,\n            tests: TestModel.appliedTests,\n            width: null,\n            firstTime: true,\n        }\n    }\n\n    componentWillMount() {\n        \n        if(this.state.tests.length > 0)\n            this.setState({notiCounter: 3})\n    }\n\n    componentDidUpdate() {\n        if(this.state.notiCounter == 2 && this.state.tests.length > 0)\n                this.setState({notiCounter: 3})\n\n        if(this.state.notiCounter == 3 && this.state.tests.length == 0) \n                this.setState({notiCounter: 2})\n\n        if(this.state.firstTime) {\n            this.setState({firstTime: false})\n            this.setState({width: window.innerWidth})\n        }\n    }\n    componentDidMount() {\n        let tests = TestModel.getTests()\n        this.setState({ tests })\n    }\n\n    \n    onAddNewTest() {\n        let test = { code: 0  }\n        test.code = LessonModel.lesson.code\n        test.questionsData = TestData\n        TestModel.addNewTest(test)\n    }\n\n    render() {\n\n        // let test = this.state.tests.map((data, i) => (\n            // <Course test progress={data.progress} date={data.date} key={i} test_id={data.id}z />\n        // ))\n\n        let { name, language } = LessonModel.lesson\n        \n        return (\n            <>\n                <CoursePageStyle\n                width={this.state.width}\n                margin={this.state.notiCounter}>\n                    <div className='main-header'>\n                        <Title title={`${name} ${language}`}/>\n                        <div className='notification'>\n                    <Notification type={this.state.notiCounter} />\n                    </div>\n                    </div>\n                        <div className='test-list'>\n                            <TransitionGroup>\n\n                            {\n                                this.state.tests.map((data, i) => (\n                                    <CSSTransition\n                                    timeout={500}\n                                    classNames='items'\n                                    key={i}\n                                >\n                                        <Course test progress={data.progress} date={data.date} key={i} test_id={data.id}z />\n                                    </CSSTransition>\n                                ))\n                            }\n                            </TransitionGroup>\n                        </div>\n                </CoursePageStyle>\n                <div onClick={() => this.onAddNewTest()}> \n                <Bottom type='new-test'/>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CoursePage))","import styled from 'styled-components'\n\nexport const TestStyle = styled.div \n`   \n    padding-bottom: 4rem;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    .test-content {\n        display: grid;\n    }\n    .test-header {\n        background: #f0f0f0;\n        padding: 1rem;\n        display: grid;\n        grid-template-rows: auto 1fr;\n        position: fixed;\n\n    }\n`\nexport const TestQuestion = styled.div\n`\n    margin-top: 1rem;\n\n    .test-content-inner {\n        position: relative;\n    }\n    .test-question-wrapper {\n        display: grid;\n        grid-template-columns: repeat(20, 1fr);\n        grid-template-rows: auto 1fr;\n        transition: transform 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    }\n    .test-question {\n        grid-gap: 0.5rem;\n        display: grid;\n        padding: 1rem;\n        width: calc(100vw - 4rem);\n        border-radius: 15px;\n        margin-right: 0.5rem;\n        background: #fff;\n        grid-template-rows: auto 1fr;\n    }\n    .status {\n        display: grid;\n        grid-template-columns: 1fr auto;\n    }\n    // .correct {\n        // background: rgba(130, 222, 139, 0.5);\n    // }\n    // .incorrect {\n        // background: rgba(255, 128, 128, 0.2);\n    // }\n`\nexport const TestOptions = styled.div \n`       \n    margin-top: ${props => props.margin}px;\n    width: calc(${props => props.width}px);\n    .test-option_wrapper-absolute {\n        position: absolute;\n        padding-bottom: 4rem;\n    }\n    .test-option-wrapper {\n        display: grid\n        grid-gap: 1rem;\n    }\n    .test-option {\n        background: #fafafa;\n        border-radius: 10px;\n        padding: 1rem;\n        margin: 1rem;\n    }   \n    .correct {\n        background: rgba(130, 222, 139, 0.5);\n    }\n    .incorrect {\n        background: rgba(255, 128, 128, 0.2);\n    }\n`\nexport const TestRusults = styled.div \n`\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-gap: 3rem;\n\n    .test-answer {\n        display: grid;\n        grid-gap: 1rem;\n    }\n    .test-answer_item {\n        padding-bottom: 1rem;\n    }\n`","import React, { Component } from 'react'\nimport { TestStyle, TestQuestion, TestOptions, TestRusults } from './TestStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport Bottom from '../Bottom/Bottom'\nimport Text from '../Text/Text'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { observer } from 'mobx-react'\nimport LessonModel from '../../models/lesson'\nimport TestModel from '../../models/test'\n\nclass Test extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: props.window,\n            elHeight: 0,\n            \n            options: [],\n            userAnswer: null,\n            currentQuestion: 0,\n            correctAnswer: null,\n            \n            id: TestModel.test.id,\n            questions: TestModel.test.questionsData.map(data => data.question),\n            score: 0,\n            \n            correctAnswers: [],\n            wrongAnswers: [],\n            blankAnswers: [],\n\n            testEnd: false\n        }\n    }\n    componentWillMount() {\n        this.setState({width: window.innerWidth})   \n    }\n    \n    \n    loadTest = () => {\n        const {currentQuestion} = this.state;\n        \n        this.setState(() => {\n            return {\n                questions: TestModel.test.questionsData.map(data => data.question),\n                options: TestModel.test.questionsData[currentQuestion].options,\n                answers: TestModel.test.questionsData[currentQuestion].answer,\n                correctAnswer: TestModel.test.questionsData[currentQuestion].answer\n            }\n        })\n    }\n    \n    componentDidMount() {\n        this.loadTest();\n\n        const elHeight = this.divElement.clientHeight;\n        this.setState({ elHeight })\n    }\n    \n    nextQuestionHandler = () => {\n\n        const {userAnswer, correctAnswer, score, blankAnswers, currentQuestion } = this.state\n        \n        let indexInBlank = blankAnswers.indexOf(currentQuestion)\n\n        if(userAnswer && indexInBlank !== -1){\n            this.setState({\n                blankAnswers: blankAnswers.filter(i => i !== currentQuestion)\n            })\n        }else if(!userAnswer && indexInBlank === -1){\n            this.setState({\n                blankAnswers: [...blankAnswers, currentQuestion].sort()\n            })\n        }\n\n        let nextQ = blankAnswers.find(item => item > currentQuestion)\n        if(nextQ){\n            this.setState({\n                currentQuestion: nextQ \n            })\n        }else{\n            this.setState({\n                currentQuestion: currentQuestion + 1\n            })\n        }\n        \n        if(userAnswer === correctAnswer)\n            this.setState({\n                score: score + 1\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { currentQuestion } = this.state;\n        if(this.state.currentQuestion !== prevState.currentQuestion) {\n            this.setState(() => {\n                return {\n                    questions: TestModel.test.questionsData.map(data => data.question),\n                    options: TestModel.test.questionsData[currentQuestion].options,\n                    answers: TestModel.test.questionsData[currentQuestion].answer,\n                    correctAnswer: TestModel.test.questionsData[currentQuestion].answer,\n                    userAnswer: null\n                }\n            })\n        }\n    }\n\n    setAnswer(answer) {\n        if(this.state.correctAnswer === answer){\n            this.setState(prevState => ({\n                userAnswer: answer,\n                correctAnswers: [...prevState.correctAnswers, answer].sort()\n            }))\n        }else{\n            this.setState(prevState => ({\n                userAnswer: answer,\n                wrongAnswers: [...prevState.wrongAnswers, answer].sort()\n            }))\n        }\n    }\n\n    finishHandler = () => {\n\n        const {userAnswer, correctAnswer, score, blankAnswers, currentQuestion} = this.state\n\n        if(userAnswer && blankAnswers.length > 0){\n            this.setState({\n                currentQuestion: blankAnswers[0]\n            })\n        }\n        \n        if(userAnswer && blankAnswers.length === 0){\n            let { id, questionsData, correctAnswers, wrongAnswers, score, questions } = this.state\n            if(correctAnswer === userAnswer){\n                score += 1\n            }\n\n            let test = {\n                id,\n                questionsData,\n                correctAnswers,\n                wrongAnswers,\n                progress: (score*100)/questions.length\n            }\n            TestModel.submitTest(test)\n\n            this.props.history.push(`/submit/${id}`)\n        }\n\n        if(!userAnswer && blankAnswers.length > 0){\n            if(blankAnswers.indexOf(currentQuestion) !== -1)\n                this.setState({\n                    currentQuestion: blankAnswers[0]\n                })\n            else\n                this.setState({\n                    blankAnswers: [...blankAnswers, currentQuestion],\n                    currentQuestion: blankAnswers[0]\n                })\n        }\n    }\n    \n    render() {\n        const { questions, options, currentQuestion, userAnswer, correctAnswer, testEnd } = this.state;\n\n        //new return to show final score\n        if(testEnd) {\n            return (\n                <TestRusults>\n                <div>hello, your final score is {this.state.score}</div>\n                <div className='test-answer'>\n                    need to remember:\n                    <div>\n                        {TestModel.test.questionsData.map((data, index) => (\n                            <div\n                            className='test-answer_item'\n                            key={index}>  \n                                <Text type='secondary'>\n                                    (incorrect ans number) из {TestModel.test.questionsData.length}\n                                </Text>\n                                <div> \n                                {data.question}\n                                </div>\n                                {data.answer}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <Bottom type='end-test'/>\n                </TestRusults>\n            )\n        }\n\n        let isAnswerCorrect, answer\n\n        if(userAnswer === correctAnswer){\n            isAnswerCorrect = true\n        } else {\n            isAnswerCorrect = false\n        }\n        \n        return (\n            <>\n                <TestStyle>\n                    <div className='test-header'\n                    ref = { (divElement) => {this.divElement = divElement}}\n                    >\n                        <div className='test-header-fixed'>\n                    <Title title={`${LessonModel.lesson.name} ${LessonModel.lesson.language}`} />\n                    <div className='test-content'>\n                    <TestQuestion>\n                        <div className={`test-content-inner active-slide-${currentQuestion}`}>\n                        <div \n                            className='test-question-wrapper'\n                            style={{\n                                'transform': `translateX(-${currentQuestion*(100/TestModel.test.questionsData.length)}%)`\n                            }}\n                        >\n                        {questions.map((data, i) => \n                        <div\n                            key={i}\n                            className={`test-question\n                            ${userAnswer === correctAnswer ? 'correct' :\n                            userAnswer && !isAnswerCorrect && 'incorrect' }`}\n                        >\n                            <div className='status'>\n                            <Text type='secondary'>\n                                Вопрос {currentQuestion + 1} из {TestModel.test.questionsData.length}\n                            </Text>\n                            {userAnswer === correctAnswer ?\n                            <>\n                                <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg' />\n                            </>\n                            :\n                            userAnswer && !isAnswerCorrect &&\n                            <>\n                            <FontAwesomeIcon icon={faTimesCircle} color='#FF8080' size='lg' />\n                            \n                            </>}\n                            </div>\n                            <div className='questions'>\n                                {data}\n                            </div>\n                        </div>\n                        )}\n                        <div></div>\n                        </div>\n                        </div>\n                    </TestQuestion>\n                    </div>\n                    </div>\n                    </div>\n                    <TestOptions \n                    margin={this.state.elHeight}\n                    width={this.state.width}>\n                            {options.map(option => (\n                        <div className=\"test-option-wrapper\">\n                                <div\n                                key={option.id}\n                                className={`test-option\n                                ${userAnswer && option === correctAnswer ? 'correct' :\n                                userAnswer === option && !isAnswerCorrect && 'incorrect' }\n                                `}\n                                onClick={() => {\n                                    !userAnswer ? this.setAnswer(option) : answer = null\n                                }}\n                                >\n                                    {option}\n                                </div>\n                            </div>\n                            ))}\n                    </TestOptions>\n                    { currentQuestion < TestModel.test.questionsData.length - 1 &&\n                    <div onClick={this.nextQuestionHandler}>\n                        <Bottom type='next-question'/>\n                    </div>\n                    }\n                    { currentQuestion === TestModel.test.questionsData.length - 1 &&\n                    <div onClick={this.finishHandler}>\n                        <Bottom type='submit'/>\n                    </div>\n                    }\n                </TestStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Test))","import styled from 'styled-components'\n\nexport const SubmitStyle = styled.div \n`\n    .test-header {\n        background: #f0f0f0;\n        padding: 1rem;\n        display: grid;\n        grid-template-rows: auto 1fr;\n        height: 20vh;  \n        border-radius: 0; \n        position: fixed;\n        width: 100%;\n    }\n`","import React, { Component } from 'react'\nimport { SubmitStyle } from './SubmitStyle'\nimport { withRouter } from 'react-router'\nimport Title from '../Title/Title'\nimport Text from '../Text/Text'\nimport Bottom from '../Bottom/Bottom'\n\nimport TestModel from '../../models/test'\nimport { observer } from 'mobx-react'\n\nclass Submit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: null,\n        }\n    }\n    componentDidMount() {\n    }\n    nextPath(path) {\n        if(path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n    \n    render() {\n        return (\n            <>\n                <SubmitStyle>\n                    <div className='test-header'>\n                        <Title title='lessontitle and flag' main/>\n                        <div>\n                        <Text size='small'>Congrats, you've done test. Your score is 70%</Text>\n                        <Text size='small'>Try to remember incorrect answers</Text>\n                        </div>\n                    </div>\n\n                </SubmitStyle>\n                <Bottom type='end-test'/>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Submit))","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\nimport './index.css'\nimport Main from './components/Main/Main'\nimport Bottom from './components/Bottom/Bottom'\nimport CoursePage from './components/CoursePage/CoursePage';\nimport Test from './components/Test/Test'\nimport Submit from './components/Submit/Submit'\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\nlet url = \"mentorium-vk-app\"\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// serviceWorker.registre();\n\nReactDOM.render(\n    <BrowserRouter basename={url}>\n        <App>\n            <Route\n                exact\n                path=\"/\"\n                render={() => {\n                    return (\n                        <>\n                            <Main />\n                        </>\n                    )\n                }}\n            />\n            <Route\n                exact\n                path=\"/new\"\n                render={() => {\n                    return (\n                        <>\n                            <Main />\n                            <Bottom type='session' />\n                        </>\n                    )\n                }}\n            />\n            <Route\n                exact\n                path=\"/course/:id\"\n                render={() => {\n                    return (\n                        <>\n                            <CoursePage />\n                        </>\n                    )\n                }} />\n            <Route\n                exact\n                path=\"/test/:test_id\"\n                render={() => {\n                    return (\n                        <>\n                            <Test />\n                        </>\n                    )\n                }}\n            />\n            <Route\n                exact\n                path=\"/submit/:test_id\"\n                render={() => {\n                    return (\n                        <>\n                            <Submit />\n                        </>\n                    )\n                }}\n            />\n        </App>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}