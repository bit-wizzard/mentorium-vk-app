{"version":3,"sources":["components/Main/MainStyle.js","components/Title/TitleStyle.js","components/Text/TextStyle.js","components/Text/Text.js","components/Verification/VerificationStyle.js","models/lesson.js","components/Verification/Verification.js","components/Title/Title.js","components/Notification/NotificationStyle.js","components/Notification/Notification.js","components/Bottom/BottomStyle.js","components/CourseSelector/CourseSelectorStyle.js","components/CourseSelector/CourseSelector.js","components/Bottom/Bottom.js","components/Course/CourseStyle.js","models/test.js","components/Course/Course.js","components/Main/Main.js","components/CoursePage/CoursePageStyle.js","data/TestData.js","components/CoursePage/CoursePage.js","components/Test/TestStyle.js","components/Test/Test.js","components/Submit/SubmitStyle.js","components/Submit/Submit.js","App.js","index.js"],"names":["MainStyle","styled","div","TitleStyle","VerificationStyle","props","verificationOn","TextStyle","p","nowrap","size","type","weight","Text","children","defaultProps","VerificationInner","VerificationYes","VerificationNo","configure","enforceActions","LessonModel","lessons","lesson","name","code","language","item","value","this","findIndex","o","push","find","index","splice","decorate","observable","addLesson","action","deleteFromLessons","getLessonData","set","Verification","test","className","onClick","history","replace","onDelete","Component","withRouter","observer","Title","state","setState","main","icon","faChevronLeft","title","verification","coursePage","goBack","NotificationStyle","Notification","notifications","noti_text","setTimeout","BottomBack","bottomOpened","BottomBackground","BottomStyle","BottomQuestion","CourseSelectorStyle","CourseSelector","active","path","location","pathname","course","map","data","i","onAddLesson","key","Bottom","appear","faPlus","faChevronRight","goToTests","CourseStyle","TestStyle","CourseVerification","TestModel","appliedTests","id","progress","date","questionsData","correctAnswers","wrongAnswers","submittedTest","length","a","Date","toISOString","slice","isSubmitted","addNewTest","setTest","submitTest","Course","nextPath","onOpenTest","test_id","faCheckCircle","color","onChangeDirection","onClose","faTimes","Main","courses","width","notificationCounter","firstEnter","disableBrowserBackButton","next","window","innerWidth","margin","TransitionGroup","CSSTransition","timeout","classNames","CoursePageStyle","opened","TestData","question","options","answer","CoursePage","notiCounter","tests","firstTime","getTests","reverse","onAddNewTest","TestQuestion","TestOptions","TestRusults","Test","loadTest","currentQuestion","questions","answers","correctAnswer","blankAnswers","nextQuestionHandler","userAnswer","score","indexInBlank","indexOf","filter","sort","nextQ","finishHandler","usersAnswers","elHeight","testEnd","divElement","clientHeight","prevProps","prevState","showPosition","console","group","isAnswerCorrect","ref","style","faTimesCircle","option","setAnswer","SubmitStyle","SubminContent","Submit","match","params","App","prevDepth","getPathDepth","pathArr","split","n","exact","component","bridge","send","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e1e6dbd2.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const MainStyle = styled.div \n`   \n    padding: 1rem;\n    .course-list {\n        margin-top: 1rem;\n    }\n    .items-enter {\n        opacity: 0;\n    }\n    .items-enter-active {\n        opacity: 1;\n        transition: 0.5s;\n    }\n\n    .items-exit {\n        opacity: 1;\n    }\n    .items-exit-active {\n        opacity: 0;\n        transition: 0.2s;\n    }\n\n    .main-header {\n            background: #f0f0f0;\n            margin: -1rem -1rem 0 -1rem;     \n            padding: 1rem;\n            display: grid;\n            grid-template-rows: auto 1fr;\n            height: 20vh;  \n            border-radius: 0; \n    }\n    \n    `\n\n    //     ${props => (props.margin === 0 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: first;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes first {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    //     `\n    // }\n    //     ${props => (props.margin === 1 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: second;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes second {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    // `\n    // }\n","import styled from 'styled-components'\n\nexport const TitleStyle = styled.div `\n    display: grid;\n    grid-template-rows: auto 1fr;\n    align-items: center;\n    grid-gap: 1rem;\n    .chevron {\n        opacity: 0;\n    }\n    \n`\nexport const VerificationStyle = styled.div \n`\n    position: absolute;\n    height: 100vh;\n    width: 100vw;\n    top: 0;\n    z-index: 800;\n    ${props => props.verificationOn ?\n    `\n        left: 0;\n        opacity: 1;\n        transition: opacity 0.3s;\n    `\n:\n    `\n        opacity: 0;\n        transition: opacity 0.3s;\n        left: -1000px;\n    `\n}\n`","import styled from 'styled-components'\n\nconst TextStyle = styled.p \n`\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    white-space: ${props => props.nowrap ? 'nowrap' : 'normal'};\n    line-height: ${props => \n        props.size === 'medium' || props.size === 'small' || props.size === 'smallest' ?\n        '1.5'\n        :\n        props.size === 'big' ?\n        '1.25'\n        :\n        props.size === 'large'? \n        `1.25`\n        :\n        props.size === 'largest' &&\n        '1'\n    };\n    font-size: ${props => \n        props.size === 'small' ?\n        '15px'\n        :\n        props.size === 'default' ?\n        '18px'\n        :\n        props.size === 'big' &&\n        '24px'\n    };\n    color: ${props => \n        props.type === 'primary' ?\n        '#000'\n        :\n        props.type === 'secondary' ?\n        '#6a6a6a'\n        :\n        props.type === 'brand' &&\n        '#ffb600'\n    };\n    font-weight: ${props => \n        props.weight === 'bold' ? 'bold'\n        :\n        props.weight === 'light' && 'regular'\n    };\n\n`\n\nexport default TextStyle;","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nimport TextStyle from './TextStyle'\n\nconst Text = ({ children, \n                size,\n                type, \n                weight, \n                nowrap }) => {\n\n        return (\n            <>\n                <TextStyle\n                    size={size}\n                    type={type}\n                    weight={weight}\n                    nowrap={nowrap}\n                    >\n                    {children}\n                </TextStyle>\n            </>\n        )\n}\n\nText.propTypes = {\n    children: PropTypes.node.isRequired,\n\n    size: PropTypes.oneOf([\n        'small',\n        'default',\n        'big'\n        ]).isRequired,\n\n    type: PropTypes.oneOf([\n        'inverted',\n        'default',\n        'primary',\n        'secondary'\n    ]).isRequired,\n\n    weight: PropTypes.oneOf([\n        'bold',\n        'light'\n    ]).isRequired,\n\n    nowrap: PropTypes.bool\n}\n\nText.defaultProps = {\n    children: null,\n    size: 'small',\n    type: 'default',\n    weight: 'light',\n    nowrap: false\n}\n\nexport default Text;","import styled from 'styled-components'\n\nexport const VerificationStyle = styled.div \n`\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.2);\n`\nexport const VerificationInner = styled.div\n`\n    background: #fff;\n    padding: 1rem;\n    border-radius: 10px;\n    margin: 0 1rem;\n\n    .options {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        margin-top: 1rem;\n        grid-gap: 1rem;\n    }\n`\nexport const VerificationYes = styled.div\n`\n    display: grid;\n    justify-content: center;\n    background: #f0f0f0;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n`\nexport const VerificationNo = styled.div\n`\n    display: grid;\n    justify-content: center;\n    padding: 0.5rem 1rem;\n    background: #ffb600;\n    border-radius: 5px;\n`","import { observable, configure, action, decorate } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass LessonModel {\n\n    lessons = []\n    lesson = {\n        name: null,\n        code: null,\n        language: null\n    }\n\n\n    set(item, value) {\n        this[item] = value\n    }\n\n    addLesson(lesson){\n        let { code } = lesson\n        \n        if(this.lessons.findIndex(o => o.code === code) === -1) {\n            this.lessons.push(lesson)\n        }\n    }\n\n    getLessonData(code) {\n        // if(this.lesson.name === null){\n        this.lesson = this.lessons.find(o => o.code === code)\n        // }\n    }\n\n    deleteFromLessons(code) {\n        if(code){\n            let index = this.lessons.findIndex(o => o.code === code)\n            return this.lessons.splice(index, 1)\n        }\n    }\n}\n\ndecorate(LessonModel, {\n    lessons: observable,\n    lesson: observable,\n    addLesson: action,\n    deleteFromLessons: action,\n    getLessonData: action,\n    set: action\n})\n\nexport default new LessonModel()","import React, { Component } from 'react'\nimport { VerificationStyle, VerificationInner, VerificationYes, VerificationNo } from './VerificationStyle'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass Verification extends Component {\n\n    onDelete(code) {\n        LessonModel.deleteFromLessons(code)\n    }\n\n    // componentDidMount() {\n    // LessonModel.getLessonData(this.props.match.params.id)\n    // }\n\n    render() {\n        return (\n            <>\n                <VerificationStyle>\n                    {!this.props.test ?\n                        <VerificationInner>\n                            <Text size='default'>Вы уверены, что хотите удалить предмет {`${this.props.name} ${this.props.language}`} ?</Text>\n                            <div className='options'>\n                                <VerificationYes onClick={() => this.onDelete(this.props.code)}>Да</VerificationYes>\n                                <VerificationNo>Нет</VerificationNo>\n                            </div>\n                        </VerificationInner>\n                        :\n                        <VerificationInner>\n                            <Text size='default'>Если Вы закончите тест - мы не сможем сохранить Ваш прогресс. Вы уверены, что хотите выйти?</Text>\n                            <div className='options'>\n                                <VerificationYes onClick={() => this.props.history.replace('/course/'+LessonModel.lesson.code)}>Да</VerificationYes>\n                                <VerificationNo>Нет</VerificationNo>\n                            </div>\n                        </VerificationInner>\n                        }\n                </VerificationStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Verification))","import React, { Component } from 'react'\nimport { TitleStyle, VerificationStyle } from './TitleStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\n\nimport Text from '../Text/Text'\nimport Verification from '../Verification/Verification'\n\nclass Title extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            // toMain: false\n            verificationOn: false\n        }\n\n    }\n\n    \n    verification() {\n        this.setState({ verificationOn: true })\n    }\n\n    // toMain() {\n    // setTimeout(() => {\n    // this.props.history.goBack()\n    // }, 1500)\n    // }\n\n    // componentWillMount() {\n    // window.onbeforeunload = function() { return \"Your work will be lost.\"; };\n    // }\n\n    render() {\n        // const {history} = this.props\n        // window.onpopstate = (event) => {\n        //     event.preventDefault();\n        //     if(this.props.location.pathname === '/' && this.state.toMain === false) {\n        //             this.setState({toMain: true})\n        //             // alert('hello') one time set state\n        //       }\n        // }\n        return (\n            <>\n                {this.props.main &&\n                    <TitleStyle>\n                        <div className='chevron'>\n                            <FontAwesomeIcon icon={faChevronLeft} />\n                        </div>\n                        <Text size='big' weight='bold'>{this.props.title}</Text>\n                    </TitleStyle>\n                }\n                {this.props.test &&\n                    <TitleStyle>\n                        <VerificationStyle verificationOn={this.state.verificationOn} onClick={() => this.setState({verificationOn: false})}>\n                            <Verification test></Verification>\n                        </VerificationStyle>\n                        <FontAwesomeIcon icon={faChevronLeft} onClick={() => this.verification()} />\n                        <Text size='big' weight='bold'>{this.props.title}</Text>\n                    </TitleStyle>\n                }\n                {this.props.coursePage &&\n                    <TitleStyle verificationOn={this.state.verificationOn}>\n                        <FontAwesomeIcon icon={faChevronLeft} onClick={() => this.props.history.goBack()} />\n                        <Text size='big' weight='bold'>{this.props.title}</Text>\n                    </TitleStyle>\n                }\n\n\n            </>\n        )\n    }\n}\nexport default withRouter(Title)","import styled from 'styled-components'\n\nexport const NotificationStyle = styled.div `\n`","import React, { Component } from 'react'\nimport { NotificationStyle } from './NotificationStyle'\nimport Text from '../Text/Text'\n\nclass Notification extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            noti_text: this.notifications[this.props.type]\n        }\n\n    }\n\n    notifications = [   \n        'Для начала работы - надо указать новый предмет',\n        'В карточке будут храниться все ваши тестовики и прогресс. Кликните на карту, что бы начать.',\n        'Самое время начать разбирать тестовики. Нажмите на кнопку снизу, что бы начать',\n        'Ваш тест готов. Можете кликнуть на карточку и начинать работать'\n        ]\n\n    componentWillUpdate() {\n        if(this.props.type == 0 || this.props.type == 1)\n            setTimeout(() => {this.setState({noti_text: this.notifications[this.props.type]})}, 0)\n        else \n            setTimeout(() => {this.setState({noti_text: this.notifications[this.props.type]})}, 0)\n\n    }\n            //тут надо буде еще ебнуьб условие для this.props.type 1 || 2    \n\n    // componentWillMount() {\n        // alert(this.props.type)\n    // }\n    render() {           \n        return (\n            <>\n                <NotificationStyle>\n                    <Text size='small'>{this.state.noti_text}</Text>\n                </NotificationStyle>\n            </>\n\n        )\n    }\n}\n\nexport default Notification","import styled from 'styled-components'\n\n\nexport const BottomBack = styled.div \n`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    ${props => props.bottomOpened ? `z-index: 1`:`z-index: -500`}\n`\n\nexport const BottomBackground = styled.div\n`\n    display: grid;\n\n`\n\nexport const BottomStyle = styled.div `\n\n    display: grid;\n    margin: 0 1rem;\n    background: rgb(251,251,251);\n    background: linear-gradient(180deg, rgba(251,251,251,0) 40%, rgba(255,255,255,1) 40%, rgba(255,255,255,1) 100%); \n    padding-bottom: 1rem;\n    \n    \n    transition: 0.1s;\n    \n    .caption {\n        border-radius: 15px;\n\n        display: grid;\n        background: #FFB600;\n        padding: 1rem;\n        justify-content: center;\n        position: relative;\n        z-index: 999;\n        div {\n            display: grid;\n            grid-template-columns: auto 1fr;\n            align-items: center;\n            grid-gap: 0.5rem;\n        }\n    }\n\n    .course-selector {\n        position: relative;\n    }\n    .course-selector-inner {\n        position: absolute;\n        width: 100%;\n    }\n    ${props => props.bottomOpened ? \n        `\n        .course-selector-inner {\n                bottom: 0;\n                opacity: 1;\n                transition: 0.2s;\n                z-index: 1;\n            }\n        ` \n        : \n        `\n            .course-selector-inner {\n                opacity: 0;\n                bottom: -10rem;\n                transition: 0.2s;\n                z-index: -999;\n            }\n        `\n    }\n\n`\n\n    export const BottomQuestion = styled.div \n`\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    `\n\n    // ${props => props.appear ? \n    // `\n        // opacity: 1;\n        // transition: 0.5s;\n    // `\n    // :\n    // `\n        // opacity:0;`\n    // }\n    \n    export const BottomCourseSelector = styled.div \n`\n\n`","import styled from 'styled-components'\n\n\nexport const CourseSelectorStyle = styled.div `\nbackground: rgb(251,251,251);\nbackground: linear-gradient(180deg, rgba(251,251,251,1) 0%, rgba(251,251,251,1) 57%, rgba(251,251,251,0.9037814955083596) 72%, rgba(251,251,251,0) 100%);    display: grid;\n    grid-gap: 0.5rem;\n    border-radius: 15px 15px 0 0;\n    padding: 1rem;\n    .selector-item {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        padding: 0.5rem 0;\n    }\n`","import React, { Component } from 'react'\nimport { \n    CourseSelectorStyle\n} from './CourseSelectorStyle'\nimport Text from '../Text/Text'\nimport { withRouter } from 'react-router-dom'\n\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass CourseSelector extends Component {\n\n    constructor(props) {\n        super()\n        \n        this.state = {\n            active: true,\n        }\n    }    \n\n    nextPath(path) {\n        if(path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n\n    onAddLesson(lesson) {\n        LessonModel.addLesson(lesson)\n    }\n \n    \n    render() {\n        let courses = [\n            {\n                name: \"Казахстан тарихы\",\n                language: \"🇰🇿\",\n                code: \"KHK\"\n            },\n            {\n                name: \"История Казахстана\",\n                language: \"🇷🇺\",\n                code: \"KZR\"\n            },\n            {\n                name: \"Математикалк сауаттылык\",\n                language: \"🇰🇿\",\n                code: \"MHR\"\n            }\n        ]\n        \n        let course = courses.map((data, i) => (\n            <div className='selector-item'\n            onClick={() => this.onAddLesson(data)}\n            key={i}>\n                <Text size='default'>{data.name}</Text>\n                <Text size='default'>{data.language}</Text>\n            </div>\n        ))\n        \n    \n        return (\n            <>  \n                <CourseSelectorStyle>\n                        {course}\n                </CourseSelectorStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CourseSelector))","import React, { Component } from 'react'\nimport { BottomStyle, BottomQuestion, BottomBackground,\nBottomBack } from './BottomStyle'\nimport Text from '../Text/Text'\nimport CourseSelector from '../CourseSelector/CourseSelector'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport {  withRouter } from 'react-router-dom'\nimport LessonModel from '../../models/lesson'\n\n\nclass Bottom extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            bottomOpened: false,\n            // appear: false\n        }\n    }\n    \n    goToTests() {\n        this.props.history.replace('/course/' + LessonModel.lesson.code)\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({appear: true})\n        }, 1)\n    }\n\n    render() {\n        return (\n            <>\n            {this.props.type === \"main\" &&\n            <BottomBack bottomOpened={this.state.bottomOpened}>\n                <BottomBackground onClick={() => this.setState({bottomOpened: false})} bottomOpened={this.state.bottomOpened}></BottomBackground>\n                <BottomStyle \n                bottomOpened={this.state.bottomOpened}>\n                    \n                        <div className='course-selector' onClick={() => this.setState({bottomOpened: false})}> \n                            <div \n                            className='course-selector-inner'>\n                                <CourseSelector></CourseSelector>\n                            </div>\n                        </div>\n                        <div className='caption' onClick={() => this.setState({bottomOpened: true})}>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n            </BottomBack>\n            }\n            {this.props.type === 'new-test' &&\n                <>\n                <BottomQuestion\n                //  appear={this.state.appear}\n                 >\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Начать новый тест</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'next-question' &&\n                <>\n                <BottomQuestion>\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Следующий вопрос</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'submit' &&\n                <>\n                <BottomQuestion \n                // onClick={() => this.props.history.goBack()}\n                >\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <Text size='default'>Submit</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            {this.props.type === 'end-test' &&\n                <>\n                <BottomQuestion \n                onClick={() => this.goToTests()}\n                >\n                <BottomStyle>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faChevronLeft} />\n                            <Text size='default'>Венуться к моим тестам</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n                </BottomQuestion>\n                </>\n            }\n            </>\n        )\n    }\n}\n\nexport default withRouter(Bottom)","import styled from 'styled-components'\n\nexport const CourseStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem;\n\n    .card {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        grid-gap: 1rem;\n    }\n    \n    .title {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        grid-gap: 10px;\n        align-items: center;\n    }\n\n    .progress {\n        display: grid;\n        grid-template-columns: auto auto;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n    `\n    // .next-page-wrapper {\n        // position: absolute;\n        // background: #fff;\n        // top: 0;\n        // right: 0;\n        // z-index: 100;\n        // height: 100vh;\n    // }\n    \n    // .next-page {\n        // background: lightblue;\n    // }\n    \n    // ${props => props.onEnter ? \n    //     `     \n    //         .next-page {\n    //             animation-name: next-page;\n    //             animation-duration: 1s;\n    //         }\n    //         @keyframes next-page {\n    //             0% {width: 0; height: 100vh}\n    //             30% {width: 100vw; height: 100vh}\n    //             100% {width: 100vw; height: calc(20vh + 2rem);}\n    //           }\n    //     `\n    //     :\n    //     `\n    //         .next-page {\n    //         }\n    //     `}\n\n\nexport const TestStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem; \n      \n    .progress {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n`\nexport const CourseVerification = styled.div\n`\n    position: absolute;\n    height: 100vh;\n    width: 100vw;\n    top: 0;\n    ${props => props.onDelete ?\n        `\n            left: 0;\n            opacity: 1;\n            transition: opacity 0.3s;\n        `\n    :\n        `\n            opacity: 0;\n            transition: opacity 0.3s;\n            left: -1000px;\n        `\n    }\n`","import { observable, decorate, action, configure } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass TestModel {\n    appliedTests = []\n    test = {\n        id: null,\n        progress: null,\n        date: null,\n        code: null,\n        questionsData: [],\n        correctAnswers: [],\n        wrongAnswers: [],\n    }\n    \n    submittedTest = {}\n\n\n    set(item, value){\n        this[item] = value\n    }\n\n    addNewTest(test){\n        let id = this.appliedTests.length + 1 \n        test.id = id\n        \n        let a = new Date().toISOString()\n        test.date = a.slice(8, 10) + '/' + a.slice(5, 7) + '/' + a.slice(0, 4)\n        test.isSubmitted = false\n        test.progress = 0\n\n        this.appliedTests.push(test)\n    }\n\n    getTests(){\n        return this.appliedTests\n    }\n\n    setTest(id){\n        this.test = this.appliedTests.find(o => o.id == id) \n    }\n\n    submitTest(test){\n        this.submittedTest = test\n        let a = new Date().toISOString()\n        test.date = a.slice(8, 10) + '/' + a.slice(5, 7) + '/' + a.slice(0, 4)\n        test.isSubmitted = true\n        let id = this.appliedTests.findIndex(o => o.id == test.id)\n\n        this.appliedTests[id] = test\n    }\n}\n\ndecorate(TestModel, {\n    appliedTests: observable,\n\n    addNewTest: action,\n    setTest: action,\n    submitTest: action,\n    set: action\n})\n\nexport default new TestModel\n","import React, { Component } from 'react'\nimport { CourseStyle, TestStyle, CourseVerification } from './CourseStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport Verification from '../Verification/Verification'\nimport LessonModel from '../../models/lesson'\nimport TestModel from '../../models/test'\n\nclass Course extends Component {  \n    constructor() {\n        super()\n        this.state = {\n            onDelete: false,\n            // onEnter: false\n            }\n    }\n\n        nextPath(path) {\n            if(path !== this.props.location.pathname)\n                this.props.history.push(path)\n        }\n        \n    onClose() {\n        this.setState({\n            onDelete: true\n        })\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onChangeDirection(id) {\n        this.nextPath('/course/' + id)\n            LessonModel.getLessonData(this.props.id)\n    }\n\n    onOpenTest(id) {\n        TestModel.setTest(id)\n        if(this.props.isSubmitted)\n            this.nextPath('/submit/' + id)\n        else\n            this.nextPath('/test/' + id)     \n    }\n    \n    render() {\n        return (\n            <>\n                {!this.props.test ?\n                <>\n                <CourseStyle \n                // onEnter={this.state.onEnter}\n                >\n                    {/* <div className='next-page-wrapper'> */}\n                    {/* <div className='next-page'></div> */}\n                    {/* </div> */}\n                    <div className='card' onClick={() => this.onChangeDirection(this.props.id)}>\n                    <div className='title'>\n                        <Text size='default'>{this.props.title}</Text>\n                        <Text size='default'>{this.props.language}</Text>\n                    </div>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{this.props.progress}%</div>\n                    </div>\n                    </div>\n                    <div className='delete' onClick={() => this.onClose()}>\n                        <FontAwesomeIcon icon={faTimes} color='#999'/>\n                    </div>\n                    <CourseVerification onDelete={this.state.onDelete} onClick={() => this.setState({onDelete: false})}>\n                        <Verification lesson={LessonModel.lesson}></Verification>\n                    </CourseVerification>\n                </CourseStyle>\n                </>\n                :\n                <>\n                <TestStyle onClick={() => this.onOpenTest(this.props.test_id)}>\n                    <div className='progress'>\n                        {this.props.isSubmitted ? \n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        :\n                        <FontAwesomeIcon icon={faCheckCircle} color='#ebebeb' size='lg'/>\n                        }\n                        <div>{ this.props.progress }%</div>\n                    </div>\n                    <div className='date'>{ this.props.date }</div>\n                </TestStyle>\n                </>\n                }\n            </>\n        )\n    }\n}\n\n export default withRouter(Course)","import React, { Component } from 'react'\nimport { MainStyle } from './MainStyle'\nimport Title from '../Title/Title'\nimport Notification from '../Notification/Notification'\nimport Bottom from '../Bottom/Bottom'\nimport Course from '../Course/Course'\nimport LessonModel from '../../models/lesson'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\nimport { observer } from 'mobx-react'\n\n\nclass Main extends Component {\n\n\n    constructor() {\n        super()\n        this.state = {\n            width: null,\n            notificationCounter: 0,\n            firstEnter: true,\n        }\n    }\n\n    courses = LessonModel.lessons\n\n\n\n    componentWillMount() {\n\n        if (this.courses.length > 0)\n            this.setState({ notificationCounter: 1 })\n    }\n\n\n    componentDidMount() {\n        disableBrowserBackButton();\n    }\n    nextPage() {\n        this.setState({ next: true })\n    }\n\n    componentDidUpdate() {\n\n        if (this.state.notificationCounter == 0 && this.courses.length > 0)\n            this.setState({ notificationCounter: 1 })\n\n        if (this.state.notificationCounter == 1 && this.courses.length == 0)\n            this.setState({ notificationCounter: 0 })\n\n        if (this.state.firstEnter) {\n            this.setState({ firstEnter: false })\n            this.setState({ width: window.innerWidth })\n        }\n\n    }\n    render() {\n\n\n        return (\n            <>\n                <MainStyle\n                    next={this.state.next}\n                    width={this.state.width}\n                    margin={this.state.notificationCounter}\n                    firstEnter={this.state.firstEnter}>\n                    <div className='toggle'></div>\n                    <div className='main-header'>\n                        <Title main title='Мои предметы' ></Title>\n                        <div className='notification' >\n                            <Notification type={this.state.notificationCounter} />\n                        </div>\n                    </div>\n                    <div className='course-list'>\n                        <TransitionGroup>\n                            {\n                                this.courses.map((data, i) => (\n                                    <CSSTransition\n                                        timeout={500}\n                                        classNames='items'\n                                        key={i}\n                                    >\n                                        <div className='course-item'>\n                                            <Course\n                                                title={data.name}\n                                                progress='0'\n                                                language={data.language}\n                                                id={data.code}\n                                                key={i} />\n                                        </div>\n                                    </CSSTransition>\n                                ))\n                            }\n                        </TransitionGroup>\n                    </div>\n                </MainStyle>\n                <Bottom type='main' />\n            </>\n        )\n    }\n}\n\nexport default observer(Main)\n","import styled from 'styled-components'\n\nexport const CoursePageStyle = styled.div\n`   \n    padding: 1rem;\n    .main-header-wrapper {\n        background: #f0f0f0;\n        margin: -1rem -1rem 0 -1rem;     \n        padding: 1rem;\n        width: 100vw;\n        height: 20vh;  \n        position: fixed;\n    }\n    .main-header {\n        display: grid;\n        grid-template-rows: auto 1fr;\n        border-radius: 0; \n    }\n    .test-list {\n        margin-top: calc(20vh + 2rem);\n        padding-bottom: 4rem;\n    }\n    .items-enter {\n        opacity: 0;\n    }\n    .items-enter-active {\n        opacity: 1;\n        transition: 0.5s;\n    }\n\n    .items-exit {\n        opacity: 1;\n    }\n    .items-exit-active {\n        opacity: 0;\n        transition: 0.2s;\n    }\n    .notification {\n        margin-right: 2rem;\n    }\n    ${props => props.opened ? \n    `\n        .main-header{\n            opacity: 1;\n            transition: 0.5s;    \n        }\n    `:\n    `\n        .main-header{\n            opacity: 0;\n        }\n    `\n    }\n\n`\n\n    //     ${props => (props.margin === 2 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: first;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes first {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    //     `\n    // }   \n    //     ${props => (props.margin === 3 && !props.firstEnter)  &&\n    //     `\n    //     .notification {\n    //         width: calc(${props.width}px - 2rem);\n    //         animation-name: second;\n    //         animation-duration: 0.8s;\n    //     }\n    //     @keyframes second {\n    //         0% {margin-left: 0;}\n    //         20% {margin-left: -${props.width}px;}\n    //         100% {margin-left: 0}\n    //     }\n    // `\n    // }","export const TestData = [\n    {\n        id: 0,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Административных условий', 'Равным образом рамки и место обучения кадров', 'Cистемы обучения кадров, соответствует насущным', 'Равным образом рамки и место обучения кадров', 'Равным образом рамки и место обучения кадров'],\n        answer: 'Административных условий'\n    },\n    {\n        id: 1,\n        question: 'what is your name?',\n        options: ['Bassan', 'Shmargun', 'Lirinirill', 'Darnurda', 'Darnurda'],\n        answer: 'Bassan'\n    },\n    {\n        id: 2,\n        question: 'What is your age?',\n        options: ['1', '2', '3', '4'],\n        answer: '2'\n    },\n    {\n        id: 3,\n        question: 'What is your pussy?',\n        options: ['Assanpussy', 'Argunpussy', 'Chirillpussy', 'Argunpussy'],\n        answer: 'Chirillpussy'\n    },\n]","import React, { Component } from 'react'\nimport { CoursePageStyle } from './CoursePageStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport LessonModel from '../../models/lesson'\nimport Notification from '../Notification/Notification'\nimport Course from '../Course/Course'\nimport Bottom from '../Bottom/Bottom'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\n\nimport { TestData } from '../../data/TestData'\nimport TestModel from '../../models/test'\nimport { observer } from 'mobx-react'\n\n\nclass CoursePage extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            notiCounter: 2,\n            tests: [],\n            width: null,\n            firstTime: true,\n            opened: false,\n        }\n    }\n\n    componentWillMount() {\n\n        if (this.state.tests.length > 0)\n            this.setState({ notiCounter: 3 })\n    }\n\n    componentDidUpdate() {\n        if (this.state.notiCounter == 2 && this.state.tests.length > 0)\n            this.setState({ notiCounter: 3 })\n\n        if (this.state.notiCounter == 3 && this.state.tests.length == 0)\n            this.setState({ notiCounter: 2 })\n\n        if (this.state.firstTime) {\n            this.setState({ firstTime: false })\n            this.setState({ width: window.innerWidth })\n        }\n    }\n    componentDidMount() {\n        let tests = TestModel.getTests()\n        this.setState({ tests })\n        setTimeout(() => {\n            this.setState({ opened: true })\n        }, 1)\n    }\n\n\n    onAddNewTest() {\n        if (!this.state.tests.find(o => o.isSubmitted == false)) {\n            let test = { code: 0 }\n            test.code = LessonModel.lesson.code\n            test.questionsData = TestData\n            TestModel.addNewTest(test)\n        }\n    }\n\n    render() {\n\n        let { name, language } = LessonModel.lesson\n\n        return (\n            <>\n                <CoursePageStyle\n                    opened={this.state.opened}\n                    width={this.state.width}\n                    margin={this.state.notiCounter}>\n                    <div className='main-header-wrapper'>\n                        <div className='main-header'>\n                            <Title coursePage title={`${name} ${language}`} className='title' />\n                            <div className='notification'>\n                                <Notification type={this.state.notiCounter} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='test-list'>\n                        <TransitionGroup>\n                            {\n                                this.state.tests.reverse().map((data, i) => (\n                                    <CSSTransition\n                                        timeout={500}\n                                        classNames='items'\n                                        key={i}\n                                    >\n                                        <Course test progress={data.progress} date={data.date} key={i} test_id={data.id} isSubmitted={data.isSubmitted} />\n                                    </CSSTransition>\n                                ))\n                            }\n                        </TransitionGroup>\n                    </div>\n                </CoursePageStyle>\n                <div onClick={() => this.onAddNewTest()} className='bottom'>\n                    <Bottom type='new-test' />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CoursePage))","import styled from 'styled-components'\n\nexport const TestStyle = styled.div \n`   \n    padding-bottom: 4rem;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    .test-content {\n        display: grid;\n    }\n    .test-header {\n        background: #f0f0f0;\n        padding: 1rem;\n        display: grid;\n        grid-template-rows: auto 1fr;\n        position: fixed;\n\n    }\n`\nexport const TestQuestion = styled.div\n`\n    margin-top: 1rem;\n\n    .test-content-inner {\n        position: relative;\n    }\n    .test-question-wrapper {\n        display: grid;\n        grid-template-columns: repeat(20, 1fr);\n        grid-template-rows: auto 1fr;\n        transition: transform 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    }\n    .test-question {\n        grid-gap: 0.5rem;\n        display: grid;\n        padding: 1rem;\n        width: calc(100vw - 4rem);\n        border-radius: 15px;\n        margin-right: 0.5rem;\n        background: #fff;\n        grid-template-rows: auto 1fr;\n    }\n    .status {\n        display: grid;\n        grid-template-columns: 1fr auto;\n    }\n    // .correct {\n        // background: rgba(130, 222, 139, 0.5);\n    // }\n    // .incorrect {\n        // background: rgba(255, 128, 128, 0.2);\n    // }\n`\nexport const TestOptions = styled.div \n`       \n    margin-top: ${props => props.margin}px;\n    width: calc(${props => props.width}px);\n    .test-option_wrapper-absolute {\n        position: absolute;\n        padding-bottom: 4rem;\n    }\n    .test-option-wrapper {\n        display: grid\n        grid-gap: 1rem;\n    }\n    .test-option {\n        background: #fafafa;\n        border-radius: 10px;\n        padding: 1rem;\n        margin: 1rem;\n    }   \n    .correct {\n        background: rgba(130, 222, 139, 0.5);\n    }\n    .incorrect {\n        background: rgba(255, 128, 128, 0.2);\n    }\n`\nexport const TestRusults = styled.div \n`\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-gap: 3rem;\n\n    .test-answer {\n        display: grid;\n        grid-gap: 1rem;\n    }\n    .test-answer_item {\n        padding-bottom: 1rem;\n    }\n`","import React, { Component } from 'react'\nimport { TestStyle, TestQuestion, TestOptions, TestRusults } from './TestStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport Bottom from '../Bottom/Bottom'\nimport Text from '../Text/Text'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { observer } from 'mobx-react'\nimport LessonModel from '../../models/lesson'\nimport TestModel from '../../models/test'\n\nclass Test extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: props.window,\n            elHeight: 0,\n            \n            options: [],\n            userAnswer: null,\n            currentQuestion: 0,\n            correctAnswer: null,\n            \n            id: TestModel.test.id,\n            questions: TestModel.test.questionsData.map(data => data.question),\n            score: 0,\n            \n            correctAnswers: [],\n            wrongAnswers: [],\n            blankAnswers: [],\n            usersAnswers: [],\n\n            testEnd: false\n        }\n    }\n    componentWillMount() {\n        this.setState({width: window.innerWidth})   \n    }\n    \n    \n    loadTest = () => {\n        const {currentQuestion} = this.state;\n        \n        this.setState(() => {\n            return {\n                questions: TestModel.test.questionsData.map(data => data.question),\n                options: TestModel.test.questionsData[currentQuestion].options,\n                answers: TestModel.test.questionsData[currentQuestion].answer,\n                correctAnswer: TestModel.test.questionsData[currentQuestion].answer,\n                blankAnswers: [0,1,2,3]\n            }\n        })\n    }\n    \n    componentDidMount() {\n        this.loadTest();\n\n        const elHeight = this.divElement.clientHeight;\n        this.setState({ elHeight })\n    }\n    \n    nextQuestionHandler = () => {\n\n        const {userAnswer, correctAnswer, score, blankAnswers, currentQuestion } = this.state\n        \n        let indexInBlank = blankAnswers.indexOf(currentQuestion)\n\n        if(userAnswer && indexInBlank !== -1){\n            this.setState({\n                blankAnswers: blankAnswers.filter(i => i !== currentQuestion)\n            })\n        }else if(!userAnswer && indexInBlank === -1){\n            this.setState({\n                blankAnswers: [...blankAnswers, currentQuestion].sort()\n            })\n        }\n\n        let nextQ = blankAnswers.find(item => item > currentQuestion)\n        if(nextQ){\n            this.setState({\n                currentQuestion: nextQ \n            })\n        }else{\n            if(userAnswer){\n                this.finishHandler()\n            }else\n                this.setState({\n                    currentQuestion: currentQuestion + 1\n                })\n        }\n\n        \n        if(userAnswer === correctAnswer)\n            this.setState({\n                score: score + 1\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { currentQuestion } = this.state;\n        if(this.state.currentQuestion !== prevState.currentQuestion) {\n            this.setState(() => {\n                return {\n                    questions: TestModel.test.questionsData.map(data => data.question),\n                    options: TestModel.test.questionsData[currentQuestion].options,\n                    answers: TestModel.test.questionsData[currentQuestion].answer,\n                    correctAnswer: TestModel.test.questionsData[currentQuestion].answer,\n                    userAnswer: null\n                }\n            })\n        }\n    }\n\n    setAnswer(answer) {\n        let { currentQuestion, usersAnswers, correctAnswer, options } = this.state\n\n        this.showPosition()\n\n        usersAnswers[currentQuestion] = answer\n        this.setState({\n            usersAnswers\n        })\n\n        if(correctAnswer === answer){\n            this.setState(prevState => ({\n                userAnswer: answer,\n                correctAnswers: [...prevState.correctAnswers, currentQuestion].sort()\n            }))\n        }else{\n            this.setState(prevState => ({\n                userAnswer: answer,\n                wrongAnswers: [...prevState.wrongAnswers, currentQuestion].sort()\n            }))\n        }\n        \n        if(options.indexOf(answer)+1 <= options.length/2){\n            console.group(1)\n        }else{\n            console.group(2)\n        }\n    }\n\n    showPosition() {\n        \n    }\n\n    finishHandler = () => {\n\n        let {userAnswer, correctAnswer, score, blankAnswers, currentQuestion, usersAnswers} = this.state\n\n        if(userAnswer && blankAnswers.indexOf(currentQuestion) !== -1){\n            blankAnswers = blankAnswers.filter(i => i !== currentQuestion)\n            this.setState({\n                blankAnswers\n            })\n        }\n\n        if(userAnswer && blankAnswers.length > 0){\n            this.setState({\n                currentQuestion: blankAnswers[0]\n            })\n        }\n        \n        if(userAnswer && blankAnswers.length === 0){\n            let { id, correctAnswers, wrongAnswers, score, questions } = this.state\n            let questionsData = TestModel.test.questionsData\n            if(correctAnswer === userAnswer){\n                score += 1\n            }\n            if(currentQuestion !== questions.length - 1){\n                score += 1\n            }\n\n            let test = {\n                id,\n                questionsData,\n                correctAnswers,\n                wrongAnswers,\n                usersAnswers,\n                progress: (score*100)/questions.length\n            }\n            TestModel.submitTest(test)\n\n            this.props.history.replace(`/submit/${id}`)\n        }\n\n        if(!userAnswer && blankAnswers.length > 0){\n            if(blankAnswers.indexOf(currentQuestion) !== -1)\n                this.setState({\n                    currentQuestion: blankAnswers[0]\n                })\n            else\n                this.setState({\n                    blankAnswers: [...blankAnswers, currentQuestion],\n                    currentQuestion: blankAnswers[0]\n                })\n        }\n    }\n    \n    render() {\n        const { questions, options, currentQuestion, userAnswer, correctAnswer, testEnd } = this.state;\n\n        //new return to show final score\n        if(testEnd) {\n            return (\n                <TestRusults>\n                <div>hello, your final score is {this.state.score}</div>\n                <div className='test-answer'>\n                    need to remember:\n                    <div>\n                        {TestModel.test.questionsData.map((data, index) => (\n                            <div\n                            className='test-answer_item'\n                            key={index}>  \n                                <Text type='secondary'>\n                                    (incorrect ans number) из {TestModel.test.questionsData.length}\n                                </Text>\n                                <div> \n                                {data.question}\n                                </div>\n                                {data.answer}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <Bottom type='end-test'/>\n                </TestRusults>\n            )\n        }\n\n        let isAnswerCorrect, answer\n\n        if(userAnswer === correctAnswer){\n            isAnswerCorrect = true\n        } else {\n            isAnswerCorrect = false\n        }\n        \n        return (\n            <TestStyle>\n                    <div className='test-header'\n                    ref = { (divElement) => {this.divElement = divElement}}\n                    >\n                        <div className='test-header-fixed'>\n                    <Title test title={`${LessonModel.lesson.name} ${LessonModel.lesson.language}`} />\n                    <div className='test-content'>\n                    <TestQuestion>\n                        <div className={`test-content-inner active-slide-${currentQuestion}`}>\n                        <div \n                            className='test-question-wrapper'\n                            style={{\n                                'transform': `translateX(-${currentQuestion*(100/TestModel.test.questionsData.length)}%)`\n                            }}\n                        >\n                        {questions.map((data, i) => \n                        <div\n                            key={i}\n                            className={`test-question\n                            ${userAnswer === correctAnswer ? 'correct' :\n                            userAnswer && !isAnswerCorrect && 'incorrect' }`}\n                        >\n                            <div className='status'>\n                            <Text type='secondary'>\n                                Вопрос {currentQuestion + 1} из {TestModel.test.questionsData.length}\n                            </Text>\n                            {userAnswer === correctAnswer ?\n                            <>\n                                <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg' />\n                            </>\n                            :\n                            userAnswer && !isAnswerCorrect &&\n                            <>\n                            <FontAwesomeIcon icon={faTimesCircle} color='#FF8080' size='lg' />\n                            \n                            </>}\n                            </div>\n                            <div className='questions'>\n                                {data}\n                            </div>\n                        </div>\n                        )}\n                        <div></div>\n                        </div>\n                        </div>\n                    </TestQuestion>\n                    </div>\n                    </div>\n                    </div>\n                    <TestOptions \n                    margin={this.state.elHeight}\n                    width={this.state.width}>\n                            {options.map(option => (\n                        <div className=\"test-option-wrapper\">\n                                <div\n                                key={option.id}\n                                className={`test-option\n                                ${userAnswer && option === correctAnswer ? 'correct' :\n                                userAnswer === option && !isAnswerCorrect && 'incorrect' }\n                                `}\n                                onClick={() => {\n                                    !userAnswer ? this.setAnswer(option) : answer = null\n                                }}\n                                >\n                                    {option}\n                                </div>\n                            </div>\n                            ))}\n                    </TestOptions>\n                    { currentQuestion < TestModel.test.questionsData.length - 1 &&\n                    <div onClick={this.nextQuestionHandler}>\n                        <Bottom type='next-question'/>\n                    </div>\n                    }\n                    { currentQuestion === TestModel.test.questionsData.length - 1 &&\n                    <div onClick={this.finishHandler}>\n                        <Bottom type='submit'/>\n                    </div>\n                    }\n                </TestStyle>\n        )\n    }\n}\n\nexport default withRouter(observer(Test))","import styled from 'styled-components'\n\nexport const SubmitStyle = styled.div \n`\n    padding-bottom: 4rem;\n    .test-header {\n        background: #f0f0f0;\n        padding: 1rem;\n        display: grid;\n        grid-template-rows: auto 1fr;\n        height: 20vh;  \n        border-radius: 0; \n    }\n`\n\nexport const SubminContent = styled.div \n`   \n    padding: 1rem;\n    .card {\n        border-radius: 10px;\n        padding: 1rem;\n        background: #fbfbfb;\n    }\n    .question {\n        display: grid;\n        grid-gap: 0.5rem;\n        padding: 1rem;\n        background: #fff;\n        border-radius: 10px;\n    }\n    .answer {\n        padding: 1rem;\n        background: #fbfbfb;\n        margin: 0.5rem 0;\n        display: grid;\n        border-radius: 10px;\n    }\n    .correct {\n        padding: 1rem;\n        display: grid;\n        background: rgba(130, 222, 139, 0.5);\n        border-radius: 10px;\n    }\n`","import React, { Component } from 'react'\nimport { SubmitStyle, SubminContent } from './SubmitStyle'\nimport { withRouter } from 'react-router'\nimport Title from '../Title/Title'\nimport Text from '../Text/Text'\nimport Bottom from '../Bottom/Bottom'\n\nimport TestModel from '../../models/test'\nimport LessonModel from \"../../models/lesson\";\nimport { observer } from 'mobx-react'\n\nclass Submit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: null,\n            lesson: null\n        }\n    }\n\n    componentWillMount() {\n        let id = this.props.match.params.test_id\n        let test = TestModel.appliedTests.find(o => o.id == id)\n\n        let lesson = LessonModel.lesson\n\n        this.setState({\n            test, lesson\n        })\n    }\n\n    nextPath(path) {\n        if (path !== this.props.location.pathname)\n            this.props.history.push(path)\n    }\n\n    render() {\n        let { test } = this.state\n        let { questionsData, usersAnswers } = test\n        return (\n            <>\n                <SubmitStyle>\n                    <div className='test-header'>\n                        <Title title={`${this.state.lesson.name} ${this.state.lesson.language}`} main />\n                        <div className='notification'>\n                            <Text size='small'>Тест окончен. Вы набрали {test.progress}%</Text>\n                            {test.progress === 100 ?\n                                <Text size='small'>Отличный результат, проходите больше тестов и закрепляйте знания!</Text>\n                                :\n                                <Text size='small'>Хорошая попытка, запомните правильные ответы ниже и начинайте новый тест</Text>\n                            }\n                        </div>\n                    </div>\n                    <div className='submit-content'>\n                        {\n                            test.wrongAnswers.map((data, i) => (\n                                <>\n                                    <SubminContent>\n                                        <div className='card'>\n                                        <div className='question'>\n                                            <Text size='small' type='secondary'>Вопрос {data + 1} из {questionsData.length}</Text>\n                                            {questionsData[data].question}\n                                        </div>\n                                        <div className='answer'>  \n                                            <Text type='secondary'>Ваш ответ:</Text>                                            \n                                            <Text type='secondary'>{usersAnswers[data]}</Text>\n                                        </div>\n                                        <div className='correct'>\n                                            <Text>Правильный ответ:</Text>\n                                            {questionsData[data].answer}\n                                        </div>\n                                        </div>\n                                    </SubminContent>\n                                </>\n                            ))\n\n\n                        }\n                    </div>\n                </SubmitStyle>\n                <Bottom type='end-test' />\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Submit))","import React, { Component } from 'react'\n\n//mobx\nimport { observer } from 'mobx-react'\nimport { withRouter, Switch, Route, } from 'react-router-dom'\nimport './App.css'\nimport Main from './components/Main/Main'\nimport CoursePage from './components/CoursePage/CoursePage';\nimport Test from './components/Test/Test'\nimport Submit from './components/Submit/Submit'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tprevDepth: this.getPathDepth(this.props.location)\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps() {\n\t\tthis.setState({ prevDepth: this.getPathDepth(this.props.location) })\n\t}\n\n\tgetPathDepth(location) {\n\t\tlet pathArr = location.pathname.split(\"/\")\n\t\tpathArr = pathArr.filter(n => n !== \"\")\n\t\treturn pathArr.length;\n\t}\n\n\t// componentDidUpdate() {\n\t\t// // console.log(this.props.history.state)\n\t// }\n\n\trender() {\n\n\t\tconst { location } = this.props\n\t\tconst currentKey = location.pathname.split('/')[1] || \"/\"\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{/* <TransitionGroup> */}\n\t\t\t\t\t{/* <CSSTransition key={currentKey} timeout={2500} classNames='pageSlider' mountOnEnter={false} unmountOnExit={true}> */}\n\t\t\t\t\t\t{/* <div className={this.getPathDepth(location) - this.state.prevDepth >= 0 ? \"left\" : \"right\"}> */}\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\t\t\tcomponent={Main}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath=\"/course/:id\"\n\t\t\t\t\t\t\t\t\tcomponent={CoursePage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath=\"/test/:test_id\"\n\t\t\t\t\t\t\t\t\tcomponent={Test}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath=\"/submit/:test_id\"\n\t\t\t\t\t\t\t\t\tcomponent={Submit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t{/* </div>\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t</TransitionGroup> */}\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default withRouter(observer(App));","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\nimport './index.css'\n\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\nlet url = \"mentorium-vk-app\"\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// serviceWorker.registre();\n\nReactDOM.render(\n    <BrowserRouter basename={url}>\n        <App>\n           \n        </App>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}