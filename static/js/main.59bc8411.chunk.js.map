{"version":3,"sources":["models/lesson.js","App.js","components/Main/MainStyle.js","components/Title/TitleStyle.js","components/Text/TextStyle.js","components/Text/Text.js","components/Title/Title.js","components/Notification/NotificationStyle.js","components/Notification/Notification.js","components/Bottom/BottomStyle.js","components/CourseSelector/CourseSelectorStyle.js","components/CourseSelector/CourseSelector.js","components/Bottom/Bottom.js","components/Course/CourseStyle.js","components/Course/Course.js","components/Main/Main.js","components/Verification/VerificationStyle.js","components/Verification/Verification.js","components/CoursePage/CoursePageStyle.js","components/CoursePage/CoursePage.js","components/Test/TestStyle.js","data/TestData.js","components/QuestionCard/QuestionCardStyle.js","components/Test/Test.js","components/QuestionCard/QuestionCard.js","index.js"],"names":["configure","enforceActions","LessonModel","lessons","lesson","name","code","language","item","value","this","findIndex","o","push","find","index","splice","decorate","observable","set","action","App","children","props","Component","withRouter","observer","MainStyle","styled","div","TitleStyle","TextStyle","p","nowrap","size","type","weight","Text","defaultProps","Title","main","icon","faChevronLeft","onClick","history","goBack","title","NotificationStyle","Notification","noti_text","BottomBack","BottomBackground","BottomStyle","CourseSelectorStyle","CourseSelector","state","active","path","location","pathname","addLesson","onBack","console","log","status","course","map","data","i","className","onAddLesson","key","Bottom","bottomOpened","setState","faPlus","CourseStyle","TestStyle","Course","nextPath","id","getLessonData","test_id","test","onOpenTest","faCheckCircle","color","progress","date","onChangeDirection","onClose","faTimes","Main","courses","notificationCounter","length","VerificationStyle","VerificationInner","VerificationYes","VerificationNo","Verification","deleteFromLessons","match","params","onDelete","CoursePageStyle","CoursePage","tests","TestQuestion","TestOptions","TestRusults","TestData","question","options","answer","QuestionCardStyle","Test","userAnswer","currentQuestion","correctAnswer","testEnd","score","questions","loadTest","answers","nextQuestionHandler","finishHandler","prevProps","prevState","isAnswerCorrect","style","faTimesCircle","option","setAnswer","bridge","send","ReactDOM","render","basename","exact","activated","document","getElementById"],"mappings":"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","file":"static/js/main.59bc8411.chunk.js","sourcesContent":["import { observable, configure, action, decorate } from 'mobx'\n\nconfigure({ enforceActions: 'observed' })\n\nclass LessonModel {\n\n    lessons = []\n    lesson = {\n        name: null,\n        code: null,\n        language: null\n    }\n\n\n    set(item, value) {\n        this[item] = value\n    }\n\n    addLesson(lesson){\n        let { code } = lesson\n        if(this.lessons.findIndex(o => o.code == code) == -1) {\n            this.lessons.push(lesson)\n        }\n    }\n\n    getLessonData(code) {\n        this.lesson = this.lessons.find(o => o.code == code)\n    }\n\n    deleteFromLessons(code) {\n        if(code){\n            let index = this.lessons.findIndex(o => o.code == code)\n            return this.lessons.splice(index, 1)\n        }\n    }\n}\n\ndecorate(LessonModel, {\n    lessons: observable,\n    lesson: observable,\n    set: action\n})\n\nexport default new LessonModel()","import React, { Component } from 'react'\n\n//mobx\nimport { observer } from 'mobx-react'\nimport LessonModel from './models/lesson'\nimport { withRouter } from 'react-router-dom'\nimport './App.css'\n\nclass App extends Component {\n\n\t\n\trender() {\n\t\tconst { children} = this.props\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{children}\n\t\t\t</>\n\t)\n}\n}\n\nexport default withRouter(observer(App));","import styled from 'styled-components'\n\nexport const MainStyle = styled.div \n`\n    .course-list {\n        margin-top: 1rem;\n    }\n`","import styled from 'styled-components'\n\nexport const TitleStyle = styled.div `\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: center;\n    grid-gap: 1rem;\n`","import styled from 'styled-components'\n\nconst TextStyle = styled.p \n`\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    white-space: ${props => props.nowrap ? 'nowrap' : 'normal'};\n    line-height: ${props => \n        props.size === 'medium' || props.size === 'small' || props.size === 'smallest' ?\n        '1.5'\n        :\n        props.size === 'big' ?\n        '1.25'\n        :\n        props.size === 'large'? \n        `1.25`\n        :\n        props.size === 'largest' &&\n        '1'\n    };\n    font-size: ${props => \n        props.size === 'small' ?\n        '15px'\n        :\n        props.size === 'default' ?\n        '18px'\n        :\n        props.size === 'big' &&\n        '24px'\n    };\n    color: ${props => \n        props.type === 'primary' ?\n        '#000'\n        :\n        props.type === 'secondary' ?\n        '#6a6a6a'\n        :\n        props.type === 'brand' &&\n        '#ffb600'\n    };\n    font-weight: ${props => \n        props.weight === 'bold' ? 'bold'\n        :\n        props.weight === 'light' && 'regular'\n    };\n\n`\n\nexport default TextStyle;","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\n\nimport TextStyle from './TextStyle'\n\nconst Text = ({ children, \n                size,\n                type, \n                weight, \n                nowrap }) => {\n\n        return (\n            <>\n                <TextStyle\n                    size={size}\n                    type={type}\n                    weight={weight}\n                    nowrap={nowrap}\n                    >\n                    {children}\n                </TextStyle>\n            </>\n        )\n}\n\nText.propTypes = {\n    children: PropTypes.node.isRequired,\n\n    size: PropTypes.oneOf([\n        'small',\n        'default',\n        'big'\n        ]).isRequired,\n\n    type: PropTypes.oneOf([\n        'inverted',\n        'default',\n        'primary',\n        'secondary'\n    ]).isRequired,\n\n    weight: PropTypes.oneOf([\n        'bold',\n        'light'\n    ]).isRequired,\n\n    nowrap: PropTypes.bool\n}\n\nText.defaultProps = {\n    children: null,\n    size: 'small',\n    type: 'default',\n    weight: 'light',\n    nowrap: false\n}\n\nexport default Text;","import React, { Component } from 'react'\nimport { TitleStyle } from './TitleStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\n\nimport Text from '../Text/Text'\n\nclass Title extends Component {\n\n\n    \n    render() {\n        return (\n            <>\n            { this.props.main ?\n            <>\n            <Text size='big' weight='bold'>Ваши предметы</Text>\n            </>\n            :\n            <>\n            <TitleStyle>\n                <FontAwesomeIcon icon={faChevronLeft} onClick={() => this.props.history.goBack()} />\n                <Text size='big' weight='bold'>{this.props.title}</Text>\n            </TitleStyle>\n            </>\n            }\n            </>\n        )\n    }\n} \nexport default withRouter(Title)","import styled from 'styled-components'\n\nexport const NotificationStyle = styled.div `\n    padding-top: 1rem;\n`","import React, { Component } from 'react'\nimport { NotificationStyle } from './NotificationStyle'\nimport Text from '../Text/Text'\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\n\nclass Notification extends Component {\n    render() {\n\n        let notifications = [   \n                            'Для начала работы - надо указать новый предмет',\n                            'В карточке будут храниться все ваши тестовики и прогресс. Кликните на карту, что бы начать.',\n                            'Самое время начать разбирать тестовики. Нажмите на кнопку снизу, что бы начать',\n                            'Ваш тест готов. Можете кликнуть на карточку и начинать работать'\n                            ]\n\n        let noti_text = notifications[this.props.type];\n        return (\n            <>\n                <NotificationStyle>\n                        <Text size='small' type='secondary'>{noti_text}</Text>\n                </NotificationStyle>\n            </>\n\n        )\n    }\n}\n\nexport default Notification","import styled from 'styled-components'\n\n\nexport const BottomBack = styled.div \n`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 1fr auto;\n`\n\nexport const BottomBackground = styled.div\n`\n    display: grid;\n`\n\nexport const BottomStyle = styled.div `\n    background: #FFB600;\n    display: grid;\n    margin: 0 1rem 1rem 1rem;\n    border-radius: 15px;\n\n    .caption {\n        display: grid;\n        padding: 1rem;\n        justify-content: center;\n        div {\n            display: grid;\n            grid-template-columns: auto 1fr;\n            align-items: center;\n            grid-gap: 0.5rem;\n        }\n    }\n\n    .course-selector {\n        margin: 0 1rem;\n    }\n`\nexport const BottomInner = styled.div \n`\n\n`\nexport const BottomCourseSelector = styled.div \n`\n\n`","import styled from 'styled-components'\n\n\nexport const CourseSelectorStyle = styled.div `\n    background: #fff;\n    margin-top: 1rem;\n    display: grid;\n    border-radius: 10px;\n    display: grid;\n    grid-gap: 0.5rem;\n    padding: 1rem;\n    .selector-item {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        padding: 0.5rem 0;\n    }\n`","import React, { Component } from 'react'\nimport { \n    CourseSelectorStyle\n} from './CourseSelectorStyle'\nimport Text from '../Text/Text'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass CourseSelector extends Component {\n\n    constructor(props) {\n        super()\n        \n        this.state = {\n            active: true,\n        }\n    }    \n\n    nextPath(path) {\n        if(path != this.props.location.pathname)\n            this.props.history.push(path)\n    }\n\n    onAddLesson(lesson) {\n            LessonModel.addLesson(lesson)\n            this.onBack()\n    }\n\n    onBack() {\n        this.props.history.goBack()        \n        this.props.history.goBack()        \n    }\n  \n    \n    render() {\n        console.log(this.state.status)\n\n        let courses = [\n            {\n                name: \"Kazakh history\",\n                language: \"KAZ\",\n                code: \"KHK\"\n            },\n            {\n                name: \"Kazakh history\",\n                language: \"RUS\",\n                code: \"KZR\"\n            },\n            {\n                name: \"Math history\",\n                language: \"RUS\",\n                code: \"MHR\"\n            }\n        ]\n\n        let course = courses.map((data, i) => (\n            <div className='selector-item'\n            onClick={() => this.onAddLesson(data)}\n            key={i}>\n                <Text size='default'>{data.name}</Text>\n                <Text size='default'>({data.language})</Text>\n            </div>\n        ))\n        \n    \n        return (\n            <>  \n                <CourseSelectorStyle>\n                        {course}\n                </CourseSelectorStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(CourseSelector))","import React, { Component } from 'react'\nimport { BottomStyle, BottomInner, BottomCourseSelector, BottomBackground,\nBottomBack } from './BottomStyle'\nimport Text from '../Text/Text'\nimport CourseSelector from '../CourseSelector/CourseSelector'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport {  withRouter } from 'react-router-dom'\n\nclass Bottom extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            bottomOpened: false\n        }\n    }\n\n    nextPath(path) {\n        if(path != this.props.location.pathname)\n            this.props.history.push(path)\n    }\n    \n    render() {\n        return (\n            <>\n            <BottomBack>\n                <BottomBackground onClick={() => this.setState({bottomOpened: false})}></BottomBackground>\n                <BottomStyle onClick={() => this.setState({bottomOpened: true})}>\n                    {this.state.bottomOpened &&\n                    <>\n                        <div className='course-selector'>\n                            <CourseSelector></CourseSelector>\n                        </div>\n                    </>}\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                </BottomStyle>\n            </BottomBack>\n            {/* {this.props.type === 'session' &&\n            <>\n                <BottomStyle onClick={() => this.setState({bottomOpened: true})}>\n                        {!this.state.bottomOpened ?\n                        <BottomInner>\n                        <div className='caption'>\n                            <div>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                            </div>\n                        </div>\n                        </BottomInner>\n                        :\n                        <BottomCourseSelector>\n                        <div className='course-selector'></div>\n                         <div className='caption'>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Добавить новый предмет</Text>\n                        </div>\n                        </BottomCourseSelector>\n                        }\n                </BottomStyle>\n            </>\n            } */}\n            {/* {this.props.type === 'test' &&\n                <>\n                <BottomStyle>\n                    <BottomInner>\n                        <div className='caption' onClick={() => this.nextPath('/new')}>\n                            <FontAwesomeIcon icon={faPlus} />\n                            <Text size='default'>Начать новый тест</Text>\n                        </div>\n                    </BottomInner>\n                </BottomStyle>\n                </>\n            }\n            {this.props.type === 'next-question' &&\n                <>\n                <BottomStyle>\n                    <BottomInner>\n                        <div className='caption'>\n                            <Text size='default'>Следующий вопрос</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                        </div>\n                    </BottomInner>\n                </BottomStyle>\n                </>\n            }\n            {this.props.type === 'submit' &&\n                <>\n                <BottomStyle>\n                    <BottomInner>\n                        <div className='caption'>\n                            <Text size='default'>Submit</Text>\n                            <FontAwesomeIcon icon={faChevronRight} />\n                        </div>\n                    </BottomInner>\n                </BottomStyle>\n                </>\n            }\n            {this.props.type === 'end-test' &&\n                <>\n                <BottomStyle>\n                    <BottomInner>\n                        <div className='caption'>\n                            <FontAwesomeIcon icon={faChevronLeft} />\n                            <Text size='default'>Go back to MyTests</Text>\n                        </div>\n                    </BottomInner>\n                </BottomStyle>\n                </>\n            } */}\n            </>\n        )\n    }\n}\n\nexport default withRouter(Bottom)","import styled from 'styled-components'\n\nexport const CourseStyle = styled.div \n`\n    padding: 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem;\n\n    .card {\n        display: grid;\n        grid-template-columns: 1fr auto;\n    }\n    \n    .title {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        grid-gap: 10px;\n    }\n\n    .progress {\n        display: grid;\n        grid-template-columns: auto auto;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n`\nexport const TestStyle = styled.div \n`\n    padding: 0.7rem 0.5rem;\n    background: #fbfbfb;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n    border-radius: 10px;\n    grid-gap: 1rem;\n    margin-bottom 1rem; \n      \n    .progress {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        align-items: center;\n        grid-gap: 0.5rem;\n    }\n`","import React, { Component } from 'react'\nimport { CourseStyle, TestStyle } from './CourseStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport LessonModel from '../../models/lesson'\n\nclass Course extends Component {    \n\n    nextPath(path) {\n        if(path != this.props.location.pathname)\n            this.props.history.push(path)\n    }\n    \n    onClose(name) {\n        this.nextPath('/close/' + this.props.id)\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onChangeDirection(id) {\n        this.nextPath('/course/' + id)\n        LessonModel.getLessonData(this.props.id)\n    }\n\n    onOpenTest(id) {\n        this.nextPath('/test/' + id)\n        LessonModel.getLessonData(this.props.test_id)\n        //need to add modes for the test\n    }\n    \n    render() {\n        return (\n            <>\n                {!this.props.test ?\n                <>\n                <CourseStyle>\n                    <div className='card' onClick={() => this.onChangeDirection(this.props.id)}>\n                    <div className='title'>\n                        <Text size='default'>{this.props.title}</Text>\n                        <Text size='default'>({this.props.language})</Text>\n                    </div>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{this.props.progress}%</div>\n                    </div>\n                    </div>\n                    <div className='delete' onClick={() => this.onClose(this.props.title)}>\n                        <FontAwesomeIcon icon={faTimes} color='#999'/>\n                    </div>\n                </CourseStyle>\n                </>\n                :\n                <>\n                <TestStyle onClick={() => this.onOpenTest(this.props.test_id)}>\n                    <div className='progress'>\n                        <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg'/>\n                        <div>{ this.props.progress }%</div>\n                    </div>\n                    <div className='date'>{ this.props.date }</div>\n                </TestStyle>\n                </>\n                }\n            </>\n        )\n    }\n}\n\nexport default withRouter(Course)","import React, { Component } from 'react'\nimport { MainStyle, MainBottom } from './MainStyle'\nimport Title from '../Title/Title'\nimport Notification from '../Notification/Notification'\nimport Bottom from '../Bottom/Bottom'\nimport Text from '../Text/Text'\nimport Course from '../Course/Course'\nimport LessonModel from '../../models/lesson'\n\nclass Main extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            notificationCounter: 0\n        }\n    }\n\n    courses = LessonModel.lessons\n\n    componentDidMount() {\n        if(this.courses.length > 0)\n            this.setState({notificationCounter: 1})\n    }    \n    \n    render() {\n        \n        let course = this.courses.map((data, i) => (\n            <Course \n            title={data.name} \n            progress='0' \n            language={data.language} \n            id={data.code} \n            key={i}/> ))\n\n        return (\n            <>\n                <MainStyle>\n                    <Title main ></Title>\n                        <Notification type={this.state.notificationCounter}/>\n                        <div className='course-list'>\n                            { course }\n                        </div>\n                </MainStyle>\n                <Bottom type='session'/>\n            </>\n        )\n    }\n}\n\nexport default Main\n","import styled from 'styled-components'\n\nexport const VerificationStyle = styled.div \n`\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.5);\n`\nexport const VerificationInner = styled.div\n`\n    background: #fff;\n    padding: 1rem;\n    border-radius: 10px;\n    margin: 0 2rem;\n\n    .options {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        margin-top: 1rem;\n        grid-gap: 1rem;\n    }\n`\nexport const VerificationYes = styled.div\n`\n    display: grid;\n    justify-content: center;\n    background: #f0f0f0;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n`\nexport const VerificationNo = styled.div\n`\n    display: grid;\n    justify-content: center;\n    padding: 0.5rem 1rem;\n    background: #ffb600;\n    border-radius: 5px;\n`","import React, { Component } from 'react'\nimport { VerificationStyle, VerificationInner, VerificationYes, VerificationNo } from './VerificationStyle'\nimport { withRouter } from 'react-router-dom'\nimport Text from '../Text/Text'\nimport LessonModel from '../../models/lesson'\nimport { observer } from 'mobx-react'\n\nclass Verification extends Component {\n    \n    onDelete(code) {\n        LessonModel.deleteFromLessons(code)\n        this.props.history.goBack()\n    }\n\n    componentDidMount() {\n        LessonModel.getLessonData(this.props.match.params.id)\n    }\n\n    render() {\n        let { name, language, code } = LessonModel.lesson\n        return (\n            <>\n                <VerificationStyle>\n                    <VerificationInner>\n                        <Text size='default'>Вы уверены, что хотите удалить предмет {`${name} (${language})`} ?</Text>\n                        <div className='options'>\n                            <VerificationYes onClick={() => this.onDelete(code)}>Yes</VerificationYes>\n                            <VerificationNo onClick={() => this.props.history.goBack()}>No</VerificationNo>\n                        </div>\n                    </VerificationInner>\n                </VerificationStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Verification))","import styled from 'styled-components'\n\nexport const CoursePageStyle = styled.div\n`\n    .test-list {\n        margin-top: 1rem;\n    }\n`","import React, { Component } from 'react'\nimport { CoursePageStyle } from './CoursePageStyle'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport LessonModel from '../../models/lesson'\nimport Notification from '../Notification/Notification'\nimport Course from '../Course/Course'\n\nclass CoursePage extends Component { \n    \n    constructor() {\n        super()\n        this.state = {\n            notificationCounter: 2\n        }\n    }\n\n    tests = [\n        {\n            progress: 10,\n            date: '20.02.20',\n            id: 1\n        }\n    ]\n    \n    componentDidMount() {\n        if(this.tests.length > 0)\n            this.setState({notificationCounter: 3})\n    }\n    \n    componentDidUpdate() {\n        LessonModel.getLessonData(this.props.match.params.id)\n        console.log(this.props.match.params.id)\n    }\n\n    render() {\n\n        let test = this.tests.map((data, i) => (\n            <Course test progress={data.progress} date={data.date} key={i} test_id={data.id} />\n        ))\n\n        let { name, language, code } = LessonModel.lesson\n        \n        return (\n            <>\n                <CoursePageStyle>  \n                    {name ?\n                        <Title title={`${name} (${language})`}/>\n                        :\n                        <> hello </>\n                    }\n                    <Notification type={this.state.notificationCounter} />\n                        <div className='test-list'>\n                            {test}\n                        </div>\n                </CoursePageStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(CoursePage)","import styled from 'styled-components'\n\nexport const TestStyle = styled.div \n`   \n    padding-bottom: 4rem;\n\n    .test-content {\n        display: grid;\n    }\n    .test-header {\n        background: #FFB600;\n        position: fixed;\n        top: 0;\n        left: 0;\n        padding: 1rem 1rem 0 1.5rem;\n        width: 100%;\n        display: grid;\n        grid-template-rows: 1fr 6fr;\n         .option-header {\n             padding: 0.5rem 0 0.5rem 2.5rem;\n             background: #fff;\n             margin-left: -1.5rem;\n         }\n    }\n`\nexport const TestQuestion = styled.div\n`\n    margin-top: 1rem;\n\n    .test-content-inner {\n        position: relative;\n    }\n    .test-question-wrapper {\n        display: grid;\n        grid-template-columns: repeat(20, 1fr);\n        grid-template-rows: auto 1fr;\n        position: absolute;\n        transition: transform 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    }\n    .test-question {\n        grid-gap: 0.5rem;\n        display: grid;\n        padding: 1rem;\n        width: calc(100vw - 5rem);\n        border-radius: 15px;\n        margin-right: 0.5rem;\n        background: #fff;\n        grid-template-rows: auto 1fr;\n    }\n    .status {\n        display: grid;\n        grid-template-columns: 1fr auto;\n    }\n    // .correct {\n        // background: rgba(130, 222, 139, 0.5);\n    // }\n    // .incorrect {\n        // background: rgba(255, 128, 128, 0.2);\n    // }\n`\nexport const TestOptions = styled.div \n`   display: grid;\n    grid-gap: 1rem;\n    margin-top: 35vh;\n\n    .test-option {\n        background: #fafafa;\n        border-radius: 10px;\n        dipslay: grid;\n        grid-gap: 1rem;\n        padding: 1rem;\n    }   \n    .correct {\n        background: rgba(130, 222, 139, 0.5);\n    }\n    .incorrect {\n        background: rgba(255, 128, 128, 0.2);\n    }\n`\nexport const TestRusults = styled.div \n`\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-gap: 3rem;\n\n    .test-answer {\n        display: grid;\n        grid-gap: 1rem;\n    }\n    .test-answer_item {\n        padding-bottom: 1rem;\n    }\n`","export const TestData = [\n    {\n        id: 0,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Административных условий', 'Равным образом рамки и место обучения кадров', 'Cистемы обучения кадров, соответствует насущным', 'Равным образом рамки и место обучения кадров', 'Равным образом рамки и место обучения кадров'],\n        answer: 'Административных условий'\n    },\n    {\n        id: 1,\n        question: 'Не следует, однако забывать, что новая модель организационной деятельности способствует подготовки и реализации?',\n        options: ['Bassan', 'Shmargun', 'Lirinirill', 'Darnurda', 'Darnurda'],\n        answer: 'Bassan'\n    },\n    {\n        id: 2,\n        question: 'What is your age?',\n        options: ['1', '2', '3', '4'],\n        answer: '2'\n    },\n    {\n        id: 3,\n        question: 'What is your pussy?',\n        options: ['Assanpussy', 'Argunpussy', 'Chirillpussy', 'Argunpussy'],\n        answer: 'Chirillpussy'\n    },\n]","import styled from 'styled-components'\n\nexport const QuestionCardStyle = styled.div\n`\n    \n`","import React, { Component } from 'react'\nimport { TestStyle, TestQuestion, TestOptions, TestRusults } from './TestStyle'\nimport { TestData } from '../../data/TestData'\nimport { withRouter } from 'react-router-dom'\nimport Title from '../Title/Title'\nimport Bottom from '../Bottom/Bottom'\nimport Text from '../Text/Text'\nimport QuestionCard from '../QuestionCard/QuestionCard'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { observer } from 'mobx-react'\n\nclass Test extends Component {\n\n    state = {\n        userAnswer: null,\n        currentQuestion: 0,\n        options: [],\n        correctAnswer: null,\n        testEnd: false,\n        score: 0,\n        questions: TestData.map(data => data.question),\n    }\n    \n    loadTest = () => {\n\n        const {currentQuestion} = this.state;\n        this.setState(() => {\n            return {\n                questions: TestData.map(data => data.question),\n                options: TestData[currentQuestion].options,\n                answers: TestData[currentQuestion].answer,\n                correctAnswer: TestData[currentQuestion].answer\n            }\n        })\n    }\n    \n    componentDidMount() {\n        this.loadTest();\n    }\n\n    nextQuestionHandler = () => {\n\n        const {userAnswer, correctAnswer, score} = this.state\n        \n        this.setState({\n            currentQuestion: this.state.currentQuestion + 1 \n        })\n        //increment the score\n        if(userAnswer === correctAnswer) {\n            this.setState({\n                score: score + 1\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { currentQuestion } = this.state;\n        if(this.state.currentQuestion !== prevState.currentQuestion) {\n            this.setState(() => {\n                return {\n                    questions: TestData.map(data => data.question),\n                    options: TestData[currentQuestion].options,\n                    answers: TestData[currentQuestion].answer,\n                    correctAnswer: TestData[currentQuestion].answer,\n                    userAnswer: null\n                }\n            })\n        }\n    }\n\n    setAnswer(answer) {\n        this.setState({\n            userAnswer: answer\n        })\n    }\n\n    finishHandler = () => {\n\n        const {userAnswer, correctAnswer, score} = this.state\n        \n        if(this.state.currentQuestion === TestData.length - 1) {\n            this.setState({\n                testEnd: true\n            })\n\n            //increment the score for final question\n            if(userAnswer === correctAnswer) {\n                this.setState({\n                    score: score + 1\n                })\n            }\n        }\n    }\n    \n    render() {\n        const { questions, options, currentQuestion, userAnswer, correctAnswer, testEnd } = this.state;\n\n        //new return to show final score\n        if(testEnd) {\n            return (\n                <TestRusults>\n                <div>hello, your final score is {this.state.score}</div>\n                <div className='test-answer'>\n                    need to remember:\n                    <div>\n                        {TestData.map((data, index) => (\n                            <div\n                            className='test-answer_item'\n                            key={index}>  \n                                <Text type='secondary'>\n                                    (incorrect ans number) из {TestData.length}\n                                </Text>\n                                <div> \n                                {data.question}\n                                </div>\n                                {data.answer}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <Bottom type='end-test'/>\n                </TestRusults>\n            )\n        }\n\n        let isAnswerCorrect, answer\n\n        if(userAnswer == correctAnswer){\n            isAnswerCorrect = true\n        } else {\n            isAnswerCorrect = false\n        }\n        \n        return (\n            <>\n                <TestStyle>\n                    <div className='test-header'>\n                    <Title title='Name of course' />\n                    <div className='test-content'>\n                    <TestQuestion>\n                        <div className={`test-content-inner active-slide-${currentQuestion}`}>\n                        <div \n                            className='test-question-wrapper'\n                            style={{\n                                'transform': `translateX(-${currentQuestion*(100/TestData.length)}%)`\n                            }}\n                        >\n                        {questions.map((data, i) => \n                        <div\n                            key={i}\n                            className={`test-question\n                            ${userAnswer === correctAnswer ? 'correct' :\n                            userAnswer && !isAnswerCorrect && 'incorrect' }`}\n                        >\n                            <div className='status'>\n                            <Text type='secondary'>\n                                Вопрос {currentQuestion + 1} из {TestData.length}\n                            </Text>\n                            {userAnswer === correctAnswer ?\n                            <>\n                                <FontAwesomeIcon icon={faCheckCircle} color='#31B43D' size='lg' />\n                            </>\n                            :\n                            userAnswer && !isAnswerCorrect &&\n                            <>\n                            <FontAwesomeIcon icon={faTimesCircle} color='#FF8080' size='lg' />\n                            \n                            </>}\n                            </div>\n                            <div className='questions'>\n                                {data}\n                            </div>\n                        </div>\n                        )}\n                        <div></div>\n                        </div>\n                        </div>\n                    </TestQuestion>\n                    </div>\n                        <div className='option-header'>\n                            <Text type='secondary'>Варианты ответов:</Text>\n                        </div>\n                    </div>\n                    <TestOptions>\n                            {options.map(option => (\n                                <div\n                                key={option.id}\n                                className={`test-option\n                                ${userAnswer && option == correctAnswer ? 'correct' :\n                                userAnswer == option && !isAnswerCorrect && 'incorrect' }\n                                `}\n                                onClick={() => {\n                                    !userAnswer ? this.setAnswer(option) : answer = null\n                                }}\n                                >\n                                    {option}\n                                </div>\n                            ))}\n                    </TestOptions>\n                    { currentQuestion < TestData.length - 1 &&\n                    <div onClick={this.nextQuestionHandler}>\n                        <Bottom type='next-question'/>\n                    </div>\n                    }\n                    { currentQuestion === TestData.length - 1 &&\n                    <div onClick={this.finishHandler}>\n                        <Bottom type='submit'/>\n                    </div>\n                    }\n                </TestStyle>\n            </>\n        )\n    }\n}\n\nexport default withRouter(observer(Test))","import React, { Component } from 'react'\nimport { QuestionCardStyle } from './QuestionCardStyle'\n\nclass QuestionCard extends Component {\n    \n    render() {\n        return (\n            <>\n                <QuestionCardStyle>\n                    {this.props.questions.map(data => \n                    <div>{data}</div>\n                    )}\n                </QuestionCardStyle>\n            </>\n        )\n    }\n}\n\nexport default QuestionCard","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\nimport './index.css'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\n\nimport Main from './components/Main/Main'\nimport Bottom from './components/Bottom/Bottom'\nimport CourseSelector from './components/CourseSelector/CourseSelector';\nimport Verification from './components/Verification/Verification'\nimport CoursePage from './components/CoursePage/CoursePage';\nimport Test from './components/Test/Test'\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\nlet url = \"mentorium-vk-app\"\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n    // serviceWorker.registre();\n    \nReactDOM.render(\n    <BrowserRouter basename={url}>\n        <App>\n            <Route\n            exact\n            path=\"/\"\n            render={() => {\n                return (\n                    <>\n                        <Main/> \n                    </>\n                )\n            }}\n            />\n            <Route\n            exact\n            path=\"/new\"\n            render={() => {\n                return (\n                    <>\n                        <Main/>\n                        <Bottom type='session'/>\n                    </>\n                )\n            }}\n            />\n            <Route\n            exact\n            path=\"/course-selector\"\n            render={() => {\n                return (\n                    <>\n                        <Main/>\n                        <CourseSelector activated/>\n                        <Bottom activated type='session'/>\n                    </>\n                )\n            }}\n            />\n            <Route\n            exact\n            path=\"/close/:id\"\n            render={() => {\n                return (\n                    <>\n                        <Main/>\n                        <Bottom type='session'/>\n                        <Verification/>\n                    </>\n                )\n            }}/>\n            <Route\n            exact\n            path=\"/course/:id\"\n            render={() => {\n                return (\n                    <>\n                        <CoursePage/>\n                        <Bottom type='test'/>\n                    </>\n                )\n            }}/>\n            <Route\n            exact\n            path=\"/test/:test_id\"\n            render={() => {\n                return (\n                    <>\n                        <Test/>\n                    </>\n                )\n            }}\n            />\n        </App>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}